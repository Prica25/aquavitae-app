{"pytest_version": "6.2.4", "$report_type": "SessionStart"}
{"nodeid": "", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "test/test_base_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "test/test_base_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "test/test_base_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "test/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/app/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/biochemical_data/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/diagnosis/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/diary/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/forbidden_foods/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/nutritional_plan/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/plan_meals/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/specificity/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/database/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_with_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 32, "TestCreateAnthropometricData.test_create_new_anthropometric_data_with_date"], "keywords": {"test_create_new_anthropometric_data_with_date": 1, "aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.21541644599983556, "testdox_title": "Success: Create a anthropometric data with a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_with_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 32, "TestCreateAnthropometricData.test_create_new_anthropometric_data_with_date"], "keywords": {"test_create_new_anthropometric_data_with_date": 1, "aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.021403461999398132, "testdox_title": "Success: Create a anthropometric data with a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_with_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 32, "TestCreateAnthropometricData.test_create_new_anthropometric_data_with_date"], "keywords": {"test_create_new_anthropometric_data_with_date": 1, "aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015013299980637385, "testdox_title": "Success: Create a anthropometric data with a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_without_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 52, "TestCreateAnthropometricData.test_create_new_anthropometric_data_without_date"], "keywords": {"aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "test_create_new_anthropometric_data_without_date": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002199000000473461, "testdox_title": "Success: Create a anthropometric data without a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_without_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 52, "TestCreateAnthropometricData.test_create_new_anthropometric_data_without_date"], "keywords": {"aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "test_create_new_anthropometric_data_without_date": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008374737999474746, "testdox_title": "Success: Create a anthropometric data without a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_without_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 52, "TestCreateAnthropometricData.test_create_new_anthropometric_data_without_date"], "keywords": {"aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "test_create_new_anthropometric_data_without_date": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001597320006112568, "testdox_title": "Success: Create a anthropometric data without a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_field", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 71, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_field"], "keywords": {"aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "()": 1, "test_create_anthropometric_data_without_required_field": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022500500017486047, "testdox_title": "Failure: Create a anthropometric data without required fields", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_field", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 71, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_field"], "keywords": {"aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "()": 1, "test_create_anthropometric_data_without_required_field": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002180962000238651, "testdox_title": "Failure: Create a anthropometric data without required fields", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_field", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 71, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_field"], "keywords": {"aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "()": 1, "test_create_anthropometric_data_without_required_field": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014243799978430616, "testdox_title": "Failure: Create a anthropometric data without required fields", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_authorization", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 105, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_authorization"], "keywords": {"aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_anthropometric_data_without_required_authorization": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020244400002411567, "testdox_title": "Failure: Create a anthropometric data without authorization", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_authorization", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 105, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_authorization"], "keywords": {"aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_anthropometric_data_without_required_authorization": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011528719996931613, "testdox_title": "Failure: Create a anthropometric data without authorization", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_authorization", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 105, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_authorization"], "keywords": {"aquavitae-app": 1, "TestCreateAnthropometricData": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_anthropometric_data_without_required_authorization": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013082199984637555, "testdox_title": "Failure: Create a anthropometric data without authorization", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_get_current_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 123, "TestGetUserAnthropometricData.test_get_current_user_anthropometric_data"], "keywords": {"TestGetUserAnthropometricData": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "test_get_current_user_anthropometric_data": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.056386667999504425, "testdox_title": "Success: Get current user anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_get_current_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 123, "TestGetUserAnthropometricData.test_get_current_user_anthropometric_data"], "keywords": {"TestGetUserAnthropometricData": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "test_get_current_user_anthropometric_data": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.011958484000388125, "testdox_title": "Success: Get current user anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_get_current_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 123, "TestGetUserAnthropometricData.test_get_current_user_anthropometric_data"], "keywords": {"TestGetUserAnthropometricData": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "test_get_current_user_anthropometric_data": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001768989995980519, "testdox_title": "Success: Get current user anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 139, "TestGetUserAnthropometricData.test_no_authentication"], "keywords": {"TestGetUserAnthropometricData": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002430849999655038, "testdox_title": "Failure: Get current user anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 139, "TestGetUserAnthropometricData.test_no_authentication"], "keywords": {"TestGetUserAnthropometricData": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013229179994596052, "testdox_title": "Failure: Get current user anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 139, "TestGetUserAnthropometricData.test_no_authentication"], "keywords": {"TestGetUserAnthropometricData": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001368000002912595, "testdox_title": "Failure: Get current user anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_different_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 144, "TestGetUserAnthropometricData.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "TestGetUserAnthropometricData": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002076439996017143, "testdox_title": "Failure: Get current user anthropometric data without anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_different_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 144, "TestGetUserAnthropometricData.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "TestGetUserAnthropometricData": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014028639998286963, "testdox_title": "Failure: Get current user anthropometric data without anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_different_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 144, "TestGetUserAnthropometricData.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "TestGetUserAnthropometricData": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011736200031009503, "testdox_title": "Failure: Get current user anthropometric data without anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 156, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_by_user_id"], "keywords": {"aquavitae-app": 1, "test_get_anthropometric_data_by_user_id": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002254050004921737, "testdox_title": "Success: Get anthropometric data by user id", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 156, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_by_user_id"], "keywords": {"aquavitae-app": 1, "test_get_anthropometric_data_by_user_id": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.01221632699980546, "testdox_title": "Success: Get anthropometric data by user id", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 156, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_by_user_id"], "keywords": {"aquavitae-app": 1, "test_get_anthropometric_data_by_user_id": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015542399978585308, "testdox_title": "Success: Get anthropometric data by user id", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_without_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 174, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_without_user_id"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_get_anthropometric_data_without_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00035962199945061, "testdox_title": "Failure: Get anthropometric data without required search field", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_without_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 174, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_without_user_id"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_get_anthropometric_data_without_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002196542999627127, "testdox_title": "Failure: Get anthropometric data without required search field", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_without_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 174, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_without_user_id"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_get_anthropometric_data_without_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012715699995169416, "testdox_title": "Failure: Get anthropometric data without required search field", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 187, "TestGetAnthropometricDataByUserId.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0546871189999365, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 187, "TestGetAnthropometricDataByUserId.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001377209999191109, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 187, "TestGetAnthropometricDataByUserId.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001142149994848296, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 197, "TestGetAnthropometricDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027159299952472793, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 197, "TestGetAnthropometricDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015535900001850678, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 197, "TestGetAnthropometricDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAnthropometricDataByUserId": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016018699989217566, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 218, "TestGetAnthropometricDataId.test_get_anthropometric_data_by_user_id"], "keywords": {"aquavitae-app": 1, "test_get_anthropometric_data_by_user_id": 1, "it": 1, "pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022004699985700427, "testdox_title": "Success: Get anthropometric data id", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 218, "TestGetAnthropometricDataId.test_get_anthropometric_data_by_user_id"], "keywords": {"aquavitae-app": 1, "test_get_anthropometric_data_by_user_id": 1, "it": 1, "pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008087887999863597, "testdox_title": "Success: Get anthropometric data id", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 218, "TestGetAnthropometricDataId.test_get_anthropometric_data_by_user_id"], "keywords": {"aquavitae-app": 1, "test_get_anthropometric_data_by_user_id": 1, "it": 1, "pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001411339999322081, "testdox_title": "Success: Get anthropometric data id", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 234, "TestGetAnthropometricDataId.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023741399945720332, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 234, "TestGetAnthropometricDataId.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011512460005178582, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 234, "TestGetAnthropometricDataId.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011873299990838859, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 241, "TestGetAnthropometricDataId.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002680970001165406, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 241, "TestGetAnthropometricDataId.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013717450001422549, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 241, "TestGetAnthropometricDataId.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000142844000038167, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_update_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 299, "TestUpdateAnthropometricData.test_update_anthropometric_data"], "keywords": {"aquavitae-app": 1, "it": 1, "test_update_anthropometric_data": 1, "TestUpdateAnthropometricData": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002655420003065956, "testdox_title": "Success: Update user anthropometric data", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_update_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 299, "TestUpdateAnthropometricData.test_update_anthropometric_data"], "keywords": {"aquavitae-app": 1, "it": 1, "test_update_anthropometric_data": 1, "TestUpdateAnthropometricData": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.020993803999772354, "testdox_title": "Success: Update user anthropometric data", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_update_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 299, "TestUpdateAnthropometricData.test_update_anthropometric_data"], "keywords": {"aquavitae-app": 1, "it": 1, "test_update_anthropometric_data": 1, "TestUpdateAnthropometricData": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014336399999592686, "testdox_title": "Success: Update user anthropometric data", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 322, "TestUpdateAnthropometricData.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestUpdateAnthropometricData": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023768199935148004, "testdox_title": "Failure: Update anthropometric data without authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 322, "TestUpdateAnthropometricData.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestUpdateAnthropometricData": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015680129999964265, "testdox_title": "Failure: Update anthropometric data without authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 322, "TestUpdateAnthropometricData.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestUpdateAnthropometricData": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014317099976324243, "testdox_title": "Failure: Update anthropometric data without authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 327, "TestUpdateAnthropometricData.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "it": 1, "test_no_required_authentication": 1, "TestUpdateAnthropometricData": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003092890001425985, "testdox_title": "Failure: Update anthropometric data without required authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 327, "TestUpdateAnthropometricData.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "it": 1, "test_no_required_authentication": 1, "TestUpdateAnthropometricData": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017565810003361548, "testdox_title": "Failure: Update anthropometric data without required authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 327, "TestUpdateAnthropometricData.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "it": 1, "test_no_required_authentication": 1, "TestUpdateAnthropometricData": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014762699993298156, "testdox_title": "Failure: Update anthropometric data without required authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 339, "TestDeleteAnthropometricData.test_delete_user_anthropometric_data"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "test_delete_user_anthropometric_data": 1, "()": 1, "TestDeleteAnthropometricData": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00033289599923591595, "testdox_title": "Success: Delete anthropometric data", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 339, "TestDeleteAnthropometricData.test_delete_user_anthropometric_data"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "test_delete_user_anthropometric_data": 1, "()": 1, "TestDeleteAnthropometricData": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.012587727999743947, "testdox_title": "Success: Delete anthropometric data", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 339, "TestDeleteAnthropometricData.test_delete_user_anthropometric_data"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "test_delete_user_anthropometric_data": 1, "()": 1, "TestDeleteAnthropometricData": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014305600052466616, "testdox_title": "Success: Delete anthropometric data", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_same_user", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 360, "TestDeleteAnthropometricData.test_delete_same_user"], "keywords": {"aquavitae-app": 1, "it": 1, "test_delete_same_user": 1, "pytestmark": 1, "()": 1, "TestDeleteAnthropometricData": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002458380004100036, "testdox_title": "Failure: Delete the same anthropometric data twice", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_same_user", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 360, "TestDeleteAnthropometricData.test_delete_same_user"], "keywords": {"aquavitae-app": 1, "it": 1, "test_delete_same_user": 1, "pytestmark": 1, "()": 1, "TestDeleteAnthropometricData": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0045059630001560436, "testdox_title": "Failure: Delete the same anthropometric data twice", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_same_user", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 360, "TestDeleteAnthropometricData.test_delete_same_user"], "keywords": {"aquavitae-app": 1, "it": 1, "test_delete_same_user": 1, "pytestmark": 1, "()": 1, "TestDeleteAnthropometricData": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015965599959599786, "testdox_title": "Failure: Delete the same anthropometric data twice", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 373, "TestDeleteAnthropometricData.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "TestDeleteAnthropometricData": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002226249998784624, "testdox_title": "Failure: Delete anthropometric data without authentication", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 373, "TestDeleteAnthropometricData.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "TestDeleteAnthropometricData": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001181910000013886, "testdox_title": "Failure: Delete anthropometric data without authentication", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 373, "TestDeleteAnthropometricData.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "TestDeleteAnthropometricData": 1, "describe": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.001226035000399861, "testdox_title": "Failure: Delete anthropometric data without authentication", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_new_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 34, "TestCreateAppointment.test_create_new_appointment"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "test_create_new_appointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.08462459000020317, "testdox_title": "Success: Create a appointment", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_new_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 34, "TestCreateAppointment.test_create_new_appointment"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "test_create_new_appointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.01795453899921995, "testdox_title": "Success: Create a appointment", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_new_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 34, "TestCreateAppointment.test_create_new_appointment"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "test_create_new_appointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013075900005787844, "testdox_title": "Success: Create a appointment", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 53, "TestCreateAppointment.test_create_appointment_without_required_field"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "test_create_appointment_without_required_field": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022324900055537, "testdox_title": "Failure: Create a appointment without required fields", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 53, "TestCreateAppointment.test_create_appointment_without_required_field"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "test_create_appointment_without_required_field": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018739389997790568, "testdox_title": "Failure: Create a appointment without required fields", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 53, "TestCreateAppointment.test_create_appointment_without_required_field"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "test_create_appointment_without_required_field": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011045300016121473, "testdox_title": "Failure: Create a appointment without required fields", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 71, "TestCreateAppointment.test_create_appointment_without_required_authorization"], "keywords": {"aquavitae-app": 1, "test_create_appointment_without_required_authorization": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.11388686400005099, "testdox_title": "Failure: Create a appointment without required authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 71, "TestCreateAppointment.test_create_appointment_without_required_authorization"], "keywords": {"aquavitae-app": 1, "test_create_appointment_without_required_authorization": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015859260001889197, "testdox_title": "Failure: Create a appointment without required authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 71, "TestCreateAppointment.test_create_appointment_without_required_authorization"], "keywords": {"aquavitae-app": 1, "test_create_appointment_without_required_authorization": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012410799990902888, "testdox_title": "Failure: Create a appointment without required authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 89, "TestCreateAppointment.test_create_appointment_goal_without_required_authorization"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "test_create_appointment_goal_without_required_authorization": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020451300042623188, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 89, "TestCreateAppointment.test_create_appointment_goal_without_required_authorization"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "test_create_appointment_goal_without_required_authorization": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012633169999389793, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 89, "TestCreateAppointment.test_create_appointment_goal_without_required_authorization"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "test_create_appointment_goal_without_required_authorization": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011107699992862763, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_get_all_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 109, "TestGetAllAppointment.test_get_all_appointment"], "keywords": {"TestGetAllAppointment": 1, "aquavitae-app": 1, "asyncio": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_get_all_appointment": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001998509997065412, "testdox_title": "Success: Get all appointments", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_get_all_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 109, "TestGetAllAppointment.test_get_all_appointment"], "keywords": {"TestGetAllAppointment": 1, "aquavitae-app": 1, "asyncio": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_get_all_appointment": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.014488263999737683, "testdox_title": "Success: Get all appointments", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_get_all_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 109, "TestGetAllAppointment.test_get_all_appointment"], "keywords": {"TestGetAllAppointment": 1, "aquavitae-app": 1, "asyncio": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_get_all_appointment": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015634700048394734, "testdox_title": "Success: Get all appointments", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 124, "TestGetAllAppointment.test_no_authentication"], "keywords": {"TestGetAllAppointment": 1, "aquavitae-app": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003023270000994671, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 124, "TestGetAllAppointment.test_no_authentication"], "keywords": {"TestGetAllAppointment": 1, "aquavitae-app": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001520566999715811, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 124, "TestGetAllAppointment.test_no_authentication"], "keywords": {"TestGetAllAppointment": 1, "aquavitae-app": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001327739992120769, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 132, "TestGetAllAppointment.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "TestGetAllAppointment": 1, "aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00034642599985090783, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 132, "TestGetAllAppointment.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "TestGetAllAppointment": 1, "aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017170299997815164, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 132, "TestGetAllAppointment.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "TestGetAllAppointment": 1, "aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015932899987092242, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_get_appointment_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 152, "TestGetAppointmentById.test_get_appointment_by_id"], "keywords": {"aquavitae-app": 1, "test_get_appointment_by_id": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023994999992282828, "testdox_title": "Success: Get appointment by id", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_get_appointment_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 152, "TestGetAppointmentById.test_get_appointment_by_id"], "keywords": {"aquavitae-app": 1, "test_get_appointment_by_id": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.011710021999533637, "testdox_title": "Success: Get appointment by id", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_get_appointment_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 152, "TestGetAppointmentById.test_get_appointment_by_id"], "keywords": {"aquavitae-app": 1, "test_get_appointment_by_id": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015893599993432872, "testdox_title": "Success: Get appointment by id", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 168, "TestGetAppointmentById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003018019997398369, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 168, "TestGetAppointmentById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015394450001622317, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 168, "TestGetAppointmentById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012761600009980612, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 175, "TestGetAppointmentById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "parametrize": 1, "TestGetAppointmentById": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00035939299959864, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 175, "TestGetAppointmentById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "parametrize": 1, "TestGetAppointmentById": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015846300002522185, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 175, "TestGetAppointmentById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "parametrize": 1, "TestGetAppointmentById": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013558199952967698, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 191, "TestUpdateAppointment.test_update_appointment_goal"], "keywords": {"aquavitae-app": 1, "TestUpdateAppointment": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "test_update_appointment_goal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020459300048969453, "testdox_title": "Success: Update appointment removing goals", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 191, "TestUpdateAppointment.test_update_appointment_goal"], "keywords": {"aquavitae-app": 1, "TestUpdateAppointment": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "test_update_appointment_goal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.038727735999600554, "testdox_title": "Success: Update appointment removing goals", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 191, "TestUpdateAppointment.test_update_appointment_goal"], "keywords": {"aquavitae-app": 1, "TestUpdateAppointment": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "test_update_appointment_goal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001349100002698833, "testdox_title": "Success: Update appointment removing goals", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 214, "TestUpdateAppointment.test_no_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdateAppointment": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021856600051251007, "testdox_title": "Failure: Update appointment without authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 214, "TestUpdateAppointment.test_no_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdateAppointment": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012147850002293126, "testdox_title": "Failure: Update appointment without authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 214, "TestUpdateAppointment.test_no_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdateAppointment": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001096460000553634, "testdox_title": "Failure: Update appointment without authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 219, "TestUpdateAppointment.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdateAppointment": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "test_no_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019871799941029167, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 219, "TestUpdateAppointment.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdateAppointment": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "test_no_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013438699998005177, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 219, "TestUpdateAppointment.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdateAppointment": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "test_no_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011017799988621846, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 231, "TestDeleteAppointment.test_delete_appointment"], "keywords": {"aquavitae-app": 1, "test_delete_appointment": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001976749999812455, "testdox_title": "Success: Delete appointment", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 231, "TestDeleteAppointment.test_delete_appointment"], "keywords": {"aquavitae-app": 1, "test_delete_appointment": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0196791079997638, "testdox_title": "Success: Delete appointment", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 231, "TestDeleteAppointment.test_delete_appointment"], "keywords": {"aquavitae-app": 1, "test_delete_appointment": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00020109600063733524, "testdox_title": "Success: Delete appointment", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment_relationships", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 250, "TestDeleteAppointment.test_delete_appointment_relationships"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "test_delete_appointment_relationships": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003333330005261814, "testdox_title": "Success: Deleted appointment relationships must be deleted", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment_relationships", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 250, "TestDeleteAppointment.test_delete_appointment_relationships"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "test_delete_appointment_relationships": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014238530002330663, "testdox_title": "Success: Deleted appointment relationships must be deleted", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment_relationships", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 250, "TestDeleteAppointment.test_delete_appointment_relationships"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "test_delete_appointment_relationships": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018055700002150843, "testdox_title": "Success: Deleted appointment relationships must be deleted", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 266, "TestDeleteAppointment.test_delete_same_appointment_goal"], "keywords": {"aquavitae-app": 1, "test_delete_same_appointment_goal": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003251809994253563, "testdox_title": "Failure: Delete the same appointment twice", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 266, "TestDeleteAppointment.test_delete_same_appointment_goal"], "keywords": {"aquavitae-app": 1, "test_delete_same_appointment_goal": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.015363857999545871, "testdox_title": "Failure: Delete the same appointment twice", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 266, "TestDeleteAppointment.test_delete_same_appointment_goal"], "keywords": {"aquavitae-app": 1, "test_delete_same_appointment_goal": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001336679997621104, "testdox_title": "Failure: Delete the same appointment twice", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 279, "TestDeleteAppointment.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002091999995172955, "testdox_title": "Failure: Delete appointment without authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 279, "TestDeleteAppointment.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013072570000076666, "testdox_title": "Failure: Delete appointment without authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 279, "TestDeleteAppointment.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010945299982267898, "testdox_title": "Failure: Delete appointment without authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 284, "TestDeleteAppointment.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "test_no_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020009099989692913, "testdox_title": "Failure: Delete appointment without required authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 284, "TestDeleteAppointment.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "test_no_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0020738069997605635, "testdox_title": "Failure: Delete appointment without required authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 284, "TestDeleteAppointment.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "it": 1, "TestDeleteAppointment": 1, "test_no_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.001984667999749945, "testdox_title": "Failure: Delete appointment without required authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_new_appointment_goal_with_date", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 27, "TestCreateAppointmentGoal.test_create_new_appointment_goal_with_date"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "test_create_new_appointment_goal_with_date": 1, "pytestmark": 1, "()": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.08479944600003364, "testdox_title": "Success: Create a appointment goal", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_new_appointment_goal_with_date", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 27, "TestCreateAppointmentGoal.test_create_new_appointment_goal_with_date"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "test_create_new_appointment_goal_with_date": 1, "pytestmark": 1, "()": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005667651999829104, "testdox_title": "Success: Create a appointment goal", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_new_appointment_goal_with_date", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 27, "TestCreateAppointmentGoal.test_create_new_appointment_goal_with_date"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "test_create_new_appointment_goal_with_date": 1, "pytestmark": 1, "()": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001316699999733828, "testdox_title": "Success: Create a appointment goal", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 46, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_field"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "test_create_appointment_goal_without_required_field": 1, "()": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022320200059766648, "testdox_title": "Failure: Create a appointment goal without required fields", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 46, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_field"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "test_create_appointment_goal_without_required_field": 1, "()": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018998300001840107, "testdox_title": "Failure: Create a appointment goal without required fields", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 46, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_field"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "test_create_appointment_goal_without_required_field": 1, "()": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011177200030942913, "testdox_title": "Failure: Create a appointment goal without required fields", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 64, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_authorization"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "test_create_appointment_goal_without_required_authorization": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.11859425100010412, "testdox_title": "Failure: Create a appointment goal without required authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 64, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_authorization"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "test_create_appointment_goal_without_required_authorization": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0022160700000313227, "testdox_title": "Failure: Create a appointment goal without required authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 64, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_authorization"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "test_create_appointment_goal_without_required_authorization": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00027341700024408055, "testdox_title": "Failure: Create a appointment goal without required authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 80, "TestCreateAppointmentGoal.test_create_appointment_goal_without_authorization"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_create_appointment_goal_without_authorization": 1, "it": 1, "pytestmark": 1, "()": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022366799930750858, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 80, "TestCreateAppointmentGoal.test_create_appointment_goal_without_authorization"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_create_appointment_goal_without_authorization": 1, "it": 1, "pytestmark": 1, "()": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001486689000557817, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 80, "TestCreateAppointmentGoal.test_create_appointment_goal_without_authorization"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_create_appointment_goal_without_authorization": 1, "it": 1, "pytestmark": 1, "()": 1, "TestCreateAppointmentGoal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012130699997214833, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_get_all_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 98, "TestGetAllAppointmentGoal.test_get_all_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestGetAllAppointmentGoal": 1, "it": 1, "test_get_all_appointment_goal": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021013700006733416, "testdox_title": "Success: Get all appointment goal", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_get_all_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 98, "TestGetAllAppointmentGoal.test_get_all_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestGetAllAppointmentGoal": 1, "it": 1, "test_get_all_appointment_goal": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005914448999646993, "testdox_title": "Success: Get all appointment goal", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_get_all_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 98, "TestGetAllAppointmentGoal.test_get_all_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestGetAllAppointmentGoal": 1, "it": 1, "test_get_all_appointment_goal": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013017100081924582, "testdox_title": "Success: Get all appointment goal", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 115, "TestGetAllAppointmentGoal.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_no_authentication": 1, "TestGetAllAppointmentGoal": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022945599994272925, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 115, "TestGetAllAppointmentGoal.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_no_authentication": 1, "TestGetAllAppointmentGoal": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011542990005182219, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 115, "TestGetAllAppointmentGoal.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_no_authentication": 1, "TestGetAllAppointmentGoal": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010747099986474495, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 123, "TestGetAllAppointmentGoal.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestGetAllAppointmentGoal": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000268777999735903, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 123, "TestGetAllAppointmentGoal.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestGetAllAppointmentGoal": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001339356999778829, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 123, "TestGetAllAppointmentGoal.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestGetAllAppointmentGoal": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013019600010011345, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_get_appointment_goal_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 143, "TestGetAppointmentGoalById.test_get_appointment_goal_by_id"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "test_get_appointment_goal_by_id": 1, "TestGetAppointmentGoalById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019594399964262266, "testdox_title": "Success: Get appointment goal by id", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_get_appointment_goal_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 143, "TestGetAppointmentGoalById.test_get_appointment_goal_by_id"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "test_get_appointment_goal_by_id": 1, "TestGetAppointmentGoalById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003644342999905348, "testdox_title": "Success: Get appointment goal by id", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_get_appointment_goal_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 143, "TestGetAppointmentGoalById.test_get_appointment_goal_by_id"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "test_get_appointment_goal_by_id": 1, "TestGetAppointmentGoalById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012805799997295253, "testdox_title": "Success: Get appointment goal by id", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 159, "TestGetAppointmentGoalById.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestGetAppointmentGoalById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022849200013297377, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 159, "TestGetAppointmentGoalById.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestGetAppointmentGoalById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001331000999925891, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 159, "TestGetAppointmentGoalById.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestGetAppointmentGoalById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013313199997355696, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 166, "TestGetAppointmentGoalById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "TestGetAppointmentGoalById": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002887540003939648, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 166, "TestGetAppointmentGoalById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "TestGetAppointmentGoalById": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001784639999641513, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 166, "TestGetAppointmentGoalById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "TestGetAppointmentGoalById": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001440640007785987, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 182, "TestUpdateAppointmentGoal.test_update_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestUpdateAppointmentGoal": 1, "it": 1, "pytestmark": 1, "()": 1, "test_update_appointment_goal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022190300023794407, "testdox_title": "Success: Update appointment goal", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 182, "TestUpdateAppointmentGoal.test_update_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestUpdateAppointmentGoal": 1, "it": 1, "pytestmark": 1, "()": 1, "test_update_appointment_goal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007433777000187547, "testdox_title": "Success: Update appointment goal", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 182, "TestUpdateAppointmentGoal.test_update_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestUpdateAppointmentGoal": 1, "it": 1, "pytestmark": 1, "()": 1, "test_update_appointment_goal": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013979400046082446, "testdox_title": "Success: Update appointment goal", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 205, "TestUpdateAppointmentGoal.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_no_authentication": 1, "TestUpdateAppointmentGoal": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002244830002382514, "testdox_title": "Failure: Update appointment goal without authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 205, "TestUpdateAppointmentGoal.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_no_authentication": 1, "TestUpdateAppointmentGoal": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015550439993603504, "testdox_title": "Failure: Update appointment goal without authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 205, "TestUpdateAppointmentGoal.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_no_authentication": 1, "TestUpdateAppointmentGoal": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013322099948709365, "testdox_title": "Failure: Update appointment goal without authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 210, "TestUpdateAppointmentGoal.test_no_required_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestUpdateAppointmentGoal": 1, "it": 1, "test_no_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021538100008910988, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 210, "TestUpdateAppointmentGoal.test_no_required_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestUpdateAppointmentGoal": 1, "it": 1, "test_no_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016474949998155353, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 210, "TestUpdateAppointmentGoal.test_no_required_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestUpdateAppointmentGoal": 1, "it": 1, "test_no_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001379449995511095, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 222, "TestDeleteAppointmentGoal.test_delete_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "test_delete_appointment_goal": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022014799924363615, "testdox_title": "Success: Delete appointment goal", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 222, "TestDeleteAppointmentGoal.test_delete_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "test_delete_appointment_goal": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.018670433999432134, "testdox_title": "Success: Delete appointment goal", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 222, "TestDeleteAppointmentGoal.test_delete_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "test_delete_appointment_goal": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014252100027078995, "testdox_title": "Success: Delete appointment goal", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 241, "TestDeleteAppointmentGoal.test_delete_same_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "test_delete_same_appointment_goal": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002178879994971794, "testdox_title": "Failure: Delete the same appointment goal twice", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 241, "TestDeleteAppointmentGoal.test_delete_same_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "test_delete_same_appointment_goal": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003285234000031778, "testdox_title": "Failure: Delete the same appointment goal twice", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 241, "TestDeleteAppointmentGoal.test_delete_same_appointment_goal"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "test_delete_same_appointment_goal": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018132600052922498, "testdox_title": "Failure: Delete the same appointment goal twice", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 254, "TestDeleteAppointmentGoal.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002881500004150439, "testdox_title": "Failure: Delete appointment goal without authentication", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 254, "TestDeleteAppointmentGoal.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001729493000311777, "testdox_title": "Failure: Delete appointment goal without authentication", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 254, "TestDeleteAppointmentGoal.test_no_authentication"], "keywords": {"src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0017413489995306008, "testdox_title": "Failure: Delete appointment goal without authentication", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 29, "TestCreateFoodCategory.test_create_new_food_category"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "test_create_new_food_category": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.08199085400065087, "testdox_title": "Success: Create a food category", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 29, "TestCreateFoodCategory.test_create_new_food_category"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "test_create_new_food_category": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.01517991000037, "testdox_title": "Success: Create a food category", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 29, "TestCreateFoodCategory.test_create_new_food_category"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "test_create_new_food_category": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015672799963795114, "testdox_title": "Success: Create a food category", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category_no_relationship", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 57, "TestCreateFoodCategory.test_create_new_food_category_no_relationship"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "test_create_new_food_category_no_relationship": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00028566699984367006, "testdox_title": "Success: Create a food category without relationship", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category_no_relationship", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 57, "TestCreateFoodCategory.test_create_new_food_category_no_relationship"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "test_create_new_food_category_no_relationship": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008770892000029562, "testdox_title": "Success: Create a food category without relationship", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category_no_relationship", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 57, "TestCreateFoodCategory.test_create_new_food_category_no_relationship"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "test_create_new_food_category_no_relationship": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017287699938606238, "testdox_title": "Success: Create a food category without relationship", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 84, "TestCreateFoodCategory.test_create_food_category_with_deleted_relation"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_food_category_with_deleted_relation": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026023499958682805, "testdox_title": "Failure: Create a food category with deleted relation", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 84, "TestCreateFoodCategory.test_create_food_category_with_deleted_relation"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_food_category_with_deleted_relation": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0039942619996509166, "testdox_title": "Failure: Create a food category with deleted relation", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 84, "TestCreateFoodCategory.test_create_food_category_with_deleted_relation"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_food_category_with_deleted_relation": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013093899997329572, "testdox_title": "Failure: Create a food category with deleted relation", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_field", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 102, "TestCreateFoodCategory.test_create_food_category_without_required_field"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "pytestmark": 1, "()": 1, "test_create_food_category_without_required_field": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002153410005121259, "testdox_title": "Failure: Create a food category without required fields", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_field", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 102, "TestCreateFoodCategory.test_create_food_category_without_required_field"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "pytestmark": 1, "()": 1, "test_create_food_category_without_required_field": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0021767340003862046, "testdox_title": "Failure: Create a food category without required fields", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_field", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 102, "TestCreateFoodCategory.test_create_food_category_without_required_field"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "pytestmark": 1, "()": 1, "test_create_food_category_without_required_field": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018287999955646228, "testdox_title": "Failure: Create a food category without required fields", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 123, "TestCreateFoodCategory.test_create_food_category_without_required_authorization"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "test_create_food_category_without_required_authorization": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10840392299996893, "testdox_title": "Failure: Create a food category without required authorization", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 123, "TestCreateFoodCategory.test_create_food_category_without_required_authorization"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "test_create_food_category_without_required_authorization": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017224539997187094, "testdox_title": "Failure: Create a food category without required authorization", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 123, "TestCreateFoodCategory.test_create_food_category_without_required_authorization"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestCreateFoodCategory": 1, "it": 1, "test_create_food_category_without_required_authorization": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012812799923267448, "testdox_title": "Failure: Create a food category without required authorization", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_get_food_categories", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 145, "TestGetAllFoodCategories.test_get_food_categories"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "test_get_food_categories": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllFoodCategories": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021769300019514048, "testdox_title": "Success: Get a list of all food category", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_get_food_categories", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 145, "TestGetAllFoodCategories.test_get_food_categories"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "test_get_food_categories": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllFoodCategories": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.016739324000809574, "testdox_title": "Success: Get a list of all food category", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_get_food_categories", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 145, "TestGetAllFoodCategories.test_get_food_categories"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "test_get_food_categories": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllFoodCategories": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013113400018482935, "testdox_title": "Success: Get a list of all food category", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 175, "TestGetAllFoodCategories.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllFoodCategories": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020874099936918356, "testdox_title": "Failure: Get a list of all food categories without authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 175, "TestGetAllFoodCategories.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllFoodCategories": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013381409999055904, "testdox_title": "Failure: Get a list of all food categories without authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 175, "TestGetAllFoodCategories.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllFoodCategories": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010665399986464763, "testdox_title": "Failure: Get a list of all food categories without authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 180, "TestGetAllFoodCategories.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllFoodCategories": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002515360001780209, "testdox_title": "Failure: Get a list of all food categories with non required authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 180, "TestGetAllFoodCategories.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllFoodCategories": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013463329996739049, "testdox_title": "Failure: Get a list of all food categories with non required authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 180, "TestGetAllFoodCategories.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllFoodCategories": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012691399933828507, "testdox_title": "Failure: Get a list of all food categories with non required authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_get_food_category_by_id", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 194, "TestGetFoodCategoryById.test_get_food_category_by_id"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_get_food_category_by_id": 1, "it": 1, "TestGetFoodCategoryById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020665600004576845, "testdox_title": "Success: Get one food category by id", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_get_food_category_by_id", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 194, "TestGetFoodCategoryById.test_get_food_category_by_id"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_get_food_category_by_id": 1, "it": 1, "TestGetFoodCategoryById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00703488399994967, "testdox_title": "Success: Get one food category by id", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_get_food_category_by_id", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 194, "TestGetFoodCategoryById.test_get_food_category_by_id"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_get_food_category_by_id": 1, "it": 1, "TestGetFoodCategoryById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015159800022956915, "testdox_title": "Success: Get one food category by id", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 214, "TestGetFoodCategoryById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "TestGetFoodCategoryById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002614209997773287, "testdox_title": "Failure: Get one food category without authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 214, "TestGetFoodCategoryById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "TestGetFoodCategoryById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0026036790004582144, "testdox_title": "Failure: Get one food category without authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 214, "TestGetFoodCategoryById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "TestGetFoodCategoryById": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017350600046484033, "testdox_title": "Failure: Get one food category without authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 219, "TestGetFoodCategoryById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "TestGetFoodCategoryById": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027940600011788774, "testdox_title": "Failure: Get one food category with non required authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 219, "TestGetFoodCategoryById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "TestGetFoodCategoryById": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0023563360000480316, "testdox_title": "Failure: Get one food category with non required authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 219, "TestGetFoodCategoryById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "TestGetFoodCategoryById": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014519900014420273, "testdox_title": "Failure: Get one food category with non required authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 233, "TestDeleteFoodCategory.test_delete_food_category"], "keywords": {"aquavitae-app": 1, "test_delete_food_category": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020475600013014628, "testdox_title": "Success: Delete food category", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 233, "TestDeleteFoodCategory.test_delete_food_category"], "keywords": {"aquavitae-app": 1, "test_delete_food_category": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.028577795999808586, "testdox_title": "Success: Delete food category", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 233, "TestDeleteFoodCategory.test_delete_food_category"], "keywords": {"aquavitae-app": 1, "test_delete_food_category": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001305209998463397, "testdox_title": "Success: Delete food category", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_relations", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 254, "TestDeleteFoodCategory.test_delete_food_category_relations"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_delete_food_category_relations": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00032516200008103624, "testdox_title": "Success: Check if all relation from food category, was deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_relations", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 254, "TestDeleteFoodCategory.test_delete_food_category_relations"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_delete_food_category_relations": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.004082313999788312, "testdox_title": "Success: Check if all relation from food category, was deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_relations", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 254, "TestDeleteFoodCategory.test_delete_food_category_relations"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_delete_food_category_relations": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001860960001067724, "testdox_title": "Success: Check if all relation from food category, was deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_already_deleted", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 273, "TestDeleteFoodCategory.test_delete_food_category_already_deleted"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "test_delete_food_category_already_deleted": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00032166300024982775, "testdox_title": "Failure: Delete food category already deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_already_deleted", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 273, "TestDeleteFoodCategory.test_delete_food_category_already_deleted"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "test_delete_food_category_already_deleted": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.004203527000754548, "testdox_title": "Failure: Delete food category already deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_already_deleted", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 273, "TestDeleteFoodCategory.test_delete_food_category_already_deleted"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "test_delete_food_category_already_deleted": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001591909995113383, "testdox_title": "Failure: Delete food category already deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 288, "TestDeleteFoodCategory.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002078849993267795, "testdox_title": "Failure: Delete food category without authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 288, "TestDeleteFoodCategory.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001265221999346977, "testdox_title": "Failure: Delete food category without authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 288, "TestDeleteFoodCategory.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "TestDeleteFoodCategory": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013533000037568854, "testdox_title": "Failure: Delete food category without authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 294, "TestDeleteFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "TestDeleteFoodCategory": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024524399941583397, "testdox_title": "Failure: Delete food category without required authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 294, "TestDeleteFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "TestDeleteFoodCategory": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015644869999960065, "testdox_title": "Failure: Delete food category without required authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 294, "TestDeleteFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "TestDeleteFoodCategory": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016102500012493692, "testdox_title": "Failure: Delete food category without required authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_update_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 311, "TestUpdateFoodCategory.test_update_food_category"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "pytestmark": 1, "TestUpdateFoodCategory": 1, "()": 1, "test_update_food_category": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002622170004542568, "testdox_title": "Success: Update food category", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_update_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 311, "TestUpdateFoodCategory.test_update_food_category"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "pytestmark": 1, "TestUpdateFoodCategory": 1, "()": 1, "test_update_food_category": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.011291615000118327, "testdox_title": "Success: Update food category", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_update_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 311, "TestUpdateFoodCategory.test_update_food_category"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "pytestmark": 1, "TestUpdateFoodCategory": 1, "()": 1, "test_update_food_category": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000162776999786729, "testdox_title": "Success: Update food category", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 336, "TestUpdateFoodCategory.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "TestUpdateFoodCategory": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022361900028045056, "testdox_title": "Failure: Update food category without authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 336, "TestUpdateFoodCategory.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "TestUpdateFoodCategory": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016080150007837801, "testdox_title": "Failure: Update food category without authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 336, "TestUpdateFoodCategory.test_no_authentication"], "keywords": {"aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "TestUpdateFoodCategory": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016069899993453873, "testdox_title": "Failure: Update food category without authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 342, "TestUpdateFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "TestUpdateFoodCategory": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00034042100014630705, "testdox_title": "Failure: Update food category without required authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 342, "TestUpdateFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "TestUpdateFoodCategory": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002092550000270421, "testdox_title": "Failure: Update food category without required authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 342, "TestUpdateFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "TestUpdateFoodCategory": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0014592130000892212, "testdox_title": "Failure: Update food category without required authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_new_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 31, "TestCreateFood.test_create_new_food"], "keywords": {"aquavitae-app": 1, "it": 1, "test_create_new_food": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.08928286400077923, "testdox_title": "Success: Create a food", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_new_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 31, "TestCreateFood.test_create_new_food"], "keywords": {"aquavitae-app": 1, "it": 1, "test_create_new_food": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.08643091900012223, "testdox_title": "Success: Create a food", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_new_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 31, "TestCreateFood.test_create_new_food"], "keywords": {"aquavitae-app": 1, "it": 1, "test_create_new_food": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013968199982627993, "testdox_title": "Success: Create a food", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 62, "TestCreateFood.test_create_food_with_deleted_relation"], "keywords": {"aquavitae-app": 1, "it": 1, "test_create_food_with_deleted_relation": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022405299932870548, "testdox_title": "Failure: Create a food with deleted relation", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 62, "TestCreateFood.test_create_food_with_deleted_relation"], "keywords": {"aquavitae-app": 1, "it": 1, "test_create_food_with_deleted_relation": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0037701999999626423, "testdox_title": "Failure: Create a food with deleted relation", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 62, "TestCreateFood.test_create_food_with_deleted_relation"], "keywords": {"aquavitae-app": 1, "it": 1, "test_create_food_with_deleted_relation": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000135064000460261, "testdox_title": "Failure: Create a food with deleted relation", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_field", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 86, "TestCreateFood.test_create_food_without_required_field"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_create_food_without_required_field": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002205340006184997, "testdox_title": "Failure: Create a food without required fields", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_field", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 86, "TestCreateFood.test_create_food_without_required_field"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_create_food_without_required_field": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00199820899979386, "testdox_title": "Failure: Create a food without required fields", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_field", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 86, "TestCreateFood.test_create_food_without_required_field"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_create_food_without_required_field": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012670900014200015, "testdox_title": "Failure: Create a food without required fields", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 113, "TestCreateFood.test_create_food_without_required_authorization"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_create_food_without_required_authorization": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.1112198040000294, "testdox_title": "Failure: Create a food without required authorization", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 113, "TestCreateFood.test_create_food_without_required_authorization"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_create_food_without_required_authorization": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016149799994309433, "testdox_title": "Failure: Create a food without required authorization", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 113, "TestCreateFood.test_create_food_without_required_authorization"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_create_food_without_required_authorization": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012142000014137011, "testdox_title": "Failure: Create a food without required authorization", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_get_foods", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 142, "TestGetAllFoods.test_get_foods"], "keywords": {"aquavitae-app": 1, "TestGetAllFoods": 1, "it": 1, "test_get_foods": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021799200021632714, "testdox_title": "Success: Get a list of all food", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_get_foods", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 142, "TestGetAllFoods.test_get_foods"], "keywords": {"aquavitae-app": 1, "TestGetAllFoods": 1, "it": 1, "test_get_foods": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.03332978000071307, "testdox_title": "Success: Get a list of all food", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_get_foods", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 142, "TestGetAllFoods.test_get_foods"], "keywords": {"aquavitae-app": 1, "TestGetAllFoods": 1, "it": 1, "test_get_foods": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013730600039707497, "testdox_title": "Success: Get a list of all food", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 166, "TestGetAllFoods.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "TestGetAllFoods": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021117999949638033, "testdox_title": "Failure: Get a list of all food without authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 166, "TestGetAllFoods.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "TestGetAllFoods": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001153004999650875, "testdox_title": "Failure: Get a list of all food without authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 166, "TestGetAllFoods.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "TestGetAllFoods": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010670099982235115, "testdox_title": "Failure: Get a list of all food without authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 171, "TestGetAllFoods.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "TestGetAllFoods": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025034299960680073, "testdox_title": "Failure: Get a list of all food with non required authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 171, "TestGetAllFoods.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "TestGetAllFoods": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001339399000244157, "testdox_title": "Failure: Get a list of all food with non required authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 171, "TestGetAllFoods.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "TestGetAllFoods": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001295060001211823, "testdox_title": "Failure: Get a list of all food with non required authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_get_food_by_id", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 185, "TestGetFoodById.test_get_food_by_id"], "keywords": {"TestGetFoodById": 1, "aquavitae-app": 1, "test_get_food_by_id": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019765799970627995, "testdox_title": "Success: Get one food by id", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_get_food_by_id", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 185, "TestGetFoodById.test_get_food_by_id"], "keywords": {"TestGetFoodById": 1, "aquavitae-app": 1, "test_get_food_by_id": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.013272053999571654, "testdox_title": "Success: Get one food by id", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_get_food_by_id", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 185, "TestGetFoodById.test_get_food_by_id"], "keywords": {"TestGetFoodById": 1, "aquavitae-app": 1, "test_get_food_by_id": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0002176039997721091, "testdox_title": "Success: Get one food by id", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 204, "TestGetFoodById.test_no_authentication"], "keywords": {"TestGetFoodById": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002912419995482196, "testdox_title": "Failure: Get one food without authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 204, "TestGetFoodById.test_no_authentication"], "keywords": {"TestGetFoodById": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002440088999719592, "testdox_title": "Failure: Get one food without authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 204, "TestGetFoodById.test_no_authentication"], "keywords": {"TestGetFoodById": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017480499991506804, "testdox_title": "Failure: Get one food without authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 209, "TestGetFoodById.test_different_required_authentication[user_common]"], "keywords": {"TestGetFoodById": 1, "user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00028340799963189056, "testdox_title": "Failure: Get one food with non required authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 209, "TestGetFoodById.test_different_required_authentication[user_common]"], "keywords": {"TestGetFoodById": 1, "user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002074033000099007, "testdox_title": "Failure: Get one food with non required authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 209, "TestGetFoodById.test_different_required_authentication[user_common]"], "keywords": {"TestGetFoodById": 1, "user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00021600299987767357, "testdox_title": "Failure: Get one food with non required authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 223, "TestDeleteFood.test_delete_food"], "keywords": {"aquavitae-app": 1, "TestDeleteFood": 1, "it": 1, "test_delete_food": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021088300036353758, "testdox_title": "Success: Delete food", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 223, "TestDeleteFood.test_delete_food"], "keywords": {"aquavitae-app": 1, "TestDeleteFood": 1, "it": 1, "test_delete_food": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0188070490003156, "testdox_title": "Success: Delete food", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 223, "TestDeleteFood.test_delete_food"], "keywords": {"aquavitae-app": 1, "TestDeleteFood": 1, "it": 1, "test_delete_food": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013190600020607235, "testdox_title": "Success: Delete food", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food_category_already_deleted", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 244, "TestDeleteFood.test_delete_food_category_already_deleted"], "keywords": {"aquavitae-app": 1, "TestDeleteFood": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_delete_food_category_already_deleted": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002176870002585929, "testdox_title": "Failure: Delete food already deleted", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food_category_already_deleted", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 244, "TestDeleteFood.test_delete_food_category_already_deleted"], "keywords": {"aquavitae-app": 1, "TestDeleteFood": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_delete_food_category_already_deleted": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0038541130006706226, "testdox_title": "Failure: Delete food already deleted", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food_category_already_deleted", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 244, "TestDeleteFood.test_delete_food_category_already_deleted"], "keywords": {"aquavitae-app": 1, "TestDeleteFood": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_delete_food_category_already_deleted": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016208699980779784, "testdox_title": "Failure: Delete food already deleted", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 259, "TestDeleteFood.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "TestDeleteFood": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002337160003662575, "testdox_title": "Failure: Delete food without authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 259, "TestDeleteFood.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "TestDeleteFood": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013104469999234425, "testdox_title": "Failure: Delete food without authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 259, "TestDeleteFood.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "TestDeleteFood": 1, "it": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011010699927282985, "testdox_title": "Failure: Delete food without authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 265, "TestDeleteFood.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "TestDeleteFood": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024628499977552565, "testdox_title": "Failure: Delete food without required authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 265, "TestDeleteFood.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "TestDeleteFood": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014704730001540156, "testdox_title": "Failure: Delete food without required authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 265, "TestDeleteFood.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "TestDeleteFood": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013434600077744108, "testdox_title": "Failure: Delete food without required authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_update_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 280, "TestUpdateFood.test_update_food"], "keywords": {"aquavitae-app": 1, "it": 1, "test_update_food": 1, "TestUpdateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020202799987600883, "testdox_title": "Success: Update food", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_update_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 280, "TestUpdateFood.test_update_food"], "keywords": {"aquavitae-app": 1, "it": 1, "test_update_food": 1, "TestUpdateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.04095482000047923, "testdox_title": "Success: Update food", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_update_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 280, "TestUpdateFood.test_update_food"], "keywords": {"aquavitae-app": 1, "it": 1, "test_update_food": 1, "TestUpdateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013770700024906546, "testdox_title": "Success: Update food", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 305, "TestUpdateFood.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestUpdateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022715399973094463, "testdox_title": "Failure: Update food without authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 305, "TestUpdateFood.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestUpdateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014852710000923253, "testdox_title": "Failure: Update food without authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 305, "TestUpdateFood.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestUpdateFood": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011235799956921255, "testdox_title": "Failure: Update food without authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 311, "TestUpdateFood.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "TestUpdateFood": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025267100045311963, "testdox_title": "Failure: Update food without required authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 311, "TestUpdateFood.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "TestUpdateFood": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015011499999673106, "testdox_title": "Failure: Update food without required authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 311, "TestUpdateFood.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "TestUpdateFood": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0010755530001915758, "testdox_title": "Failure: Update food without required authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_new_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 27, "TestCreateActivityLevel.test_create_new_activity_level"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_new_activity_level": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.08226988399928814, "testdox_title": "Success: Create a activity level", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_new_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 27, "TestCreateActivityLevel.test_create_new_activity_level"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_new_activity_level": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007245515999784402, "testdox_title": "Success: Create a activity level", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_new_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 27, "TestCreateActivityLevel.test_create_new_activity_level"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_new_activity_level": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001413019999745302, "testdox_title": "Success: Create a activity level", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 51, "TestCreateActivityLevel.test_create_activity_level_without_required_field"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateActivityLevel": 1, "test_create_activity_level_without_required_field": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023175900059868582, "testdox_title": "Failure: Create a activity level without required fields", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 51, "TestCreateActivityLevel.test_create_activity_level_without_required_field"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateActivityLevel": 1, "test_create_activity_level_without_required_field": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002205533999585896, "testdox_title": "Failure: Create a activity level without required fields", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 51, "TestCreateActivityLevel.test_create_activity_level_without_required_field"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateActivityLevel": 1, "test_create_activity_level_without_required_field": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013551400024880422, "testdox_title": "Failure: Create a activity level without required fields", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 69, "TestCreateActivityLevel.test_create_activity_level_without_required_authorization"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateActivityLevel": 1, "test_create_activity_level_without_required_authorization": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.11021316400001524, "testdox_title": "Failure: Create a activity level without required authorization", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 69, "TestCreateActivityLevel.test_create_activity_level_without_required_authorization"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateActivityLevel": 1, "test_create_activity_level_without_required_authorization": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015706020003563026, "testdox_title": "Failure: Create a activity level without required authorization", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 69, "TestCreateActivityLevel.test_create_activity_level_without_required_authorization"], "keywords": {"aquavitae-app": 1, "it": 1, "TestCreateActivityLevel": 1, "test_create_activity_level_without_required_authorization": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012121400050091324, "testdox_title": "Failure: Create a activity level without required authorization", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_get_all_users", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 88, "TestGetAllActivityLevel.test_get_all_users"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "test_get_all_users": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021316400034265826, "testdox_title": "Success: Get a list of all activity levels", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_get_all_users", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 88, "TestGetAllActivityLevel.test_get_all_users"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "test_get_all_users": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005979601000035473, "testdox_title": "Success: Get a list of all activity levels", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_get_all_users", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 88, "TestGetAllActivityLevel.test_get_all_users"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "test_get_all_users": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015589400027238298, "testdox_title": "Success: Get a list of all activity levels", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 102, "TestGetAllActivityLevel.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024645699977554614, "testdox_title": "Failure: Get a list of all activity levels without authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 102, "TestGetAllActivityLevel.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001235120000274037, "testdox_title": "Failure: Get a list of all activity levels without authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 102, "TestGetAllActivityLevel.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001616829995327862, "testdox_title": "Failure: Get a list of all activity levels without authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003604579997045221, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0020046950003234087, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001495119995524874, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "it": 1, "parametrize": 1, "user_nutritionist": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002656859996932326, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "it": 1, "parametrize": 1, "user_nutritionist": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001478505999330082, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "it": 1, "parametrize": 1, "user_nutritionist": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001353859997834661, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_get_activity_level_by_id", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 121, "TestGetActivityLevelById.test_get_activity_level_by_id"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "TestGetActivityLevelById": 1, "test_get_activity_level_by_id": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020390700046846177, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_get_activity_level_by_id", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 121, "TestGetActivityLevelById.test_get_activity_level_by_id"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "TestGetActivityLevelById": 1, "test_get_activity_level_by_id": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0031577029994878103, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_get_activity_level_by_id", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 121, "TestGetActivityLevelById.test_get_activity_level_by_id"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "TestGetActivityLevelById": 1, "test_get_activity_level_by_id": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014562900014425395, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 140, "TestGetActivityLevelById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "TestGetActivityLevelById": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026357600017945515, "testdox_title": "Failure: Get one activity level without authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 140, "TestGetActivityLevelById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "TestGetActivityLevelById": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018754169996100245, "testdox_title": "Failure: Get one activity level without authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 140, "TestGetActivityLevelById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "TestGetActivityLevelById": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001282740004171501, "testdox_title": "Failure: Get one activity level without authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000277414999800385, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0026667150004868745, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015037400044093374, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "it": 1, "parametrize": 1, "user_nutritionist": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002684680002857931, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "it": 1, "parametrize": 1, "user_nutritionist": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002202839000347012, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "it": 1, "parametrize": 1, "user_nutritionist": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001433589995940565, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_delete_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 159, "TestDeleteActivityLevel.test_delete_activity_level"], "keywords": {"aquavitae-app": 1, "it": 1, "test_delete_activity_level": 1, "TestDeleteActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002150409991372726, "testdox_title": "Success: Delete activity level", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_delete_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 159, "TestDeleteActivityLevel.test_delete_activity_level"], "keywords": {"aquavitae-app": 1, "it": 1, "test_delete_activity_level": 1, "TestDeleteActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.010928362000413472, "testdox_title": "Success: Delete activity level", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_delete_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 159, "TestDeleteActivityLevel.test_delete_activity_level"], "keywords": {"aquavitae-app": 1, "it": 1, "test_delete_activity_level": 1, "TestDeleteActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0002332379999643308, "testdox_title": "Success: Delete activity level", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 180, "TestDeleteActivityLevel.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestDeleteActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002486080002199742, "testdox_title": "Failure: Delete activity level without authentication", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 180, "TestDeleteActivityLevel.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestDeleteActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014887469997120206, "testdox_title": "Failure: Delete activity level without authentication", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 180, "TestDeleteActivityLevel.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "TestDeleteActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014091800039750524, "testdox_title": "Failure: Delete activity level without authentication", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_update_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 191, "TestUpdateActivityLevel.test_update_activity_level"], "keywords": {"aquavitae-app": 1, "TestUpdateActivityLevel": 1, "it": 1, "test_update_activity_level": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002334930004508351, "testdox_title": "Success: Update activity level", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_update_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 191, "TestUpdateActivityLevel.test_update_activity_level"], "keywords": {"aquavitae-app": 1, "TestUpdateActivityLevel": 1, "it": 1, "test_update_activity_level": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008137440000609786, "testdox_title": "Success: Update activity level", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_update_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 191, "TestUpdateActivityLevel.test_update_activity_level"], "keywords": {"aquavitae-app": 1, "TestUpdateActivityLevel": 1, "it": 1, "test_update_activity_level": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013242600016383221, "testdox_title": "Success: Update activity level", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 216, "TestUpdateActivityLevel.test_no_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdateActivityLevel": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021557499985647155, "testdox_title": "Failure: Update activity level without authentication", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 216, "TestUpdateActivityLevel.test_no_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdateActivityLevel": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013917730002503959, "testdox_title": "Failure: Update activity level without authentication", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 216, "TestUpdateActivityLevel.test_no_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdateActivityLevel": 1, "test_no_authentication": 1, "it": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0009574159994372167, "testdox_title": "Failure: Update activity level without authentication", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_new_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 27, "TestCreatePersonalData.test_create_new_personal_data"], "keywords": {"aquavitae-app": 1, "TestCreatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "test_create_new_personal_data": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.08138891799990233, "testdox_title": "Success: Create a personal data", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_new_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 27, "TestCreatePersonalData.test_create_new_personal_data"], "keywords": {"aquavitae-app": 1, "TestCreatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "test_create_new_personal_data": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008566544000132126, "testdox_title": "Success: Create a personal data", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_new_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 27, "TestCreatePersonalData.test_create_new_personal_data"], "keywords": {"aquavitae-app": 1, "TestCreatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "test_create_new_personal_data": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013200299963500584, "testdox_title": "Success: Create a personal data", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_same_user", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 50, "TestCreatePersonalData.test_create_personal_data_same_user"], "keywords": {"test_create_personal_data_same_user": 1, "aquavitae-app": 1, "TestCreatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022263200025918195, "testdox_title": "Failure: Create two personal data to the same user", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_same_user", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 50, "TestCreatePersonalData.test_create_personal_data_same_user"], "keywords": {"test_create_personal_data_same_user": 1, "aquavitae-app": 1, "TestCreatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005555218000154127, "testdox_title": "Failure: Create two personal data to the same user", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_same_user", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 50, "TestCreatePersonalData.test_create_personal_data_same_user"], "keywords": {"test_create_personal_data_same_user": 1, "aquavitae-app": 1, "TestCreatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001414420003129635, "testdox_title": "Failure: Create two personal data to the same user", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 74, "TestCreatePersonalData.test_create_personal_data_without_required_field"], "keywords": {"aquavitae-app": 1, "TestCreatePersonalData": 1, "test_create_personal_data_without_required_field": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022297200030152453, "testdox_title": "Failure: Create a personal data without required fields", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 74, "TestCreatePersonalData.test_create_personal_data_without_required_field"], "keywords": {"aquavitae-app": 1, "TestCreatePersonalData": 1, "test_create_personal_data_without_required_field": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0020840509996560286, "testdox_title": "Failure: Create a personal data without required fields", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 74, "TestCreatePersonalData.test_create_personal_data_without_required_field"], "keywords": {"aquavitae-app": 1, "TestCreatePersonalData": 1, "test_create_personal_data_without_required_field": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011478899978101254, "testdox_title": "Failure: Create a personal data without required fields", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 100, "TestCreatePersonalData.test_create_personal_data_without_required_authorization"], "keywords": {"aquavitae-app": 1, "TestCreatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1, "test_create_personal_data_without_required_authorization": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10655195199979062, "testdox_title": "Failure: Create a personal data without required authorization", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 100, "TestCreatePersonalData.test_create_personal_data_without_required_authorization"], "keywords": {"aquavitae-app": 1, "TestCreatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1, "test_create_personal_data_without_required_authorization": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016232050002145115, "testdox_title": "Failure: Create a personal data without required authorization", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 100, "TestCreatePersonalData.test_create_personal_data_without_required_authorization"], "keywords": {"aquavitae-app": 1, "TestCreatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1, "test_create_personal_data_without_required_authorization": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012511600016296143, "testdox_title": "Failure: Create a personal data without required authorization", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_get_current_user_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 128, "TestGetUserPersonalData.test_get_current_user_personal_data"], "keywords": {"TestGetUserPersonalData": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1, "test_get_current_user_personal_data": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002151039998352644, "testdox_title": "Success: Get current user personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_get_current_user_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 128, "TestGetUserPersonalData.test_get_current_user_personal_data"], "keywords": {"TestGetUserPersonalData": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1, "test_get_current_user_personal_data": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0090108180002062, "testdox_title": "Success: Get current user personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_get_current_user_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 128, "TestGetUserPersonalData.test_get_current_user_personal_data"], "keywords": {"TestGetUserPersonalData": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1, "test_get_current_user_personal_data": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013208099971961929, "testdox_title": "Success: Get current user personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 144, "TestGetUserPersonalData.test_no_authentication"], "keywords": {"TestGetUserPersonalData": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021363599989854265, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 144, "TestGetUserPersonalData.test_no_authentication"], "keywords": {"TestGetUserPersonalData": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011045890005334513, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 144, "TestGetUserPersonalData.test_no_authentication"], "keywords": {"TestGetUserPersonalData": 1, "aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001069250001819455, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_different_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 149, "TestGetUserPersonalData.test_different_required_authentication"], "keywords": {"TestGetUserPersonalData": 1, "test_different_required_authentication": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019408600019232836, "testdox_title": "Failure: Get current user data without personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_different_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 149, "TestGetUserPersonalData.test_different_required_authentication"], "keywords": {"TestGetUserPersonalData": 1, "test_different_required_authentication": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012938729996676557, "testdox_title": "Failure: Get current user data without personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_different_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 149, "TestGetUserPersonalData.test_different_required_authentication"], "keywords": {"TestGetUserPersonalData": 1, "test_different_required_authentication": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001457049993405235, "testdox_title": "Failure: Get current user data without personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_one_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 161, "TestGetSeveralPersonalDataByUserId.test_get_one_personal_data_by_user_id"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_get_one_personal_data_by_user_id": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020783899981324794, "testdox_title": "Success: Get one personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_one_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 161, "TestGetSeveralPersonalDataByUserId.test_get_one_personal_data_by_user_id"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_get_one_personal_data_by_user_id": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0068007359996045125, "testdox_title": "Success: Get one personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_one_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 161, "TestGetSeveralPersonalDataByUserId.test_get_one_personal_data_by_user_id"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_get_one_personal_data_by_user_id": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015801500012457836, "testdox_title": "Success: Get one personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_several_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 179, "TestGetSeveralPersonalDataByUserId.test_get_several_personal_data_by_user_id"], "keywords": {"test_get_several_personal_data_by_user_id": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023971600057848264, "testdox_title": "Success: Get several personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_several_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 179, "TestGetSeveralPersonalDataByUserId.test_get_several_personal_data_by_user_id"], "keywords": {"test_get_several_personal_data_by_user_id": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.009332442999948398, "testdox_title": "Success: Get several personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_several_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 179, "TestGetSeveralPersonalDataByUserId.test_get_several_personal_data_by_user_id"], "keywords": {"test_get_several_personal_data_by_user_id": 1, "aquavitae-app": 1, "it": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013286499961395748, "testdox_title": "Success: Get several personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 201, "TestGetSeveralPersonalDataByUserId.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002190630002587568, "testdox_title": "Failure: Get several personal data without authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 201, "TestGetSeveralPersonalDataByUserId.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011324879997118842, "testdox_title": "Failure: Get several personal data without authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 201, "TestGetSeveralPersonalDataByUserId.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001074049996532267, "testdox_title": "Failure: Get several personal data without authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 206, "TestGetSeveralPersonalDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026492100005270913, "testdox_title": "Failure: Get several personal data with non required authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 206, "TestGetSeveralPersonalDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012752299999192473, "testdox_title": "Failure: Get several personal data with non required authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 206, "TestGetSeveralPersonalDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "TestGetSeveralPersonalDataByUserId": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012885300020570867, "testdox_title": "Failure: Get several personal data with non required authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 220, "TestUpdatePersonalData.test_update_personal_data"], "keywords": {"aquavitae-app": 1, "TestUpdatePersonalData": 1, "test_update_personal_data": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002193669997723191, "testdox_title": "Success: Update personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 220, "TestUpdatePersonalData.test_update_personal_data"], "keywords": {"aquavitae-app": 1, "TestUpdatePersonalData": 1, "test_update_personal_data": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.015521801000431878, "testdox_title": "Success: Update personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 220, "TestUpdatePersonalData.test_update_personal_data"], "keywords": {"aquavitae-app": 1, "TestUpdatePersonalData": 1, "test_update_personal_data": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014078000003792113, "testdox_title": "Success: Update personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 246, "TestUpdatePersonalData.test_no_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdatePersonalData": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002348179996261024, "testdox_title": "Failure: Update personal data without authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 246, "TestUpdatePersonalData.test_no_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdatePersonalData": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001193862999571138, "testdox_title": "Failure: Update personal data without authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 246, "TestUpdatePersonalData.test_no_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdatePersonalData": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001318459999311017, "testdox_title": "Failure: Update personal data without authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 251, "TestUpdatePersonalData.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdatePersonalData": 1, "it": 1, "test_no_required_authentication": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003146369999740273, "testdox_title": "Failure: Update personal data without required authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 251, "TestUpdatePersonalData.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdatePersonalData": 1, "it": 1, "test_no_required_authentication": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014559940000253846, "testdox_title": "Failure: Update personal data without required authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 251, "TestUpdatePersonalData.test_no_required_authentication"], "keywords": {"aquavitae-app": 1, "TestUpdatePersonalData": 1, "it": 1, "test_no_required_authentication": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016177100042114034, "testdox_title": "Failure: Update personal data without required authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_user_without_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 258, "TestUpdatePersonalData.test_update_user_without_personal_data"], "keywords": {"test_update_user_without_personal_data": 1, "aquavitae-app": 1, "TestUpdatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021959300011076266, "testdox_title": "Failure: Update user without personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_user_without_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 258, "TestUpdatePersonalData.test_update_user_without_personal_data"], "keywords": {"test_update_user_without_personal_data": 1, "aquavitae-app": 1, "TestUpdatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0032782320004116627, "testdox_title": "Failure: Update user without personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_user_without_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 258, "TestUpdatePersonalData.test_update_user_without_personal_data"], "keywords": {"test_update_user_without_personal_data": 1, "aquavitae-app": 1, "TestUpdatePersonalData": 1, "it": 1, "pytestmark": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0011262549996899907, "testdox_title": "Failure: Update user without personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin::test_valid_login", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 54, "TestLogin.test_valid_login"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "test_valid_login": 1, "describe": 1, "asyncio": 1, "TestLogin": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.03213237399995705, "testdox_title": "Failure: Login with wrong username", "testdox_class_name": "GET Route: /login", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin::test_valid_login", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 54, "TestLogin.test_valid_login"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "test_valid_login": 1, "describe": 1, "asyncio": 1, "TestLogin": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0038559670001632185, "testdox_title": "Failure: Login with wrong username", "testdox_class_name": "GET Route: /login", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin::test_valid_login", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 54, "TestLogin.test_valid_login"], "keywords": {"aquavitae-app": 1, "it": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "test_valid_login": 1, "describe": 1, "asyncio": 1, "TestLogin": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013134500022715656, "testdox_title": "Failure: Login with wrong username", "testdox_class_name": "GET Route: /login", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_get_current_user", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 69, "TestGetCurrentUser.test_get_current_user"], "keywords": {"aquavitae-app": 1, "it": 1, "test_get_current_user": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "TestGetCurrentUser": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.05754365800021333, "testdox_title": "Success: Get current user data", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_get_current_user", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 69, "TestGetCurrentUser.test_get_current_user"], "keywords": {"aquavitae-app": 1, "it": 1, "test_get_current_user": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "TestGetCurrentUser": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0044313070002317545, "testdox_title": "Success: Get current user data", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_get_current_user", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 69, "TestGetCurrentUser.test_get_current_user"], "keywords": {"aquavitae-app": 1, "it": 1, "test_get_current_user": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "TestGetCurrentUser": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012896999942313414, "testdox_title": "Success: Get current user data", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_no_authentication", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 86, "TestGetCurrentUser.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "TestGetCurrentUser": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002120059998560464, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_no_authentication", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 86, "TestGetCurrentUser.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "TestGetCurrentUser": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010938790001091547, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_no_authentication", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 86, "TestGetCurrentUser.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "TestGetCurrentUser": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0006322360004560323, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_new_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 36, "TestCreateUser.test_create_new_user"], "keywords": {"aquavitae-app": 1, "TestCreateUser": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "test_create_new_user": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.08243707199926575, "testdox_title": "Success: Create a new user", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_new_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 36, "TestCreateUser.test_create_new_user"], "keywords": {"aquavitae-app": 1, "TestCreateUser": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "test_create_new_user": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.05992388799950277, "testdox_title": "Success: Create a new user", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_new_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 36, "TestCreateUser.test_create_new_user"], "keywords": {"aquavitae-app": 1, "TestCreateUser": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "test_create_new_user": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013310599933902267, "testdox_title": "Success: Create a new user", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_with_same_email", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 61, "TestCreateUser.test_create_user_with_same_email"], "keywords": {"aquavitae-app": 1, "TestCreateUser": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "test_create_user_with_same_email": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002200860008088057, "testdox_title": "Failure: Create a new user with email that already exists", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_with_same_email", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 61, "TestCreateUser.test_create_user_with_same_email"], "keywords": {"aquavitae-app": 1, "TestCreateUser": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "test_create_user_with_same_email": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003680196999994223, "testdox_title": "Failure: Create a new user with email that already exists", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_with_same_email", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 61, "TestCreateUser.test_create_user_with_same_email"], "keywords": {"aquavitae-app": 1, "TestCreateUser": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "test_create_user_with_same_email": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014395899961527903, "testdox_title": "Failure: Create a new user with email that already exists", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 76, "TestCreateUser.test_create_user_without_required_field"], "keywords": {"aquavitae-app": 1, "TestCreateUser": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_create_user_without_required_field": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10551054200004728, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 76, "TestCreateUser.test_create_user_without_required_field"], "keywords": {"aquavitae-app": 1, "TestCreateUser": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_create_user_without_required_field": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002550475000134611, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 76, "TestCreateUser.test_create_user_without_required_field"], "keywords": {"aquavitae-app": 1, "TestCreateUser": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_create_user_without_required_field": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013364400001592003, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_new_user_with_role", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 104, "TestCreateUserWithRole.test_create_new_user_with_role"], "keywords": {"aquavitae-app": 1, "test_create_new_user_with_role": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestCreateUserWithRole": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002148630001101992, "testdox_title": "Success: Create a new user with role in body", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_new_user_with_role", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 104, "TestCreateUserWithRole.test_create_new_user_with_role"], "keywords": {"aquavitae-app": 1, "test_create_new_user_with_role": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestCreateUserWithRole": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.062103772000227764, "testdox_title": "Success: Create a new user with role in body", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_new_user_with_role", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 104, "TestCreateUserWithRole.test_create_new_user_with_role"], "keywords": {"aquavitae-app": 1, "test_create_new_user_with_role": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestCreateUserWithRole": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013251200016384246, "testdox_title": "Success: Create a new user with role in body", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 130, "TestCreateUserWithRole.test_create_user_without_required_field"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_create_user_without_required_field": 1, "TestCreateUserWithRole": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023453999983757967, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 130, "TestCreateUserWithRole.test_create_user_without_required_field"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_create_user_without_required_field": 1, "TestCreateUserWithRole": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002228162999927008, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 130, "TestCreateUserWithRole.test_create_user_without_required_field"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_create_user_without_required_field": 1, "TestCreateUserWithRole": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012130199957027799, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_get_all_users", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 159, "TestGetAllUsers.test_get_all_users"], "keywords": {"aquavitae-app": 1, "test_get_all_users": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002083629997287062, "testdox_title": "Success: Get a list of all existing users", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_get_all_users", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 159, "TestGetAllUsers.test_get_all_users"], "keywords": {"aquavitae-app": 1, "test_get_all_users": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007689797000239196, "testdox_title": "Success: Get a list of all existing users", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_get_all_users", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 159, "TestGetAllUsers.test_get_all_users"], "keywords": {"aquavitae-app": 1, "test_get_all_users": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001543080006740638, "testdox_title": "Success: Get a list of all existing users", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 173, "TestGetAllUsers.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020709500040538842, "testdox_title": "Failure: Get a list of all users without authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 173, "TestGetAllUsers.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010816020003403537, "testdox_title": "Failure: Get a list of all users without authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 173, "TestGetAllUsers.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011949799954891205, "testdox_title": "Failure: Get a list of all users without authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002462720003677532, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013337219997993088, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014288999955169857, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "user_nutritionist": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002460389996485901, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "user_nutritionist": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012931770006616716, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "user_nutritionist": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014363899936142843, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_get_user_by_id", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 192, "TestGetUserById.test_get_user_by_id"], "keywords": {"aquavitae-app": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_get_user_by_id": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002084600000671344, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_get_user_by_id", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 192, "TestGetUserById.test_get_user_by_id"], "keywords": {"aquavitae-app": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_get_user_by_id": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.004043111999635585, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_get_user_by_id", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 192, "TestGetUserById.test_get_user_by_id"], "keywords": {"aquavitae-app": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_get_user_by_id": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014558800012309803, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 209, "TestGetUserById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002139549997082213, "testdox_title": "Failure: Get one user without authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 209, "TestGetUserById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016381380000893841, "testdox_title": "Failure: Get one user without authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 209, "TestGetUserById.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011127600009785965, "testdox_title": "Failure: Get one user without authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025132599967037095, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017963029995371471, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_common]"], "keywords": {"user_common": 1, "aquavitae-app": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "test_different_required_authentication[user_common]": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000128259999655711, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "user_nutritionist": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024151199977495708, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "user_nutritionist": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018663089995243354, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_nutritionist]"], "keywords": {"aquavitae-app": 1, "test_different_required_authentication[user_nutritionist]": 1, "TestGetUserById": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "parametrize": 1, "user_nutritionist": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012913200043840334, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 228, "TestDeleteUser.test_delete_user_common"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "test_delete_user_common": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020606299949577078, "testdox_title": "Success: Delete user common", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 228, "TestDeleteUser.test_delete_user_common"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "test_delete_user_common": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.05026660799921956, "testdox_title": "Success: Delete user common", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 228, "TestDeleteUser.test_delete_user_common"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "test_delete_user_common": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001589639996382175, "testdox_title": "Success: Delete user common", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common_relations", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 249, "TestDeleteUser.test_delete_user_common_relations"], "keywords": {"aquavitae-app": 1, "test_delete_user_common_relations": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022541999987879535, "testdox_title": "Success: Check if all relation from user common, was deleted", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common_relations", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 249, "TestDeleteUser.test_delete_user_common_relations"], "keywords": {"aquavitae-app": 1, "test_delete_user_common_relations": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005399235000368208, "testdox_title": "Success: Check if all relation from user common, was deleted", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common_relations", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 249, "TestDeleteUser.test_delete_user_common_relations"], "keywords": {"aquavitae-app": 1, "test_delete_user_common_relations": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014356400060933083, "testdox_title": "Success: Check if all relation from user common, was deleted", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 270, "TestDeleteUser.test_delete_same_user"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "test_delete_same_user": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002213219995610416, "testdox_title": "Failure: Delete the same user twice", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 270, "TestDeleteUser.test_delete_same_user"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "test_delete_same_user": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003337481999551528, "testdox_title": "Failure: Delete the same user twice", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 270, "TestDeleteUser.test_delete_same_user"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "test_delete_same_user": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013955000031273812, "testdox_title": "Failure: Delete the same user twice", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 283, "TestDeleteUser.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020421099998202408, "testdox_title": "Failure: Delete user without authentication", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 283, "TestDeleteUser.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0010598389999358915, "testdox_title": "Failure: Delete user without authentication", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 283, "TestDeleteUser.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "TestDeleteUser": 1, "pytestmark": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012406899986672215, "testdox_title": "Failure: Delete user without authentication", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_user_nutri", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 293, "TestUpdateUser.test_update_user_nutri"], "keywords": {"aquavitae-app": 1, "test_update_user_nutri": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020711999968625605, "testdox_title": "Success: Update user nutritionist", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_user_nutri", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 293, "TestUpdateUser.test_update_user_nutri"], "keywords": {"aquavitae-app": 1, "test_update_user_nutri": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.012333134000073187, "testdox_title": "Success: Update user nutritionist", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_user_nutri", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 293, "TestUpdateUser.test_update_user_nutri"], "keywords": {"aquavitae-app": 1, "test_update_user_nutri": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015593999978591455, "testdox_title": "Success: Update user nutritionist", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_with_email_already_deleted", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 319, "TestUpdateUser.test_update_with_email_already_deleted"], "keywords": {"aquavitae-app": 1, "test_update_with_email_already_deleted": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000227825999900233, "testdox_title": "Success: Update user with deleted user email", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_with_email_already_deleted", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 319, "TestUpdateUser.test_update_with_email_already_deleted"], "keywords": {"aquavitae-app": 1, "test_update_with_email_already_deleted": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.010878334999688377, "testdox_title": "Success: Update user with deleted user email", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_with_email_already_deleted", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 319, "TestUpdateUser.test_update_with_email_already_deleted"], "keywords": {"aquavitae-app": 1, "test_update_with_email_already_deleted": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019181900006515207, "testdox_title": "Success: Update user with deleted user email", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_email_exists", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 344, "TestUpdateUser.test_update_email_exists"], "keywords": {"aquavitae-app": 1, "test_update_email_exists": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003506659995764494, "testdox_title": "Failure: Update user with email that already exists", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_email_exists", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 344, "TestUpdateUser.test_update_email_exists"], "keywords": {"aquavitae-app": 1, "test_update_email_exists": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008657757000037236, "testdox_title": "Failure: Update user with email that already exists", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_email_exists", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 344, "TestUpdateUser.test_update_email_exists"], "keywords": {"aquavitae-app": 1, "test_update_email_exists": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013225299971963977, "testdox_title": "Failure: Update user with email that already exists", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 372, "TestUpdateUser.test_delete_same_user"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_delete_same_user": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023795899960532552, "testdox_title": "Failure: Update deleted user", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 372, "TestUpdateUser.test_delete_same_user"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_delete_same_user": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0031014200003482983, "testdox_title": "Failure: Update deleted user", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 372, "TestUpdateUser.test_delete_same_user"], "keywords": {"aquavitae-app": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "test_delete_same_user": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001229899999088957, "testdox_title": "Failure: Update deleted user", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 386, "TestUpdateUser.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020661100006691413, "testdox_title": "Failure: Update user without authentication", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 386, "TestUpdateUser.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001154497000243282, "testdox_title": "Failure: Update user without authentication", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 386, "TestUpdateUser.test_no_authentication"], "keywords": {"aquavitae-app": 1, "test_no_authentication": 1, "it": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestUpdateUser": 1, "()": 1, "describe": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.004603657000188832, "testdox_title": "Failure: Update user without authentication", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"exitstatus": 0, "$report_type": "SessionFinish"}
