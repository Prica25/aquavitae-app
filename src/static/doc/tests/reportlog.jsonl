{"pytest_version": "6.2.4", "$report_type": "SessionStart"}
{"nodeid": "", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "test/test_base_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "test/test_base_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "test/test_base_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "test/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/app/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/biochemical_data/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/diagnosis/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/diary/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/forbidden_foods/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/nutritional_plan/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/plan_meals/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/recommendation_system/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/specificity/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/database/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestBaseE2E", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent::test_create_new_antecedent", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 26, "TestCreateAntecedent.test_create_new_antecedent"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "test_create_new_antecedent": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.20846916400114424, "testdox_title": "Success: Create an antecedent", "testdox_class_name": "POST Route: /antecedent/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent::test_create_new_antecedent", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 26, "TestCreateAntecedent.test_create_new_antecedent"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "test_create_new_antecedent": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.026586093998048455, "testdox_title": "Success: Create an antecedent", "testdox_class_name": "POST Route: /antecedent/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent::test_create_new_antecedent", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 26, "TestCreateAntecedent.test_create_new_antecedent"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "test_create_new_antecedent": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013960599972051568, "testdox_title": "Success: Create an antecedent", "testdox_class_name": "POST Route: /antecedent/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent::test_create_antecedent_without_required_field", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 53, "TestCreateAntecedent.test_create_antecedent_without_required_field"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_antecedent_without_required_field": 1, "TestCreateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002203229996666778, "testdox_title": "Failure: Create an antecedent without required fields", "testdox_class_name": "POST Route: /antecedent/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent::test_create_antecedent_without_required_field", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 53, "TestCreateAntecedent.test_create_antecedent_without_required_field"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_antecedent_without_required_field": 1, "TestCreateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0023015059996396303, "testdox_title": "Failure: Create an antecedent without required fields", "testdox_class_name": "POST Route: /antecedent/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent::test_create_antecedent_without_required_field", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 53, "TestCreateAntecedent.test_create_antecedent_without_required_field"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_antecedent_without_required_field": 1, "TestCreateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001257719995919615, "testdox_title": "Failure: Create an antecedent without required fields", "testdox_class_name": "POST Route: /antecedent/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent::test_create_type_of_meal_without_required_authorization", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 71, "TestCreateAntecedent.test_create_type_of_meal_without_required_authorization"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_type_of_meal_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10957913500169525, "testdox_title": "Failure: Create an antecedent without required authorization", "testdox_class_name": "POST Route: /antecedent/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent::test_create_type_of_meal_without_required_authorization", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 71, "TestCreateAntecedent.test_create_type_of_meal_without_required_authorization"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_type_of_meal_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017606610017537605, "testdox_title": "Failure: Create an antecedent without required authorization", "testdox_class_name": "POST Route: /antecedent/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestCreateAntecedent::test_create_type_of_meal_without_required_authorization", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 71, "TestCreateAntecedent.test_create_type_of_meal_without_required_authorization"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_create_type_of_meal_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014051899779587984, "testdox_title": "Failure: Create an antecedent without required authorization", "testdox_class_name": "POST Route: /antecedent/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent::test_get_antecedents", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 94, "TestGetAllAntecedent.test_get_antecedents"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "test_get_antecedents": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002265939983772114, "testdox_title": "Success: Get a list of all antecedents", "testdox_class_name": "GET Route: /antecedent/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent::test_get_antecedents", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 94, "TestGetAllAntecedent.test_get_antecedents"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "test_get_antecedents": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.03321679500004393, "testdox_title": "Success: Get a list of all antecedents", "testdox_class_name": "GET Route: /antecedent/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent::test_get_antecedents", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 94, "TestGetAllAntecedent.test_get_antecedents"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "test_get_antecedents": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001322089992754627, "testdox_title": "Success: Get a list of all antecedents", "testdox_class_name": "GET Route: /antecedent/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 114, "TestGetAllAntecedent.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAntecedent": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002107620020979084, "testdox_title": "Failure: Get a list of all antecedents without authentication", "testdox_class_name": "GET Route: /antecedent/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 114, "TestGetAllAntecedent.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAntecedent": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001147636998211965, "testdox_title": "Failure: Get a list of all antecedents without authentication", "testdox_class_name": "GET Route: /antecedent/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 114, "TestGetAllAntecedent.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAntecedent": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010765299884951673, "testdox_title": "Failure: Get a list of all antecedents without authentication", "testdox_class_name": "GET Route: /antecedent/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 119, "TestGetAllAntecedent.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "TestGetAllAntecedent": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019345100008649752, "testdox_title": "Failure: Get a list of all antecedents with non required authentication", "testdox_class_name": "GET Route: /antecedent/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 119, "TestGetAllAntecedent.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "TestGetAllAntecedent": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001351741000689799, "testdox_title": "Failure: Get a list of all antecedents with non required authentication", "testdox_class_name": "GET Route: /antecedent/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAllAntecedent::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 119, "TestGetAllAntecedent.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "TestGetAllAntecedent": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011160999929415993, "testdox_title": "Failure: Get a list of all antecedents with non required authentication", "testdox_class_name": "GET Route: /antecedent/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById::test_get_antecedent_by_id", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 131, "TestGetAntecedentById.test_get_antecedent_by_id"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "TestGetAntecedentById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_get_antecedent_by_id": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001995919992623385, "testdox_title": "Success: Get one antecedent by id", "testdox_class_name": "GET Route: /antecedent/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById::test_get_antecedent_by_id", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 131, "TestGetAntecedentById.test_get_antecedent_by_id"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "TestGetAntecedentById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_get_antecedent_by_id": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005924098997638794, "testdox_title": "Success: Get one antecedent by id", "testdox_class_name": "GET Route: /antecedent/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById::test_get_antecedent_by_id", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 131, "TestGetAntecedentById.test_get_antecedent_by_id"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "TestGetAntecedentById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_get_antecedent_by_id": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012928099749842659, "testdox_title": "Success: Get one antecedent by id", "testdox_class_name": "GET Route: /antecedent/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 149, "TestGetAntecedentById.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "TestGetAntecedentById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020683199909399264, "testdox_title": "Failure: Get one antecedent without authentication", "testdox_class_name": "GET Route: /antecedent/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 149, "TestGetAntecedentById.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "TestGetAntecedentById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001329480997810606, "testdox_title": "Failure: Get one antecedent without authentication", "testdox_class_name": "GET Route: /antecedent/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 149, "TestGetAntecedentById.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "TestGetAntecedentById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001416810009686742, "testdox_title": "Failure: Get one antecedent without authentication", "testdox_class_name": "GET Route: /antecedent/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 155, "TestGetAntecedentById.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "TestGetAntecedentById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027281499933451414, "testdox_title": "Failure: Get one antecedent with non required authentication", "testdox_class_name": "GET Route: /antecedent/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 155, "TestGetAntecedentById.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "TestGetAntecedentById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018052880004688632, "testdox_title": "Failure: Get one antecedent with non required authentication", "testdox_class_name": "GET Route: /antecedent/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestGetAntecedentById::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 155, "TestGetAntecedentById.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "TestGetAntecedentById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001513600000180304, "testdox_title": "Failure: Get one antecedent with non required authentication", "testdox_class_name": "GET Route: /antecedent/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_delete_antecedent", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 170, "TestDeleteAntecedent.test_delete_antecedent"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "test_delete_antecedent": 1, "asyncio": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002807019991450943, "testdox_title": "Success: Delete antecedent", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_delete_antecedent", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 170, "TestDeleteAntecedent.test_delete_antecedent"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "test_delete_antecedent": 1, "asyncio": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.01178250399971148, "testdox_title": "Success: Delete antecedent", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_delete_antecedent", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 170, "TestDeleteAntecedent.test_delete_antecedent"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "test_delete_antecedent": 1, "asyncio": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015755000276840292, "testdox_title": "Success: Delete antecedent", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_delete_antecedent_already_deleted", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 191, "TestDeleteAntecedent.test_delete_antecedent_already_deleted"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_antecedent_already_deleted": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000220157002331689, "testdox_title": "Failure: Delete antecedent already deleted", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_delete_antecedent_already_deleted", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 191, "TestDeleteAntecedent.test_delete_antecedent_already_deleted"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_antecedent_already_deleted": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0033764639993023593, "testdox_title": "Failure: Delete antecedent already deleted", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_delete_antecedent_already_deleted", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 191, "TestDeleteAntecedent.test_delete_antecedent_already_deleted"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_antecedent_already_deleted": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018422500215820037, "testdox_title": "Failure: Delete antecedent already deleted", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 206, "TestDeleteAntecedent.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021478299822774716, "testdox_title": "Failure: Delete antecedent without authentication", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 206, "TestDeleteAntecedent.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014560850031557493, "testdox_title": "Failure: Delete antecedent without authentication", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 206, "TestDeleteAntecedent.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012122600310249254, "testdox_title": "Failure: Delete antecedent without authentication", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 212, "TestDeleteAntecedent.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002086669992422685, "testdox_title": "Failure: Delete antecedent without required authentication", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 212, "TestDeleteAntecedent.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00195773900122731, "testdox_title": "Failure: Delete antecedent without required authentication", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestDeleteAntecedent::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 212, "TestDeleteAntecedent.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015899099889793433, "testdox_title": "Failure: Delete antecedent without required authentication", "testdox_class_name": "DELETE Route: /antecedent/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent::test_update_antecedent", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 227, "TestUpdateAntecedent.test_update_antecedent"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "test_update_antecedent": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002440190000925213, "testdox_title": "Success: Update antecedent", "testdox_class_name": "PATCH Route: /antecedent/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent::test_update_antecedent", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 227, "TestUpdateAntecedent.test_update_antecedent"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "test_update_antecedent": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.011744006002118113, "testdox_title": "Success: Update antecedent", "testdox_class_name": "PATCH Route: /antecedent/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent::test_update_antecedent", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 227, "TestUpdateAntecedent.test_update_antecedent"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "test_update_antecedent": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018460199862602167, "testdox_title": "Success: Update antecedent", "testdox_class_name": "PATCH Route: /antecedent/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 252, "TestUpdateAntecedent.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateAntecedent": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002460039977449924, "testdox_title": "Failure: Update antecedent without authentication", "testdox_class_name": "PATCH Route: /antecedent/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 252, "TestUpdateAntecedent.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateAntecedent": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014632849997724406, "testdox_title": "Failure: Update antecedent without authentication", "testdox_class_name": "PATCH Route: /antecedent/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 252, "TestUpdateAntecedent.test_no_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateAntecedent": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012451299699023366, "testdox_title": "Failure: Update antecedent without authentication", "testdox_class_name": "PATCH Route: /antecedent/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 258, "TestUpdateAntecedent.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021426599778351374, "testdox_title": "Failure: Update antecedent without required authentication", "testdox_class_name": "PATCH Route: /antecedent/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 258, "TestUpdateAntecedent.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001681677000306081, "testdox_title": "Failure: Update antecedent without required authentication", "testdox_class_name": "PATCH Route: /antecedent/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_e2e.py::TestUpdateAntecedent::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_e2e.py", 258, "TestUpdateAntecedent.test_different_required_authentication"], "keywords": {"src/modules/domain/antecedent/tests/test_antecedent_e2e.py": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateAntecedent": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0011487629999464843, "testdox_title": "Failure: Update antecedent without required authentication", "testdox_class_name": "PATCH Route: /antecedent/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType::test_create_new_antecedent_type", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 28, "TestCreateAntecedentType.test_create_new_antecedent_type"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_new_antecedent_type": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestCreateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.11712591999821598, "testdox_title": "Success: Create an antecedent type", "testdox_class_name": "POST Route: /antecedent-type/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType::test_create_new_antecedent_type", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 28, "TestCreateAntecedentType.test_create_new_antecedent_type"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_new_antecedent_type": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestCreateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007852793001802638, "testdox_title": "Success: Create an antecedent type", "testdox_class_name": "POST Route: /antecedent-type/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType::test_create_new_antecedent_type", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 28, "TestCreateAntecedentType.test_create_new_antecedent_type"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_new_antecedent_type": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestCreateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013422600022749975, "testdox_title": "Success: Create an antecedent type", "testdox_class_name": "POST Route: /antecedent-type/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType::test_create_antecedent_type_without_required_field", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 53, "TestCreateAntecedentType.test_create_antecedent_type_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestCreateAntecedentType": 1, "test_create_antecedent_type_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022190699746715836, "testdox_title": "Failure: Create an antecedent type without required fields", "testdox_class_name": "POST Route: /antecedent-type/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType::test_create_antecedent_type_without_required_field", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 53, "TestCreateAntecedentType.test_create_antecedent_type_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestCreateAntecedentType": 1, "test_create_antecedent_type_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0019731739994313102, "testdox_title": "Failure: Create an antecedent type without required fields", "testdox_class_name": "POST Route: /antecedent-type/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType::test_create_antecedent_type_without_required_field", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 53, "TestCreateAntecedentType.test_create_antecedent_type_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestCreateAntecedentType": 1, "test_create_antecedent_type_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001369219971820712, "testdox_title": "Failure: Create an antecedent type without required fields", "testdox_class_name": "POST Route: /antecedent-type/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType::test_create_type_of_meal_without_required_authorization", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 71, "TestCreateAntecedentType.test_create_type_of_meal_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_type_of_meal_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestCreateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10535224500199547, "testdox_title": "Failure: Create an antecedent type without required authorization", "testdox_class_name": "POST Route: /antecedent-type/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType::test_create_type_of_meal_without_required_authorization", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 71, "TestCreateAntecedentType.test_create_type_of_meal_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_type_of_meal_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestCreateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002026025002123788, "testdox_title": "Failure: Create an antecedent type without required authorization", "testdox_class_name": "POST Route: /antecedent-type/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestCreateAntecedentType::test_create_type_of_meal_without_required_authorization", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 71, "TestCreateAntecedentType.test_create_type_of_meal_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_type_of_meal_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestCreateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001571790016896557, "testdox_title": "Failure: Create an antecedent type without required authorization", "testdox_class_name": "POST Route: /antecedent-type/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType::test_get_antecedent_types", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 92, "TestGetAllAntecedentType.test_get_antecedent_types"], "keywords": {"TestGetAllAntecedentType": 1, "pytestmark": 1, "test_get_antecedent_types": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002109160013787914, "testdox_title": "Success: Get a list of all antecedent type", "testdox_class_name": "GET Route: /antecedent-type/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType::test_get_antecedent_types", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 92, "TestGetAllAntecedentType.test_get_antecedent_types"], "keywords": {"TestGetAllAntecedentType": 1, "pytestmark": 1, "test_get_antecedent_types": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.01194220400066115, "testdox_title": "Success: Get a list of all antecedent type", "testdox_class_name": "GET Route: /antecedent-type/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType::test_get_antecedent_types", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 92, "TestGetAllAntecedentType.test_get_antecedent_types"], "keywords": {"TestGetAllAntecedentType": 1, "pytestmark": 1, "test_get_antecedent_types": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000130442000227049, "testdox_title": "Success: Get a list of all antecedent type", "testdox_class_name": "GET Route: /antecedent-type/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 112, "TestGetAllAntecedentType.test_no_authentication"], "keywords": {"TestGetAllAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020828100241487846, "testdox_title": "Failure: Get a list of all antecedent types without authentication", "testdox_class_name": "GET Route: /antecedent-type/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 112, "TestGetAllAntecedentType.test_no_authentication"], "keywords": {"TestGetAllAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011444060000940226, "testdox_title": "Failure: Get a list of all antecedent types without authentication", "testdox_class_name": "GET Route: /antecedent-type/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 112, "TestGetAllAntecedentType.test_no_authentication"], "keywords": {"TestGetAllAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001067080011125654, "testdox_title": "Failure: Get a list of all antecedent types without authentication", "testdox_class_name": "GET Route: /antecedent-type/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 117, "TestGetAllAntecedentType.test_different_required_authentication"], "keywords": {"TestGetAllAntecedentType": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023401100042974576, "testdox_title": "Failure: Get a list of all antecedent types with non required authentication", "testdox_class_name": "GET Route: /antecedent-type/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 117, "TestGetAllAntecedentType.test_different_required_authentication"], "keywords": {"TestGetAllAntecedentType": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001290506999794161, "testdox_title": "Failure: Get a list of all antecedent types with non required authentication", "testdox_class_name": "GET Route: /antecedent-type/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAllAntecedentType::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 117, "TestGetAllAntecedentType.test_different_required_authentication"], "keywords": {"TestGetAllAntecedentType": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011177299893461168, "testdox_title": "Failure: Get a list of all antecedent types with non required authentication", "testdox_class_name": "GET Route: /antecedent-type/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById::test_get_antecedent_type_by_id", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 129, "TestGetAntecedentTypeById.test_get_antecedent_type_by_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_get_antecedent_type_by_id": 1, "it": 1, "asyncio": 1, "TestGetAntecedentTypeById": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002004529997066129, "testdox_title": "Success: Get one antecedent type by id", "testdox_class_name": "GET Route: /antecedent-type/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById::test_get_antecedent_type_by_id", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 129, "TestGetAntecedentTypeById.test_get_antecedent_type_by_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_get_antecedent_type_by_id": 1, "it": 1, "asyncio": 1, "TestGetAntecedentTypeById": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003800931001023855, "testdox_title": "Success: Get one antecedent type by id", "testdox_class_name": "GET Route: /antecedent-type/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById::test_get_antecedent_type_by_id", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 129, "TestGetAntecedentTypeById.test_get_antecedent_type_by_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_get_antecedent_type_by_id": 1, "it": 1, "asyncio": 1, "TestGetAntecedentTypeById": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016002199845388532, "testdox_title": "Success: Get one antecedent type by id", "testdox_class_name": "GET Route: /antecedent-type/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 147, "TestGetAntecedentTypeById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAntecedentTypeById": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002791859988064971, "testdox_title": "Failure: Get one antecedent type without authentication", "testdox_class_name": "GET Route: /antecedent-type/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 147, "TestGetAntecedentTypeById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAntecedentTypeById": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013803200017719064, "testdox_title": "Failure: Get one antecedent type without authentication", "testdox_class_name": "GET Route: /antecedent-type/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 147, "TestGetAntecedentTypeById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAntecedentTypeById": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011450300007709302, "testdox_title": "Failure: Get one antecedent type without authentication", "testdox_class_name": "GET Route: /antecedent-type/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 153, "TestGetAntecedentTypeById.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAntecedentTypeById": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021344199922168627, "testdox_title": "Failure: Get one antecedent type with non required authentication", "testdox_class_name": "GET Route: /antecedent-type/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 153, "TestGetAntecedentTypeById.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAntecedentTypeById": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017721500007610302, "testdox_title": "Failure: Get one antecedent type with non required authentication", "testdox_class_name": "GET Route: /antecedent-type/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestGetAntecedentTypeById::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 153, "TestGetAntecedentTypeById.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAntecedentTypeById": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015474899919354357, "testdox_title": "Failure: Get one antecedent type with non required authentication", "testdox_class_name": "GET Route: /antecedent-type/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_delete_antecedent_type", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 168, "TestDeleteAntecedentType.test_delete_antecedent_type"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "test_delete_antecedent_type": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002259070024592802, "testdox_title": "Success: Delete antecedent type", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_delete_antecedent_type", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 168, "TestDeleteAntecedentType.test_delete_antecedent_type"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "test_delete_antecedent_type": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.012538358998426702, "testdox_title": "Success: Delete antecedent type", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_delete_antecedent_type", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 168, "TestDeleteAntecedentType.test_delete_antecedent_type"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "test_delete_antecedent_type": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013847100126440637, "testdox_title": "Success: Delete antecedent type", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_delete_antecedent_type_relations", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 189, "TestDeleteAntecedentType.test_delete_antecedent_type_relations"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "test_delete_antecedent_type_relations": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022926699966774322, "testdox_title": "Success: Check if all relation from antecedent type, was deleted", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_delete_antecedent_type_relations", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 189, "TestDeleteAntecedentType.test_delete_antecedent_type_relations"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "test_delete_antecedent_type_relations": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001697077001153957, "testdox_title": "Success: Check if all relation from antecedent type, was deleted", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_delete_antecedent_type_relations", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 189, "TestDeleteAntecedentType.test_delete_antecedent_type_relations"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "test_delete_antecedent_type_relations": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018539800294092856, "testdox_title": "Success: Check if all relation from antecedent type, was deleted", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_delete_antecedent_type_already_deleted", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 203, "TestDeleteAntecedentType.test_delete_antecedent_type_already_deleted"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "test_delete_antecedent_type_already_deleted": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027172899717697874, "testdox_title": "Failure: Delete antecedent type already deleted", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_delete_antecedent_type_already_deleted", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 203, "TestDeleteAntecedentType.test_delete_antecedent_type_already_deleted"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "test_delete_antecedent_type_already_deleted": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003514273998007411, "testdox_title": "Failure: Delete antecedent type already deleted", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_delete_antecedent_type_already_deleted", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 203, "TestDeleteAntecedentType.test_delete_antecedent_type_already_deleted"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "test_delete_antecedent_type_already_deleted": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016503399820066988, "testdox_title": "Failure: Delete antecedent type already deleted", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 218, "TestDeleteAntecedentType.test_no_authentication"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021388799723354168, "testdox_title": "Failure: Delete antecedent type without authentication", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 218, "TestDeleteAntecedentType.test_no_authentication"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013366099992708769, "testdox_title": "Failure: Delete antecedent type without authentication", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 218, "TestDeleteAntecedentType.test_no_authentication"], "keywords": {"TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014294300126493908, "testdox_title": "Failure: Delete antecedent type without authentication", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 224, "TestDeleteAntecedentType.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020013600078527816, "testdox_title": "Failure: Delete antecedent type without required authentication", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 224, "TestDeleteAntecedentType.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014581409996026196, "testdox_title": "Failure: Delete antecedent type without required authentication", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestDeleteAntecedentType::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 224, "TestDeleteAntecedentType.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "TestDeleteAntecedentType": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001400279979861807, "testdox_title": "Failure: Delete antecedent type without required authentication", "testdox_class_name": "DELETE Route: /antecedent-type/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType::test_update_antecedent_type", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 239, "TestUpdateAntecedentType.test_update_antecedent_type"], "keywords": {"pytestmark": 1, "test_update_antecedent_type": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestUpdateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0001947759992617648, "testdox_title": "Success: Update antecedent type", "testdox_class_name": "PATCH Route: /antecedent-type/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType::test_update_antecedent_type", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 239, "TestUpdateAntecedentType.test_update_antecedent_type"], "keywords": {"pytestmark": 1, "test_update_antecedent_type": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestUpdateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008090268998785177, "testdox_title": "Success: Update antecedent type", "testdox_class_name": "PATCH Route: /antecedent-type/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType::test_update_antecedent_type", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 239, "TestUpdateAntecedentType.test_update_antecedent_type"], "keywords": {"pytestmark": 1, "test_update_antecedent_type": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestUpdateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001629069993214216, "testdox_title": "Success: Update antecedent type", "testdox_class_name": "PATCH Route: /antecedent-type/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 264, "TestUpdateAntecedentType.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestUpdateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027197199960937724, "testdox_title": "Failure: Update antecedent type without authentication", "testdox_class_name": "PATCH Route: /antecedent-type/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 264, "TestUpdateAntecedentType.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestUpdateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001967070002137916, "testdox_title": "Failure: Update antecedent type without authentication", "testdox_class_name": "PATCH Route: /antecedent-type/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType::test_no_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 264, "TestUpdateAntecedentType.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestUpdateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012736200005747378, "testdox_title": "Failure: Update antecedent type without authentication", "testdox_class_name": "PATCH Route: /antecedent-type/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 270, "TestUpdateAntecedentType.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestUpdateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025620700034778565, "testdox_title": "Failure: Update antecedent type without required authentication", "testdox_class_name": "PATCH Route: /antecedent-type/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 270, "TestUpdateAntecedentType.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestUpdateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016433419987151865, "testdox_title": "Failure: Update antecedent type without required authentication", "testdox_class_name": "PATCH Route: /antecedent-type/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py::TestUpdateAntecedentType::test_different_required_authentication", "location": ["src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py", 270, "TestUpdateAntecedentType.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/antecedent/tests/test_antecedent_type_e2e.py": 1, "TestUpdateAntecedentType": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0010623470006976277, "testdox_title": "Failure: Update antecedent type without required authentication", "testdox_class_name": "PATCH Route: /antecedent-type/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_with_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 32, "TestCreateAnthropometricData.test_create_new_anthropometric_data_with_date"], "keywords": {"test_create_new_anthropometric_data_with_date": 1, "pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.11277345100097591, "testdox_title": "Success: Create a anthropometric data with a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_with_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 32, "TestCreateAnthropometricData.test_create_new_anthropometric_data_with_date"], "keywords": {"test_create_new_anthropometric_data_with_date": 1, "pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008005359999515349, "testdox_title": "Success: Create a anthropometric data with a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_with_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 32, "TestCreateAnthropometricData.test_create_new_anthropometric_data_with_date"], "keywords": {"test_create_new_anthropometric_data_with_date": 1, "pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001716739971016068, "testdox_title": "Success: Create a anthropometric data with a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_without_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 52, "TestCreateAnthropometricData.test_create_new_anthropometric_data_without_date"], "keywords": {"pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_create_new_anthropometric_data_without_date": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022599200019612908, "testdox_title": "Success: Create a anthropometric data without a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_without_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 52, "TestCreateAnthropometricData.test_create_new_anthropometric_data_without_date"], "keywords": {"pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_create_new_anthropometric_data_without_date": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.006701565998810111, "testdox_title": "Success: Create a anthropometric data without a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_new_anthropometric_data_without_date", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 52, "TestCreateAnthropometricData.test_create_new_anthropometric_data_without_date"], "keywords": {"pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_create_new_anthropometric_data_without_date": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001667870019446127, "testdox_title": "Success: Create a anthropometric data without a date", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_field", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 71, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_anthropometric_data_without_required_field": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022476199956145138, "testdox_title": "Failure: Create a anthropometric data without required fields", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_field", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 71, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_anthropometric_data_without_required_field": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0023390560018015094, "testdox_title": "Failure: Create a anthropometric data without required fields", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_field", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 71, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_anthropometric_data_without_required_field": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013441600094665773, "testdox_title": "Failure: Create a anthropometric data without required fields", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_authorization", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 105, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_authorization"], "keywords": {"test_create_anthropometric_data_without_required_authorization": 1, "pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023006799892755225, "testdox_title": "Failure: Create a anthropometric data without authorization", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_authorization", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 105, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_authorization"], "keywords": {"test_create_anthropometric_data_without_required_authorization": 1, "pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013191229991207365, "testdox_title": "Failure: Create a anthropometric data without authorization", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestCreateAnthropometricData::test_create_anthropometric_data_without_required_authorization", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 105, "TestCreateAnthropometricData.test_create_anthropometric_data_without_required_authorization"], "keywords": {"test_create_anthropometric_data_without_required_authorization": 1, "pytestmark": 1, "()": 1, "TestCreateAnthropometricData": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013070100249024108, "testdox_title": "Failure: Create a anthropometric data without authorization", "testdox_class_name": "POST Route: /anthropometric-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_get_current_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 123, "TestGetUserAnthropometricData.test_get_current_user_anthropometric_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_get_current_user_anthropometric_data": 1, "TestGetUserAnthropometricData": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.05767614399883314, "testdox_title": "Success: Get current user anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_get_current_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 123, "TestGetUserAnthropometricData.test_get_current_user_anthropometric_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_get_current_user_anthropometric_data": 1, "TestGetUserAnthropometricData": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008988748002593638, "testdox_title": "Success: Get current user anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_get_current_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 123, "TestGetUserAnthropometricData.test_get_current_user_anthropometric_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_get_current_user_anthropometric_data": 1, "TestGetUserAnthropometricData": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013623399718198925, "testdox_title": "Success: Get current user anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 139, "TestGetUserAnthropometricData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetUserAnthropometricData": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002123300000675954, "testdox_title": "Failure: Get current user anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 139, "TestGetUserAnthropometricData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetUserAnthropometricData": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011386559999664314, "testdox_title": "Failure: Get current user anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 139, "TestGetUserAnthropometricData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetUserAnthropometricData": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010875400039367378, "testdox_title": "Failure: Get current user anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_different_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 144, "TestGetUserAnthropometricData.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetUserAnthropometricData": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002016950020333752, "testdox_title": "Failure: Get current user anthropometric data without anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_different_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 144, "TestGetUserAnthropometricData.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetUserAnthropometricData": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017542120003781747, "testdox_title": "Failure: Get current user anthropometric data without anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetUserAnthropometricData::test_different_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 144, "TestGetUserAnthropometricData.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetUserAnthropometricData": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011698800153681077, "testdox_title": "Failure: Get current user anthropometric data without anthropometric data", "testdox_class_name": "GET Route: /anthropometric-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 156, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1, "test_get_anthropometric_data_by_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021380800171755254, "testdox_title": "Success: Get anthropometric data by user id", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 156, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1, "test_get_anthropometric_data_by_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.009776226997928461, "testdox_title": "Success: Get anthropometric data by user id", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 156, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1, "test_get_anthropometric_data_by_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015211299978545867, "testdox_title": "Success: Get anthropometric data by user id", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_without_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 174, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_without_user_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1, "test_get_anthropometric_data_without_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023422800222760998, "testdox_title": "Failure: Get anthropometric data without required search field", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_without_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 174, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_without_user_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1, "test_get_anthropometric_data_without_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016858999988471624, "testdox_title": "Failure: Get anthropometric data without required search field", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_get_anthropometric_data_without_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 174, "TestGetAnthropometricDataByUserId.test_get_anthropometric_data_without_user_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1, "test_get_anthropometric_data_without_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001212070019391831, "testdox_title": "Failure: Get anthropometric data without required search field", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 187, "TestGetAnthropometricDataByUserId.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.05776563900144538, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 187, "TestGetAnthropometricDataByUserId.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013491620011336636, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 187, "TestGetAnthropometricDataByUserId.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011627400090219453, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 197, "TestGetAnthropometricDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003190989991708193, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 197, "TestGetAnthropometricDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014774369992665015, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 197, "TestGetAnthropometricDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "TestGetAnthropometricDataByUserId": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013270199997350574, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 218, "TestGetAnthropometricDataId.test_get_anthropometric_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_get_anthropometric_data_by_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002069490001304075, "testdox_title": "Success: Get anthropometric data id", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 218, "TestGetAnthropometricDataId.test_get_anthropometric_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_get_anthropometric_data_by_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005629793999105459, "testdox_title": "Success: Get anthropometric data id", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_get_anthropometric_data_by_user_id", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 218, "TestGetAnthropometricDataId.test_get_anthropometric_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_get_anthropometric_data_by_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013334500181372277, "testdox_title": "Success: Get anthropometric data id", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 234, "TestGetAnthropometricDataId.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002278059982927516, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 234, "TestGetAnthropometricDataId.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013480990019161254, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 234, "TestGetAnthropometricDataId.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011864499902003445, "testdox_title": "Failure: Get anthropometric data without authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 241, "TestGetAnthropometricDataId.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002824869989126455, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 241, "TestGetAnthropometricDataId.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015640799974789843, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestGetAnthropometricDataId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 241, "TestGetAnthropometricDataId.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "TestGetAnthropometricDataId": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001456120007787831, "testdox_title": "Failure: Get anthropometric data with non required authentication", "testdox_class_name": "GET Route: /anthropometric-data/get/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_update_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 299, "TestUpdateAnthropometricData.test_update_anthropometric_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestUpdateAnthropometricData": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_update_anthropometric_data": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021102499886183068, "testdox_title": "Success: Update user anthropometric data", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_update_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 299, "TestUpdateAnthropometricData.test_update_anthropometric_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestUpdateAnthropometricData": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_update_anthropometric_data": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.016294691002258332, "testdox_title": "Success: Update user anthropometric data", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_update_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 299, "TestUpdateAnthropometricData.test_update_anthropometric_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestUpdateAnthropometricData": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1, "test_update_anthropometric_data": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014188000204740092, "testdox_title": "Success: Update user anthropometric data", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 322, "TestUpdateAnthropometricData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestUpdateAnthropometricData": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002410140004940331, "testdox_title": "Failure: Update anthropometric data without authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 322, "TestUpdateAnthropometricData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestUpdateAnthropometricData": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013104210011078976, "testdox_title": "Failure: Update anthropometric data without authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 322, "TestUpdateAnthropometricData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestUpdateAnthropometricData": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001318220020039007, "testdox_title": "Failure: Update anthropometric data without authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 327, "TestUpdateAnthropometricData.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "TestUpdateAnthropometricData": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021798399757244624, "testdox_title": "Failure: Update anthropometric data without required authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 327, "TestUpdateAnthropometricData.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "TestUpdateAnthropometricData": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001423546997102676, "testdox_title": "Failure: Update anthropometric data without required authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestUpdateAnthropometricData::test_no_required_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 327, "TestUpdateAnthropometricData.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "TestUpdateAnthropometricData": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000125485999888042, "testdox_title": "Failure: Update anthropometric data without required authentication", "testdox_class_name": "PATCH Route: /anthropometric-data/my-last-data/update", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 339, "TestDeleteAnthropometricData.test_delete_user_anthropometric_data"], "keywords": {"pytestmark": 1, "TestDeleteAnthropometricData": 1, "()": 1, "describe": 1, "test_delete_user_anthropometric_data": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002757849979388993, "testdox_title": "Success: Delete anthropometric data", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 339, "TestDeleteAnthropometricData.test_delete_user_anthropometric_data"], "keywords": {"pytestmark": 1, "TestDeleteAnthropometricData": 1, "()": 1, "describe": 1, "test_delete_user_anthropometric_data": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.009550865997880464, "testdox_title": "Success: Delete anthropometric data", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_user_anthropometric_data", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 339, "TestDeleteAnthropometricData.test_delete_user_anthropometric_data"], "keywords": {"pytestmark": 1, "TestDeleteAnthropometricData": 1, "()": 1, "describe": 1, "test_delete_user_anthropometric_data": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012551200052257627, "testdox_title": "Success: Delete anthropometric data", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_same_user", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 360, "TestDeleteAnthropometricData.test_delete_same_user"], "keywords": {"pytestmark": 1, "TestDeleteAnthropometricData": 1, "()": 1, "describe": 1, "test_delete_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022864099810249172, "testdox_title": "Failure: Delete the same anthropometric data twice", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_same_user", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 360, "TestDeleteAnthropometricData.test_delete_same_user"], "keywords": {"pytestmark": 1, "TestDeleteAnthropometricData": 1, "()": 1, "describe": 1, "test_delete_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003547334999893792, "testdox_title": "Failure: Delete the same anthropometric data twice", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_delete_same_user", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 360, "TestDeleteAnthropometricData.test_delete_same_user"], "keywords": {"pytestmark": 1, "TestDeleteAnthropometricData": 1, "()": 1, "describe": 1, "test_delete_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013945200043963268, "testdox_title": "Failure: Delete the same anthropometric data twice", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 373, "TestDeleteAnthropometricData.test_no_authentication"], "keywords": {"pytestmark": 1, "TestDeleteAnthropometricData": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021753600231022574, "testdox_title": "Failure: Delete anthropometric data without authentication", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 373, "TestDeleteAnthropometricData.test_no_authentication"], "keywords": {"pytestmark": 1, "TestDeleteAnthropometricData": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012772469999617897, "testdox_title": "Failure: Delete anthropometric data without authentication", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py::TestDeleteAnthropometricData::test_no_authentication", "location": ["src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py", 373, "TestDeleteAnthropometricData.test_no_authentication"], "keywords": {"pytestmark": 1, "TestDeleteAnthropometricData": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/anthropometric_data/tests/test_anthropometric_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0012610449994099326, "testdox_title": "Failure: Delete anthropometric data without authentication", "testdox_class_name": "DELETE Route: /anthropometric-data/delete/<anthropometric_data_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_new_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 34, "TestCreateAppointment.test_create_new_appointment"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "test_create_new_appointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10644545700051822, "testdox_title": "Success: Create an appointment", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_new_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 34, "TestCreateAppointment.test_create_new_appointment"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "test_create_new_appointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.016279513998597395, "testdox_title": "Success: Create an appointment", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_new_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 34, "TestCreateAppointment.test_create_new_appointment"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "test_create_new_appointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013612700058729388, "testdox_title": "Success: Create an appointment", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 53, "TestCreateAppointment.test_create_appointment_without_required_field"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "test_create_appointment_without_required_field": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002525300005800091, "testdox_title": "Failure: Create a appointment without required fields", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 53, "TestCreateAppointment.test_create_appointment_without_required_field"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "test_create_appointment_without_required_field": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002033163000305649, "testdox_title": "Failure: Create a appointment without required fields", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 53, "TestCreateAppointment.test_create_appointment_without_required_field"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "test_create_appointment_without_required_field": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000119731997983763, "testdox_title": "Failure: Create a appointment without required fields", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 71, "TestCreateAppointment.test_create_appointment_without_required_authorization"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "test_create_appointment_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.11111659899688675, "testdox_title": "Failure: Create a appointment without required authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 71, "TestCreateAppointment.test_create_appointment_without_required_authorization"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "test_create_appointment_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002045709999947576, "testdox_title": "Failure: Create a appointment without required authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 71, "TestCreateAppointment.test_create_appointment_without_required_authorization"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "test_create_appointment_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012323000191827305, "testdox_title": "Failure: Create a appointment without required authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 89, "TestCreateAppointment.test_create_appointment_goal_without_required_authorization"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "test_create_appointment_goal_without_required_authorization": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024413799837930128, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 89, "TestCreateAppointment.test_create_appointment_goal_without_required_authorization"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "test_create_appointment_goal_without_required_authorization": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011116560017399024, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestCreateAppointment::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 89, "TestCreateAppointment.test_create_appointment_goal_without_required_authorization"], "keywords": {"TestCreateAppointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "test_create_appointment_goal_without_required_authorization": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011241599713684991, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_get_all_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 109, "TestGetAllAppointment.test_get_all_appointment"], "keywords": {"test_get_all_appointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAppointment": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019951800277340226, "testdox_title": "Success: Get all appointments", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_get_all_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 109, "TestGetAllAppointment.test_get_all_appointment"], "keywords": {"test_get_all_appointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAppointment": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.009737857002619421, "testdox_title": "Success: Get all appointments", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_get_all_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 109, "TestGetAllAppointment.test_get_all_appointment"], "keywords": {"test_get_all_appointment": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAppointment": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013143199976184405, "testdox_title": "Success: Get all appointments", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 124, "TestGetAllAppointment.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllAppointment": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023030900047160685, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 124, "TestGetAllAppointment.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllAppointment": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013075619972369168, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 124, "TestGetAllAppointment.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllAppointment": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011927900050068274, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 132, "TestGetAllAppointment.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllAppointment": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027475399838294834, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 132, "TestGetAllAppointment.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllAppointment": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014771290007047355, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAllAppointment::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 132, "TestGetAllAppointment.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllAppointment": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001556979987071827, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_get_appointment_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 152, "TestGetAppointmentById.test_get_appointment_by_id"], "keywords": {"test_get_appointment_by_id": 1, "TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021506299890461378, "testdox_title": "Success: Get appointment by id", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_get_appointment_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 152, "TestGetAppointmentById.test_get_appointment_by_id"], "keywords": {"test_get_appointment_by_id": 1, "TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.009257081997930072, "testdox_title": "Success: Get appointment by id", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_get_appointment_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 152, "TestGetAppointmentById.test_get_appointment_by_id"], "keywords": {"test_get_appointment_by_id": 1, "TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015589699978590943, "testdox_title": "Success: Get appointment by id", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 168, "TestGetAppointmentById.test_no_authentication"], "keywords": {"TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024060000214376487, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 168, "TestGetAppointmentById.test_no_authentication"], "keywords": {"TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011454769992269576, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 168, "TestGetAppointmentById.test_no_authentication"], "keywords": {"TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010739400022430345, "testdox_title": "Failure: Get appointment without authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 175, "TestGetAppointmentById.test_different_required_authentication[user_common]"], "keywords": {"TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025208200167980976, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 175, "TestGetAppointmentById.test_different_required_authentication[user_common]"], "keywords": {"TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015921039994282182, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestGetAppointmentById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 175, "TestGetAppointmentById.test_different_required_authentication[user_common]"], "keywords": {"TestGetAppointmentById": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001429799995094072, "testdox_title": "Failure: Get appointment with non required authentication", "testdox_class_name": "GET Route: /appointment/get/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 191, "TestUpdateAppointment.test_update_appointment_goal"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "TestUpdateAppointment": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_update_appointment_goal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020722099725389853, "testdox_title": "Success: Update appointment removing goals", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 191, "TestUpdateAppointment.test_update_appointment_goal"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "TestUpdateAppointment": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_update_appointment_goal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.022471981999842683, "testdox_title": "Success: Update appointment removing goals", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 191, "TestUpdateAppointment.test_update_appointment_goal"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "TestUpdateAppointment": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_update_appointment_goal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013463700088323094, "testdox_title": "Success: Update appointment removing goals", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 214, "TestUpdateAppointment.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "TestUpdateAppointment": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023191399668576196, "testdox_title": "Failure: Update appointment without authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 214, "TestUpdateAppointment.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "TestUpdateAppointment": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011519910003698897, "testdox_title": "Failure: Update appointment without authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 214, "TestUpdateAppointment.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "TestUpdateAppointment": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010751699664979242, "testdox_title": "Failure: Update appointment without authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 219, "TestUpdateAppointment.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "TestUpdateAppointment": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019769999926211312, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 219, "TestUpdateAppointment.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "TestUpdateAppointment": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013042169994150754, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestUpdateAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 219, "TestUpdateAppointment.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "TestUpdateAppointment": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011128899859613739, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment/update/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 231, "TestDeleteAppointment.test_delete_appointment"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1, "test_delete_appointment": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019869899915647693, "testdox_title": "Success: Delete appointment", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 231, "TestDeleteAppointment.test_delete_appointment"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1, "test_delete_appointment": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.015251205997628858, "testdox_title": "Success: Delete appointment", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 231, "TestDeleteAppointment.test_delete_appointment"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1, "test_delete_appointment": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017368000044371001, "testdox_title": "Success: Delete appointment", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment_relationships", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 250, "TestDeleteAppointment.test_delete_appointment_relationships"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "test_delete_appointment_relationships": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022494199947686866, "testdox_title": "Success: Deleted appointment relationships must be deleted", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment_relationships", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 250, "TestDeleteAppointment.test_delete_appointment_relationships"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "test_delete_appointment_relationships": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013080179996904917, "testdox_title": "Success: Deleted appointment relationships must be deleted", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_appointment_relationships", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 250, "TestDeleteAppointment.test_delete_appointment_relationships"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "test_delete_appointment_relationships": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012739399971906096, "testdox_title": "Success: Deleted appointment relationships must be deleted", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 266, "TestDeleteAppointment.test_delete_same_appointment_goal"], "keywords": {"test_delete_same_appointment_goal": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002170370025851298, "testdox_title": "Failure: Delete the same appointment twice", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 266, "TestDeleteAppointment.test_delete_same_appointment_goal"], "keywords": {"test_delete_same_appointment_goal": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003834989001916256, "testdox_title": "Failure: Delete the same appointment twice", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 266, "TestDeleteAppointment.test_delete_same_appointment_goal"], "keywords": {"test_delete_same_appointment_goal": 1, "pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015076099953148514, "testdox_title": "Failure: Delete the same appointment twice", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 279, "TestDeleteAppointment.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023578100081067532, "testdox_title": "Failure: Delete appointment without authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 279, "TestDeleteAppointment.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012455930009309668, "testdox_title": "Failure: Delete appointment without authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 279, "TestDeleteAppointment.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015094099944690242, "testdox_title": "Failure: Delete appointment without authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 284, "TestDeleteAppointment.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024046799808274955, "testdox_title": "Failure: Delete appointment without required authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 284, "TestDeleteAppointment.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016823859987198375, "testdox_title": "Failure: Delete appointment without required authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_e2e.py::TestDeleteAppointment::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_e2e.py", 284, "TestDeleteAppointment.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "src/modules/domain/appointment/tests/test_appointment_e2e.py": 1, "describe": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "TestDeleteAppointment": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0013117320013407152, "testdox_title": "Failure: Delete appointment without required authentication", "testdox_class_name": "DELETE Route: /appointment/delete/<appointment_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_new_appointment_goal_with_date", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 27, "TestCreateAppointmentGoal.test_create_new_appointment_goal_with_date"], "keywords": {"pytestmark": 1, "test_create_new_appointment_goal_with_date": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.12304561999917496, "testdox_title": "Success: Create a appointment goal", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_new_appointment_goal_with_date", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 27, "TestCreateAppointmentGoal.test_create_new_appointment_goal_with_date"], "keywords": {"pytestmark": 1, "test_create_new_appointment_goal_with_date": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0053748849968542345, "testdox_title": "Success: Create a appointment goal", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_new_appointment_goal_with_date", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 27, "TestCreateAppointmentGoal.test_create_new_appointment_goal_with_date"], "keywords": {"pytestmark": 1, "test_create_new_appointment_goal_with_date": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001323549986409489, "testdox_title": "Success: Create a appointment goal", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 46, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_appointment_goal_without_required_field": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021971100068185478, "testdox_title": "Failure: Create a appointment goal without required fields", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 46, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_appointment_goal_without_required_field": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001846287999796914, "testdox_title": "Failure: Create a appointment goal without required fields", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_field", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 46, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_appointment_goal_without_required_field": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011902000187546946, "testdox_title": "Failure: Create a appointment goal without required fields", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 64, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_create_appointment_goal_without_required_authorization": 1, "it": 1, "asyncio": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.108180495997658, "testdox_title": "Failure: Create a appointment goal without required authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 64, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_create_appointment_goal_without_required_authorization": 1, "it": 1, "asyncio": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017272900004172698, "testdox_title": "Failure: Create a appointment goal without required authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_required_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 64, "TestCreateAppointmentGoal.test_create_appointment_goal_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "test_create_appointment_goal_without_required_authorization": 1, "it": 1, "asyncio": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012295499982428737, "testdox_title": "Failure: Create a appointment goal without required authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 80, "TestCreateAppointmentGoal.test_create_appointment_goal_without_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "test_create_appointment_goal_without_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020791000133613124, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 80, "TestCreateAppointmentGoal.test_create_appointment_goal_without_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "test_create_appointment_goal_without_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001102026002627099, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestCreateAppointmentGoal::test_create_appointment_goal_without_authorization", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 80, "TestCreateAppointmentGoal.test_create_appointment_goal_without_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "test_create_appointment_goal_without_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011214500045753084, "testdox_title": "Failure: Create a appointment goal without authorization", "testdox_class_name": "POST Route: /appointment-goal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_get_all_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 98, "TestGetAllAppointmentGoal.test_get_all_appointment_goal"], "keywords": {"pytestmark": 1, "test_get_all_appointment_goal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020113699793000706, "testdox_title": "Success: Get all appointment goal", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_get_all_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 98, "TestGetAllAppointmentGoal.test_get_all_appointment_goal"], "keywords": {"pytestmark": 1, "test_get_all_appointment_goal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.006345920999592636, "testdox_title": "Success: Get all appointment goal", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_get_all_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 98, "TestGetAllAppointmentGoal.test_get_all_appointment_goal"], "keywords": {"pytestmark": 1, "test_get_all_appointment_goal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001640939990465995, "testdox_title": "Success: Get all appointment goal", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 115, "TestGetAllAppointmentGoal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002820369991241023, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 115, "TestGetAllAppointmentGoal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001286492002691375, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 115, "TestGetAllAppointmentGoal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllAppointmentGoal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001184069988084957, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 123, "TestGetAllAppointmentGoal.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllAppointmentGoal": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026797299869940616, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 123, "TestGetAllAppointmentGoal.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllAppointmentGoal": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00136629900225671, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAllAppointmentGoal::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 123, "TestGetAllAppointmentGoal.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllAppointmentGoal": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013327099804882891, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_get_appointment_goal_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 143, "TestGetAppointmentGoalById.test_get_appointment_goal_by_id"], "keywords": {"pytestmark": 1, "TestGetAppointmentGoalById": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "test_get_appointment_goal_by_id": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002865170026780106, "testdox_title": "Success: Get appointment goal by id", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_get_appointment_goal_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 143, "TestGetAppointmentGoalById.test_get_appointment_goal_by_id"], "keywords": {"pytestmark": 1, "TestGetAppointmentGoalById": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "test_get_appointment_goal_by_id": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0036060350030311383, "testdox_title": "Success: Get appointment goal by id", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_get_appointment_goal_by_id", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 143, "TestGetAppointmentGoalById.test_get_appointment_goal_by_id"], "keywords": {"pytestmark": 1, "TestGetAppointmentGoalById": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "test_get_appointment_goal_by_id": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001269329986826051, "testdox_title": "Success: Get appointment goal by id", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 159, "TestGetAppointmentGoalById.test_no_authentication"], "keywords": {"pytestmark": 1, "TestGetAppointmentGoalById": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002754060005827341, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 159, "TestGetAppointmentGoalById.test_no_authentication"], "keywords": {"pytestmark": 1, "TestGetAppointmentGoalById": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012578599998960271, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 159, "TestGetAppointmentGoalById.test_no_authentication"], "keywords": {"pytestmark": 1, "TestGetAppointmentGoalById": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011753400031011552, "testdox_title": "Failure: Get appointment goal without authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 166, "TestGetAppointmentGoalById.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "TestGetAppointmentGoalById": 1, "()": 1, "describe": 1, "parametrize": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002668939996510744, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 166, "TestGetAppointmentGoalById.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "TestGetAppointmentGoalById": 1, "()": 1, "describe": 1, "parametrize": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015811980010767002, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestGetAppointmentGoalById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 166, "TestGetAppointmentGoalById.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "TestGetAppointmentGoalById": 1, "()": 1, "describe": 1, "parametrize": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013820299864164554, "testdox_title": "Failure: Get appointment goal with non required authentication", "testdox_class_name": "GET Route: /appointment-goal/get/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 182, "TestUpdateAppointmentGoal.test_update_appointment_goal"], "keywords": {"pytestmark": 1, "TestUpdateAppointmentGoal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_update_appointment_goal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020715200298582204, "testdox_title": "Success: Update appointment goal", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 182, "TestUpdateAppointmentGoal.test_update_appointment_goal"], "keywords": {"pytestmark": 1, "TestUpdateAppointmentGoal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_update_appointment_goal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.009056907001649961, "testdox_title": "Success: Update appointment goal", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_update_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 182, "TestUpdateAppointmentGoal.test_update_appointment_goal"], "keywords": {"pytestmark": 1, "TestUpdateAppointmentGoal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_update_appointment_goal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013383499754127115, "testdox_title": "Success: Update appointment goal", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 205, "TestUpdateAppointmentGoal.test_no_authentication"], "keywords": {"pytestmark": 1, "TestUpdateAppointmentGoal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022308600091491826, "testdox_title": "Failure: Update appointment goal without authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 205, "TestUpdateAppointmentGoal.test_no_authentication"], "keywords": {"pytestmark": 1, "TestUpdateAppointmentGoal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014482629994745366, "testdox_title": "Failure: Update appointment goal without authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 205, "TestUpdateAppointmentGoal.test_no_authentication"], "keywords": {"pytestmark": 1, "TestUpdateAppointmentGoal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018255699978908524, "testdox_title": "Failure: Update appointment goal without authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 210, "TestUpdateAppointmentGoal.test_no_required_authentication"], "keywords": {"pytestmark": 1, "TestUpdateAppointmentGoal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002986819999932777, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 210, "TestUpdateAppointmentGoal.test_no_required_authentication"], "keywords": {"pytestmark": 1, "TestUpdateAppointmentGoal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002099878001899924, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestUpdateAppointmentGoal::test_no_required_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 210, "TestUpdateAppointmentGoal.test_no_required_authentication"], "keywords": {"pytestmark": 1, "TestUpdateAppointmentGoal": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014628400094807148, "testdox_title": "Failure: Update appointment goal without required authentication", "testdox_class_name": "PATCH Route: /appointment-goal/update/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 222, "TestDeleteAppointmentGoal.test_delete_appointment_goal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "asyncio": 1, "test_delete_appointment_goal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002702769997995347, "testdox_title": "Success: Delete appointment goal", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 222, "TestDeleteAppointmentGoal.test_delete_appointment_goal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "asyncio": 1, "test_delete_appointment_goal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.014095964001171524, "testdox_title": "Success: Delete appointment goal", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 222, "TestDeleteAppointmentGoal.test_delete_appointment_goal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "asyncio": 1, "test_delete_appointment_goal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013207599840825424, "testdox_title": "Success: Delete appointment goal", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 241, "TestDeleteAppointmentGoal.test_delete_same_appointment_goal"], "keywords": {"test_delete_same_appointment_goal": 1, "pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002240920002805069, "testdox_title": "Failure: Delete the same appointment goal twice", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 241, "TestDeleteAppointmentGoal.test_delete_same_appointment_goal"], "keywords": {"test_delete_same_appointment_goal": 1, "pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0032799930013425183, "testdox_title": "Failure: Delete the same appointment goal twice", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_delete_same_appointment_goal", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 241, "TestDeleteAppointmentGoal.test_delete_same_appointment_goal"], "keywords": {"test_delete_same_appointment_goal": 1, "pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013181299800635315, "testdox_title": "Failure: Delete the same appointment goal twice", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 254, "TestDeleteAppointmentGoal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020248600048944354, "testdox_title": "Failure: Delete appointment goal without authentication", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 254, "TestDeleteAppointmentGoal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011899640012416057, "testdox_title": "Failure: Delete appointment goal without authentication", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py::TestDeleteAppointmentGoal::test_no_authentication", "location": ["src/modules/domain/appointment/tests/test_appointment_goal_e2e.py", 254, "TestDeleteAppointmentGoal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/appointment/tests/test_appointment_goal_e2e.py": 1, "aquavitae-app": 1, "TestDeleteAppointmentGoal": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0009875839969026856, "testdox_title": "Failure: Delete appointment goal without authentication", "testdox_class_name": "DELETE Route: /appointment-goal/delete/<appointment_goal_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 29, "TestCreateFoodCategory.test_create_new_food_category"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_new_food_category": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10015231700162985, "testdox_title": "Success: Create a food category", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 29, "TestCreateFoodCategory.test_create_new_food_category"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_new_food_category": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.01232357900153147, "testdox_title": "Success: Create a food category", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 29, "TestCreateFoodCategory.test_create_new_food_category"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_new_food_category": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013009000031161122, "testdox_title": "Success: Create a food category", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category_no_relationship", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 57, "TestCreateFoodCategory.test_create_new_food_category_no_relationship"], "keywords": {"test_create_new_food_category_no_relationship": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022161499873618595, "testdox_title": "Success: Create a food category without relationship", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category_no_relationship", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 57, "TestCreateFoodCategory.test_create_new_food_category_no_relationship"], "keywords": {"test_create_new_food_category_no_relationship": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00642814700040617, "testdox_title": "Success: Create a food category without relationship", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_new_food_category_no_relationship", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 57, "TestCreateFoodCategory.test_create_new_food_category_no_relationship"], "keywords": {"test_create_new_food_category_no_relationship": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001466210014768876, "testdox_title": "Success: Create a food category without relationship", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 84, "TestCreateFoodCategory.test_create_food_category_with_deleted_relation"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_category_with_deleted_relation": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021847199968760833, "testdox_title": "Failure: Create a food category with deleted relation", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 84, "TestCreateFoodCategory.test_create_food_category_with_deleted_relation"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_category_with_deleted_relation": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.004372073999547865, "testdox_title": "Failure: Create a food category with deleted relation", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 84, "TestCreateFoodCategory.test_create_food_category_with_deleted_relation"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_category_with_deleted_relation": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018747499780147336, "testdox_title": "Failure: Create a food category with deleted relation", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_field", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 102, "TestCreateFoodCategory.test_create_food_category_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "test_create_food_category_without_required_field": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00034490899997763336, "testdox_title": "Failure: Create a food category without required fields", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_field", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 102, "TestCreateFoodCategory.test_create_food_category_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "test_create_food_category_without_required_field": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0029097029982949607, "testdox_title": "Failure: Create a food category without required fields", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_field", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 102, "TestCreateFoodCategory.test_create_food_category_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "test_create_food_category_without_required_field": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001751870004227385, "testdox_title": "Failure: Create a food category without required fields", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 123, "TestCreateFoodCategory.test_create_food_category_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "test_create_food_category_without_required_authorization": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10815985499721137, "testdox_title": "Failure: Create a food category without required authorization", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 123, "TestCreateFoodCategory.test_create_food_category_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "test_create_food_category_without_required_authorization": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001613083000847837, "testdox_title": "Failure: Create a food category without required authorization", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestCreateFoodCategory::test_create_food_category_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 123, "TestCreateFoodCategory.test_create_food_category_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "test_create_food_category_without_required_authorization": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011937199815292843, "testdox_title": "Failure: Create a food category without required authorization", "testdox_class_name": "POST Route: /food-category/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_get_food_categories", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 145, "TestGetAllFoodCategories.test_get_food_categories"], "keywords": {"TestGetAllFoodCategories": 1, "pytestmark": 1, "test_get_food_categories": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022099100169725716, "testdox_title": "Success: Get a list of all food category", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_get_food_categories", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 145, "TestGetAllFoodCategories.test_get_food_categories"], "keywords": {"TestGetAllFoodCategories": 1, "pytestmark": 1, "test_get_food_categories": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.01510454700110131, "testdox_title": "Success: Get a list of all food category", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_get_food_categories", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 145, "TestGetAllFoodCategories.test_get_food_categories"], "keywords": {"TestGetAllFoodCategories": 1, "pytestmark": 1, "test_get_food_categories": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019209799938835204, "testdox_title": "Success: Get a list of all food category", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 176, "TestGetAllFoodCategories.test_no_authentication"], "keywords": {"TestGetAllFoodCategories": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000273580000794027, "testdox_title": "Failure: Get a list of all food categories without authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 176, "TestGetAllFoodCategories.test_no_authentication"], "keywords": {"TestGetAllFoodCategories": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012168149987701327, "testdox_title": "Failure: Get a list of all food categories without authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 176, "TestGetAllFoodCategories.test_no_authentication"], "keywords": {"TestGetAllFoodCategories": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001083289971575141, "testdox_title": "Failure: Get a list of all food categories without authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 181, "TestGetAllFoodCategories.test_different_required_authentication[user_common]"], "keywords": {"TestGetAllFoodCategories": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002467859994794708, "testdox_title": "Failure: Get a list of all food categories with non required authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 181, "TestGetAllFoodCategories.test_different_required_authentication[user_common]"], "keywords": {"TestGetAllFoodCategories": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013793559992336668, "testdox_title": "Failure: Get a list of all food categories with non required authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetAllFoodCategories::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 181, "TestGetAllFoodCategories.test_different_required_authentication[user_common]"], "keywords": {"TestGetAllFoodCategories": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012916099876747467, "testdox_title": "Failure: Get a list of all food categories with non required authentication", "testdox_class_name": "GET Route: /food-category/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_get_food_category_by_id", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 195, "TestGetFoodCategoryById.test_get_food_category_by_id"], "keywords": {"pytestmark": 1, "()": 1, "TestGetFoodCategoryById": 1, "test_get_food_category_by_id": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020059199960087426, "testdox_title": "Success: Get one food category by id", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_get_food_category_by_id", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 195, "TestGetFoodCategoryById.test_get_food_category_by_id"], "keywords": {"pytestmark": 1, "()": 1, "TestGetFoodCategoryById": 1, "test_get_food_category_by_id": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0052468750000116415, "testdox_title": "Success: Get one food category by id", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_get_food_category_by_id", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 195, "TestGetFoodCategoryById.test_get_food_category_by_id"], "keywords": {"pytestmark": 1, "()": 1, "TestGetFoodCategoryById": 1, "test_get_food_category_by_id": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017470800230512396, "testdox_title": "Success: Get one food category by id", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 215, "TestGetFoodCategoryById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "TestGetFoodCategoryById": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002826370000548195, "testdox_title": "Failure: Get one food category without authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 215, "TestGetFoodCategoryById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "TestGetFoodCategoryById": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002067671000986593, "testdox_title": "Failure: Get one food category without authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 215, "TestGetFoodCategoryById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "TestGetFoodCategoryById": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013105700054438785, "testdox_title": "Failure: Get one food category without authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 220, "TestGetFoodCategoryById.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "TestGetFoodCategoryById": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027144400155521, "testdox_title": "Failure: Get one food category with non required authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 220, "TestGetFoodCategoryById.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "TestGetFoodCategoryById": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0020331300001998898, "testdox_title": "Failure: Get one food category with non required authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestGetFoodCategoryById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 220, "TestGetFoodCategoryById.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "TestGetFoodCategoryById": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014535200170939788, "testdox_title": "Failure: Get one food category with non required authentication", "testdox_class_name": "GET Route: /food-category/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 234, "TestDeleteFoodCategory.test_delete_food_category"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "test_delete_food_category": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021127500076545402, "testdox_title": "Success: Delete food category", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 234, "TestDeleteFoodCategory.test_delete_food_category"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "test_delete_food_category": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.012346859999524895, "testdox_title": "Success: Delete food category", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 234, "TestDeleteFoodCategory.test_delete_food_category"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "test_delete_food_category": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015728899961686693, "testdox_title": "Success: Delete food category", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_relations", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 255, "TestDeleteFoodCategory.test_delete_food_category_relations"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_food_category_relations": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003505670028971508, "testdox_title": "Success: Check if all relation from food category, was deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_relations", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 255, "TestDeleteFoodCategory.test_delete_food_category_relations"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_food_category_relations": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.004393502000311855, "testdox_title": "Success: Check if all relation from food category, was deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_relations", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 255, "TestDeleteFoodCategory.test_delete_food_category_relations"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_food_category_relations": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014790799832553603, "testdox_title": "Success: Check if all relation from food category, was deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_already_deleted", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 274, "TestDeleteFoodCategory.test_delete_food_category_already_deleted"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_food_category_already_deleted": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00029016500047873706, "testdox_title": "Failure: Delete food category already deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_already_deleted", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 274, "TestDeleteFoodCategory.test_delete_food_category_already_deleted"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_food_category_already_deleted": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003978507000283571, "testdox_title": "Failure: Delete food category already deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_delete_food_category_already_deleted", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 274, "TestDeleteFoodCategory.test_delete_food_category_already_deleted"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_food_category_already_deleted": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016409900126745924, "testdox_title": "Failure: Delete food category already deleted", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 289, "TestDeleteFoodCategory.test_no_authentication"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027529699946171604, "testdox_title": "Failure: Delete food category without authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 289, "TestDeleteFoodCategory.test_no_authentication"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018068770004902035, "testdox_title": "Failure: Delete food category without authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 289, "TestDeleteFoodCategory.test_no_authentication"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001587190017744433, "testdox_title": "Failure: Delete food category without authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 295, "TestDeleteFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002866889990400523, "testdox_title": "Failure: Delete food category without required authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 295, "TestDeleteFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017508900018583518, "testdox_title": "Failure: Delete food category without required authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestDeleteFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 295, "TestDeleteFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "TestDeleteFoodCategory": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015690900181652978, "testdox_title": "Failure: Delete food category without required authentication", "testdox_class_name": "DELETE Route: /food-category/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_update_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 312, "TestUpdateFoodCategory.test_update_food_category"], "keywords": {"test_update_food_category": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002353290001337882, "testdox_title": "Success: Update food category", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_update_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 312, "TestUpdateFoodCategory.test_update_food_category"], "keywords": {"test_update_food_category": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.009292138998716837, "testdox_title": "Success: Update food category", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_update_food_category", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 312, "TestUpdateFoodCategory.test_update_food_category"], "keywords": {"test_update_food_category": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015714099936303683, "testdox_title": "Success: Update food category", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 337, "TestUpdateFoodCategory.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestUpdateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022283500220510177, "testdox_title": "Failure: Update food category without authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 337, "TestUpdateFoodCategory.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestUpdateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013302289989951532, "testdox_title": "Failure: Update food category without authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 337, "TestUpdateFoodCategory.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestUpdateFoodCategory": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001187979978567455, "testdox_title": "Failure: Update food category without authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 343, "TestUpdateFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestUpdateFoodCategory": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002649119996931404, "testdox_title": "Failure: Update food category without required authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 343, "TestUpdateFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestUpdateFoodCategory": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018452340009389445, "testdox_title": "Failure: Update food category without required authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_category_e2e.py::TestUpdateFoodCategory::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_category_e2e.py", 343, "TestUpdateFoodCategory.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/food/tests/test_food_category_e2e.py": 1, "TestUpdateFoodCategory": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.001865959999122424, "testdox_title": "Failure: Update food category without required authentication", "testdox_class_name": "PATCH Route: /food-category/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_new_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 29, "TestCreateFood.test_create_new_food"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "test_create_new_food": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10723440400033724, "testdox_title": "Success: Create a food", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_new_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 29, "TestCreateFood.test_create_new_food"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "test_create_new_food": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.02299677100018016, "testdox_title": "Success: Create a food", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_new_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 29, "TestCreateFood.test_create_new_food"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "test_create_new_food": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013369100270210765, "testdox_title": "Success: Create a food", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 67, "TestCreateFood.test_create_food_with_deleted_relation"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_with_deleted_relation": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022498699763673358, "testdox_title": "Failure: Create a food with deleted relation", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 67, "TestCreateFood.test_create_food_with_deleted_relation"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_with_deleted_relation": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.004862888999923598, "testdox_title": "Failure: Create a food with deleted relation", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_with_deleted_relation", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 67, "TestCreateFood.test_create_food_with_deleted_relation"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_with_deleted_relation": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001257030016859062, "testdox_title": "Failure: Create a food with deleted relation", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_field", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 91, "TestCreateFood.test_create_food_without_required_field"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_without_required_field": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022771599833504297, "testdox_title": "Failure: Create a food without required fields", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_field", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 91, "TestCreateFood.test_create_food_without_required_field"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_without_required_field": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001984165999601828, "testdox_title": "Failure: Create a food without required fields", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_field", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 91, "TestCreateFood.test_create_food_without_required_field"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_without_required_field": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011553500007721595, "testdox_title": "Failure: Create a food without required fields", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 118, "TestCreateFood.test_create_food_without_required_authorization"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_without_required_authorization": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10463256599905435, "testdox_title": "Failure: Create a food without required authorization", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 118, "TestCreateFood.test_create_food_without_required_authorization"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_without_required_authorization": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016674390026309993, "testdox_title": "Failure: Create a food without required authorization", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestCreateFood::test_create_food_without_required_authorization", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 118, "TestCreateFood.test_create_food_without_required_authorization"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_food_without_required_authorization": 1, "TestCreateFood": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014210100198397413, "testdox_title": "Failure: Create a food without required authorization", "testdox_class_name": "POST Route: /food/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_get_foods", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 147, "TestGetAllFoods.test_get_foods"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_get_foods": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllFoods": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002183639990107622, "testdox_title": "Success: Get a list of all food", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_get_foods", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 147, "TestGetAllFoods.test_get_foods"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_get_foods": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllFoods": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0215911800005415, "testdox_title": "Success: Get a list of all food", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_get_foods", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 147, "TestGetAllFoods.test_get_foods"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "test_get_foods": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllFoods": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013205799768911675, "testdox_title": "Success: Get a list of all food", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 174, "TestGetAllFoods.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllFoods": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021151900000404567, "testdox_title": "Failure: Get a list of all food without authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 174, "TestGetAllFoods.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllFoods": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011555189994396642, "testdox_title": "Failure: Get a list of all food without authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 174, "TestGetAllFoods.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllFoods": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011455899948487058, "testdox_title": "Failure: Get a list of all food without authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 179, "TestGetAllFoods.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllFoods": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002472179985488765, "testdox_title": "Failure: Get a list of all food with non required authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 179, "TestGetAllFoods.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllFoods": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001309569997829385, "testdox_title": "Failure: Get a list of all food with non required authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetAllFoods::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 179, "TestGetAllFoods.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllFoods": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001502940031059552, "testdox_title": "Failure: Get a list of all food with non required authentication", "testdox_class_name": "GET Route: /food/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_get_food_by_id", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 193, "TestGetFoodById.test_get_food_by_id"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "TestGetFoodById": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_food_by_id": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000208073000976583, "testdox_title": "Success: Get one food by id", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_get_food_by_id", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 193, "TestGetFoodById.test_get_food_by_id"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "TestGetFoodById": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_food_by_id": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008618152001872659, "testdox_title": "Success: Get one food by id", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_get_food_by_id", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 193, "TestGetFoodById.test_get_food_by_id"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "TestGetFoodById": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_food_by_id": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013781400048173964, "testdox_title": "Success: Get one food by id", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 212, "TestGetFoodById.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "TestGetFoodById": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021499099966604263, "testdox_title": "Failure: Get one food without authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 212, "TestGetFoodById.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "TestGetFoodById": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017764259973773733, "testdox_title": "Failure: Get one food without authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 212, "TestGetFoodById.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "TestGetFoodById": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001251700014108792, "testdox_title": "Failure: Get one food without authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 217, "TestGetFoodById.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "TestGetFoodById": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026543000058154576, "testdox_title": "Failure: Get one food with non required authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 217, "TestGetFoodById.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "TestGetFoodById": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001960703000804642, "testdox_title": "Failure: Get one food with non required authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestGetFoodById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 217, "TestGetFoodById.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "TestGetFoodById": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017261900211451575, "testdox_title": "Failure: Get one food with non required authentication", "testdox_class_name": "GET Route: /food/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 231, "TestDeleteFood.test_delete_food"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "test_delete_food": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021416500021587126, "testdox_title": "Success: Delete food", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 231, "TestDeleteFood.test_delete_food"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "test_delete_food": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.046299850997456815, "testdox_title": "Success: Delete food", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 231, "TestDeleteFood.test_delete_food"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "test_delete_food": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001309809995291289, "testdox_title": "Success: Delete food", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food_already_deleted", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 252, "TestDeleteFood.test_delete_food_already_deleted"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_food_already_deleted": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023911799871711992, "testdox_title": "Failure: Delete food already deleted", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food_already_deleted", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 252, "TestDeleteFood.test_delete_food_already_deleted"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_food_already_deleted": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0033372990001225844, "testdox_title": "Failure: Delete food already deleted", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_delete_food_already_deleted", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 252, "TestDeleteFood.test_delete_food_already_deleted"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_food_already_deleted": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015411400090670213, "testdox_title": "Failure: Delete food already deleted", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 265, "TestDeleteFood.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002214800006186124, "testdox_title": "Failure: Delete food without authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 265, "TestDeleteFood.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013874370015400928, "testdox_title": "Failure: Delete food without authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 265, "TestDeleteFood.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012197000251035206, "testdox_title": "Failure: Delete food without authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 271, "TestDeleteFood.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002674099996511359, "testdox_title": "Failure: Delete food without required authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 271, "TestDeleteFood.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018330290004087146, "testdox_title": "Failure: Delete food without required authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestDeleteFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 271, "TestDeleteFood.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "TestDeleteFood": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015633700240869075, "testdox_title": "Failure: Delete food without required authentication", "testdox_class_name": "DELETE Route: /food/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_update_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 286, "TestUpdateFood.test_update_food"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "test_update_food": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002244179995614104, "testdox_title": "Success: Update food", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_update_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 286, "TestUpdateFood.test_update_food"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "test_update_food": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.015088650001416681, "testdox_title": "Success: Update food", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_update_food", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 286, "TestUpdateFood.test_update_food"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "test_update_food": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001332120009465143, "testdox_title": "Success: Update food", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 311, "TestUpdateFood.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021445799939101562, "testdox_title": "Failure: Update food without authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 311, "TestUpdateFood.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013920009987486992, "testdox_title": "Failure: Update food without authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_no_authentication", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 311, "TestUpdateFood.test_no_authentication"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001205180014949292, "testdox_title": "Failure: Update food without authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 317, "TestUpdateFood.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00027805499848909676, "testdox_title": "Failure: Update food without required authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 317, "TestUpdateFood.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017722869997669477, "testdox_title": "Failure: Update food without required authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/food/tests/test_food_e2e.py::TestUpdateFood::test_different_required_authentication[user_common]", "location": ["src/modules/domain/food/tests/test_food_e2e.py", 317, "TestUpdateFood.test_different_required_authentication[user_common]"], "keywords": {"src/modules/domain/food/tests/test_food_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.001196132001496153, "testdox_title": "Failure: Update food without required authentication", "testdox_class_name": "PATCH Route: /food/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_one_food", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 27, "TestCreateItem.test_create_item_one_food"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_item_one_food": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10716042499916512, "testdox_title": "Success: Create an item", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_one_food", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 27, "TestCreateItem.test_create_item_one_food"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_item_one_food": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.012570446000609081, "testdox_title": "Success: Create an item", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_one_food", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 27, "TestCreateItem.test_create_item_one_food"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_item_one_food": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013227000090410002, "testdox_title": "Success: Create an item", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_multiples_food", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 53, "TestCreateItem.test_create_item_multiples_food"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_create_item_multiples_food": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002210569982707966, "testdox_title": "Success: Create an item with multiples foods", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_multiples_food", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 53, "TestCreateItem.test_create_item_multiples_food"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_create_item_multiples_food": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.015962647001288133, "testdox_title": "Success: Create an item with multiples foods", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_multiples_food", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 53, "TestCreateItem.test_create_item_multiples_food"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_create_item_multiples_food": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014289300088421442, "testdox_title": "Success: Create an item with multiples foods", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_with_deleted_food", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 81, "TestCreateItem.test_create_item_with_deleted_food"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_create_item_with_deleted_food": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002473210006428417, "testdox_title": "Failure: Create a item with deleted food", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_with_deleted_food", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 81, "TestCreateItem.test_create_item_with_deleted_food"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_create_item_with_deleted_food": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005831466998643009, "testdox_title": "Failure: Create a item with deleted food", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_with_deleted_food", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 81, "TestCreateItem.test_create_item_with_deleted_food"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_create_item_with_deleted_food": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013528700219467282, "testdox_title": "Failure: Create a item with deleted food", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_without_required_field", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 100, "TestCreateItem.test_create_item_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_item_without_required_field": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022060400078771636, "testdox_title": "Failure: Create a item without required fields", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_without_required_field", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 100, "TestCreateItem.test_create_item_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_item_without_required_field": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0019086909996985923, "testdox_title": "Failure: Create a item without required fields", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_without_required_field", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 100, "TestCreateItem.test_create_item_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_item_without_required_field": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014099300096859224, "testdox_title": "Failure: Create a item without required fields", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_without_required_authorization", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 118, "TestCreateItem.test_create_item_without_required_authorization"], "keywords": {"pytestmark": 1, "test_create_item_without_required_authorization": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.11206181200032006, "testdox_title": "Failure: Create a food without required authorization", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_without_required_authorization", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 118, "TestCreateItem.test_create_item_without_required_authorization"], "keywords": {"pytestmark": 1, "test_create_item_without_required_authorization": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016517770018253941, "testdox_title": "Failure: Create a food without required authorization", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestCreateItem::test_create_item_without_required_authorization", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 118, "TestCreateItem.test_create_item_without_required_authorization"], "keywords": {"pytestmark": 1, "test_create_item_without_required_authorization": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "TestCreateItem": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012546300058602355, "testdox_title": "Failure: Create a food without required authorization", "testdox_class_name": "POST Route: /item/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems::test_get_items", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 142, "TestGetAllItems.test_get_items"], "keywords": {"pytestmark": 1, "test_get_items": 1, "()": 1, "describe": 1, "TestGetAllItems": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002176509988203179, "testdox_title": "Success: Get a list of all items", "testdox_class_name": "GET Route: /item/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems::test_get_items", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 142, "TestGetAllItems.test_get_items"], "keywords": {"pytestmark": 1, "test_get_items": 1, "()": 1, "describe": 1, "TestGetAllItems": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.006878429998323554, "testdox_title": "Success: Get a list of all items", "testdox_class_name": "GET Route: /item/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems::test_get_items", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 142, "TestGetAllItems.test_get_items"], "keywords": {"pytestmark": 1, "test_get_items": 1, "()": 1, "describe": 1, "TestGetAllItems": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013172900071367621, "testdox_title": "Success: Get a list of all items", "testdox_class_name": "GET Route: /item/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 161, "TestGetAllItems.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllItems": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021264899987727404, "testdox_title": "Failure: Get a list of all item without authentication", "testdox_class_name": "GET Route: /item/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 161, "TestGetAllItems.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllItems": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011193959981028456, "testdox_title": "Failure: Get a list of all item without authentication", "testdox_class_name": "GET Route: /item/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 161, "TestGetAllItems.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllItems": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001166199981526006, "testdox_title": "Failure: Get a list of all item without authentication", "testdox_class_name": "GET Route: /item/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 166, "TestGetAllItems.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAllItems": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019784899996011518, "testdox_title": "Failure: Get a list of all item with non required authentication", "testdox_class_name": "GET Route: /item/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 166, "TestGetAllItems.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAllItems": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013038010001764633, "testdox_title": "Failure: Get a list of all item with non required authentication", "testdox_class_name": "GET Route: /item/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetAllItems::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 166, "TestGetAllItems.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestGetAllItems": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011655600246740505, "testdox_title": "Failure: Get a list of all item with non required authentication", "testdox_class_name": "GET Route: /item/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById::test_get_item_by_id", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 178, "TestGetItemById.test_get_item_by_id"], "keywords": {"pytestmark": 1, "()": 1, "TestGetItemById": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_get_item_by_id": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002034760000242386, "testdox_title": "Success: Get one item by id", "testdox_class_name": "GET Route: /item/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById::test_get_item_by_id", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 178, "TestGetItemById.test_get_item_by_id"], "keywords": {"pytestmark": 1, "()": 1, "TestGetItemById": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_get_item_by_id": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.012181193000287749, "testdox_title": "Success: Get one item by id", "testdox_class_name": "GET Route: /item/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById::test_get_item_by_id", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 178, "TestGetItemById.test_get_item_by_id"], "keywords": {"pytestmark": 1, "()": 1, "TestGetItemById": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_get_item_by_id": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013265800225781277, "testdox_title": "Success: Get one item by id", "testdox_class_name": "GET Route: /item/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 196, "TestGetItemById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "TestGetItemById": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002225639982498251, "testdox_title": "Failure: Get one item without authentication", "testdox_class_name": "GET Route: /item/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 196, "TestGetItemById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "TestGetItemById": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016508230000908952, "testdox_title": "Failure: Get one item without authentication", "testdox_class_name": "GET Route: /item/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 196, "TestGetItemById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "TestGetItemById": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011075300062657334, "testdox_title": "Failure: Get one item without authentication", "testdox_class_name": "GET Route: /item/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 201, "TestGetItemById.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "TestGetItemById": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019944499945268035, "testdox_title": "Failure: Get one item with non required authentication", "testdox_class_name": "GET Route: /item/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 201, "TestGetItemById.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "TestGetItemById": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018337510009587277, "testdox_title": "Failure: Get one item with non required authentication", "testdox_class_name": "GET Route: /item/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestGetItemById::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 201, "TestGetItemById.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "TestGetItemById": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013057299656793475, "testdox_title": "Failure: Get one item with non required authentication", "testdox_class_name": "GET Route: /item/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_delete_item", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 213, "TestDeleteItem.test_delete_item"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "test_delete_item": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021701899822801352, "testdox_title": "Success: Delete Item", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_delete_item", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 213, "TestDeleteItem.test_delete_item"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "test_delete_item": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.024254125000879867, "testdox_title": "Success: Delete Item", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_delete_item", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 213, "TestDeleteItem.test_delete_item"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "test_delete_item": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013799800217384472, "testdox_title": "Success: Delete Item", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_delete_item_relations", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 237, "TestDeleteItem.test_delete_item_relations"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_delete_item_relations": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002231660000688862, "testdox_title": "Success: Check if all relation from deleted item, was also deleted", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_delete_item_relations", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 237, "TestDeleteItem.test_delete_item_relations"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_delete_item_relations": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00220013500074856, "testdox_title": "Success: Check if all relation from deleted item, was also deleted", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_delete_item_relations", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 237, "TestDeleteItem.test_delete_item_relations"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_delete_item_relations": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014414000179385766, "testdox_title": "Success: Check if all relation from deleted item, was also deleted", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_delete_item_already_deleted", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 253, "TestDeleteItem.test_delete_item_already_deleted"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "test_delete_item_already_deleted": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021155500144232064, "testdox_title": "Failure: Delete item already deleted", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_delete_item_already_deleted", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 253, "TestDeleteItem.test_delete_item_already_deleted"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "test_delete_item_already_deleted": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00314055300259497, "testdox_title": "Failure: Delete item already deleted", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_delete_item_already_deleted", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 253, "TestDeleteItem.test_delete_item_already_deleted"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "test_delete_item_already_deleted": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012388899995130487, "testdox_title": "Failure: Delete item already deleted", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 266, "TestDeleteItem.test_no_authentication"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021129599917912856, "testdox_title": "Failure: Delete item without authentication", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 266, "TestDeleteItem.test_no_authentication"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00143593100074213, "testdox_title": "Failure: Delete item without authentication", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 266, "TestDeleteItem.test_no_authentication"], "keywords": {"pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014333799845189787, "testdox_title": "Failure: Delete item without authentication", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 272, "TestDeleteItem.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020538299941108562, "testdox_title": "Failure: Delete item without required authentication", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 272, "TestDeleteItem.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014712070005771238, "testdox_title": "Failure: Delete item without required authentication", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestDeleteItem::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 272, "TestDeleteItem.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "TestDeleteItem": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012822700227843598, "testdox_title": "Failure: Delete item without required authentication", "testdox_class_name": "DELETE Route: /item/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem::test_update_item", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 285, "TestUpdateItem.test_update_item"], "keywords": {"TestUpdateItem": 1, "test_update_item": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021442599972942844, "testdox_title": "Success: Update an item", "testdox_class_name": "PATCH Route: /item/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem::test_update_item", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 285, "TestUpdateItem.test_update_item"], "keywords": {"TestUpdateItem": 1, "test_update_item": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.02948313300294103, "testdox_title": "Success: Update an item", "testdox_class_name": "PATCH Route: /item/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem::test_update_item", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 285, "TestUpdateItem.test_update_item"], "keywords": {"TestUpdateItem": 1, "test_update_item": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001338399997621309, "testdox_title": "Success: Update an item", "testdox_class_name": "PATCH Route: /item/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 331, "TestUpdateItem.test_no_authentication"], "keywords": {"TestUpdateItem": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002127170009771362, "testdox_title": "Failure: Update an item without authentication", "testdox_class_name": "PATCH Route: /item/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 331, "TestUpdateItem.test_no_authentication"], "keywords": {"TestUpdateItem": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00131738799973391, "testdox_title": "Failure: Update an item without authentication", "testdox_class_name": "PATCH Route: /item/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem::test_no_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 331, "TestUpdateItem.test_no_authentication"], "keywords": {"TestUpdateItem": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001413729987689294, "testdox_title": "Failure: Update an item without authentication", "testdox_class_name": "PATCH Route: /item/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 337, "TestUpdateItem.test_different_required_authentication"], "keywords": {"TestUpdateItem": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026131299819098786, "testdox_title": "Failure: Update an item without required authentication", "testdox_class_name": "PATCH Route: /item/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 337, "TestUpdateItem.test_different_required_authentication"], "keywords": {"TestUpdateItem": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016540400029043667, "testdox_title": "Failure: Update an item without required authentication", "testdox_class_name": "PATCH Route: /item/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/item/tests/test_item_e2e.py::TestUpdateItem::test_different_required_authentication", "location": ["src/modules/domain/item/tests/test_item_e2e.py", 337, "TestUpdateItem.test_different_required_authentication"], "keywords": {"TestUpdateItem": 1, "test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "src/modules/domain/item/tests/test_item_e2e.py": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0010839449969353154, "testdox_title": "Failure: Update an item without required authentication", "testdox_class_name": "PATCH Route: /item/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal::test_create_new_type_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 28, "TestCreateTypeOfMeal.test_create_new_type_of_meal"], "keywords": {"pytestmark": 1, "TestCreateTypeOfMeal": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_create_new_type_of_meal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10305283900015638, "testdox_title": "Success: Create a type of meal", "testdox_class_name": "POST Route: /type-of-meal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal::test_create_new_type_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 28, "TestCreateTypeOfMeal.test_create_new_type_of_meal"], "keywords": {"pytestmark": 1, "TestCreateTypeOfMeal": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_create_new_type_of_meal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007493761000660015, "testdox_title": "Success: Create a type of meal", "testdox_class_name": "POST Route: /type-of-meal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal::test_create_new_type_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 28, "TestCreateTypeOfMeal.test_create_new_type_of_meal"], "keywords": {"pytestmark": 1, "TestCreateTypeOfMeal": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_create_new_type_of_meal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016577300266362727, "testdox_title": "Success: Create a type of meal", "testdox_class_name": "POST Route: /type-of-meal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal::test_create_type_of_meal_without_required_field", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 57, "TestCreateTypeOfMeal.test_create_type_of_meal_without_required_field"], "keywords": {"test_create_type_of_meal_without_required_field": 1, "pytestmark": 1, "TestCreateTypeOfMeal": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022410699966712855, "testdox_title": "Failure: Create a type of meal without required fields", "testdox_class_name": "POST Route: /type-of-meal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal::test_create_type_of_meal_without_required_field", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 57, "TestCreateTypeOfMeal.test_create_type_of_meal_without_required_field"], "keywords": {"test_create_type_of_meal_without_required_field": 1, "pytestmark": 1, "TestCreateTypeOfMeal": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0022898630013514776, "testdox_title": "Failure: Create a type of meal without required fields", "testdox_class_name": "POST Route: /type-of-meal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal::test_create_type_of_meal_without_required_field", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 57, "TestCreateTypeOfMeal.test_create_type_of_meal_without_required_field"], "keywords": {"test_create_type_of_meal_without_required_field": 1, "pytestmark": 1, "TestCreateTypeOfMeal": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001376569998683408, "testdox_title": "Failure: Create a type of meal without required fields", "testdox_class_name": "POST Route: /type-of-meal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal::test_create_type_of_meal_without_required_authorization", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 77, "TestCreateTypeOfMeal.test_create_type_of_meal_without_required_authorization"], "keywords": {"pytestmark": 1, "TestCreateTypeOfMeal": 1, "()": 1, "describe": 1, "test_create_type_of_meal_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10651573900031508, "testdox_title": "Failure: Create a type of meal without required authorization", "testdox_class_name": "POST Route: /type-of-meal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal::test_create_type_of_meal_without_required_authorization", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 77, "TestCreateTypeOfMeal.test_create_type_of_meal_without_required_authorization"], "keywords": {"pytestmark": 1, "TestCreateTypeOfMeal": 1, "()": 1, "describe": 1, "test_create_type_of_meal_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016477570025017485, "testdox_title": "Failure: Create a type of meal without required authorization", "testdox_class_name": "POST Route: /type-of-meal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestCreateTypeOfMeal::test_create_type_of_meal_without_required_authorization", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 77, "TestCreateTypeOfMeal.test_create_type_of_meal_without_required_authorization"], "keywords": {"pytestmark": 1, "TestCreateTypeOfMeal": 1, "()": 1, "describe": 1, "test_create_type_of_meal_without_required_authorization": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014187399938236922, "testdox_title": "Failure: Create a type of meal without required authorization", "testdox_class_name": "POST Route: /type-of-meal/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal::test_get_types_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 102, "TestGetAllTypesOfMeal.test_get_types_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestGetAllTypesOfMeal": 1, "test_get_types_of_meal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021827400269103236, "testdox_title": "Success: Get a list of all type of meal", "testdox_class_name": "GET Route: /type-of-meal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal::test_get_types_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 102, "TestGetAllTypesOfMeal.test_get_types_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestGetAllTypesOfMeal": 1, "test_get_types_of_meal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.006628199000260793, "testdox_title": "Success: Get a list of all type of meal", "testdox_class_name": "GET Route: /type-of-meal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal::test_get_types_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 102, "TestGetAllTypesOfMeal.test_get_types_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestGetAllTypesOfMeal": 1, "test_get_types_of_meal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014512299821944907, "testdox_title": "Success: Get a list of all type of meal", "testdox_class_name": "GET Route: /type-of-meal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 122, "TestGetAllTypesOfMeal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestGetAllTypesOfMeal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023156099996413104, "testdox_title": "Failure: Get a list of all types of meal without authentication", "testdox_class_name": "GET Route: /type-of-meal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 122, "TestGetAllTypesOfMeal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestGetAllTypesOfMeal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014135769997665193, "testdox_title": "Failure: Get a list of all types of meal without authentication", "testdox_class_name": "GET Route: /type-of-meal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 122, "TestGetAllTypesOfMeal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestGetAllTypesOfMeal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014312499843072146, "testdox_title": "Failure: Get a list of all types of meal without authentication", "testdox_class_name": "GET Route: /type-of-meal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 127, "TestGetAllTypesOfMeal.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestGetAllTypesOfMeal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002198410002165474, "testdox_title": "Failure: Get a list of all types of meal with non required authentication", "testdox_class_name": "GET Route: /type-of-meal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 127, "TestGetAllTypesOfMeal.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestGetAllTypesOfMeal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015284540022548754, "testdox_title": "Failure: Get a list of all types of meal with non required authentication", "testdox_class_name": "GET Route: /type-of-meal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetAllTypesOfMeal::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 127, "TestGetAllTypesOfMeal.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "TestGetAllTypesOfMeal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001323590004176367, "testdox_title": "Failure: Get a list of all types of meal with non required authentication", "testdox_class_name": "GET Route: /type-of-meal/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById::test_get_type_of_meal_by_id", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 139, "TestGetTypeOfMealById.test_get_type_of_meal_by_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_get_type_of_meal_by_id": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestGetTypeOfMealById": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021917599951848388, "testdox_title": "Success: Get one type of meal by id", "testdox_class_name": "GET Route: /type-of-meal/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById::test_get_type_of_meal_by_id", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 139, "TestGetTypeOfMealById.test_get_type_of_meal_by_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_get_type_of_meal_by_id": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestGetTypeOfMealById": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003995742998085916, "testdox_title": "Success: Get one type of meal by id", "testdox_class_name": "GET Route: /type-of-meal/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById::test_get_type_of_meal_by_id", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 139, "TestGetTypeOfMealById.test_get_type_of_meal_by_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_get_type_of_meal_by_id": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestGetTypeOfMealById": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015191999773378484, "testdox_title": "Success: Get one type of meal by id", "testdox_class_name": "GET Route: /type-of-meal/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 157, "TestGetTypeOfMealById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1, "TestGetTypeOfMealById": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00025590299992472865, "testdox_title": "Failure: Get one type of meal without authentication", "testdox_class_name": "GET Route: /type-of-meal/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 157, "TestGetTypeOfMealById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1, "TestGetTypeOfMealById": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014112579992797691, "testdox_title": "Failure: Get one type of meal without authentication", "testdox_class_name": "GET Route: /type-of-meal/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 157, "TestGetTypeOfMealById.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1, "TestGetTypeOfMealById": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012490999870351516, "testdox_title": "Failure: Get one type of meal without authentication", "testdox_class_name": "GET Route: /type-of-meal/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 163, "TestGetTypeOfMealById.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestGetTypeOfMealById": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021397000091383234, "testdox_title": "Failure: Get one type of meal with non required authentication", "testdox_class_name": "GET Route: /type-of-meal/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 163, "TestGetTypeOfMealById.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestGetTypeOfMealById": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017080899997381493, "testdox_title": "Failure: Get one type of meal with non required authentication", "testdox_class_name": "GET Route: /type-of-meal/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestGetTypeOfMealById::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 163, "TestGetTypeOfMealById.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestGetTypeOfMealById": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015030400027171709, "testdox_title": "Failure: Get one type of meal with non required authentication", "testdox_class_name": "GET Route: /type-of-meal/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_delete_type_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 178, "TestDeleteTypeOfMeal.test_delete_type_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_delete_type_of_meal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021964899860904552, "testdox_title": "Success: Delete type of meal", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_delete_type_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 178, "TestDeleteTypeOfMeal.test_delete_type_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_delete_type_of_meal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.04341284000111045, "testdox_title": "Success: Delete type of meal", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_delete_type_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 178, "TestDeleteTypeOfMeal.test_delete_type_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_delete_type_of_meal": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00016100799984997138, "testdox_title": "Success: Delete type of meal", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_delete_type_of_meal_already_deleted", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 199, "TestDeleteTypeOfMeal.test_delete_type_of_meal_already_deleted"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_delete_type_of_meal_already_deleted": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022934899971005507, "testdox_title": "Failure: Delete type of meal already deleted", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_delete_type_of_meal_already_deleted", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 199, "TestDeleteTypeOfMeal.test_delete_type_of_meal_already_deleted"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_delete_type_of_meal_already_deleted": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0035466650006128475, "testdox_title": "Failure: Delete type of meal already deleted", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_delete_type_of_meal_already_deleted", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 199, "TestDeleteTypeOfMeal.test_delete_type_of_meal_already_deleted"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_delete_type_of_meal_already_deleted": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001299579998885747, "testdox_title": "Failure: Delete type of meal already deleted", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 214, "TestDeleteTypeOfMeal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020911700266879052, "testdox_title": "Failure: Delete type of meal without authentication", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 214, "TestDeleteTypeOfMeal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017132379980466794, "testdox_title": "Failure: Delete type of meal without authentication", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 214, "TestDeleteTypeOfMeal.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011210199954803102, "testdox_title": "Failure: Delete type of meal without authentication", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 220, "TestDeleteTypeOfMeal.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002045520013780333, "testdox_title": "Failure: Delete type of meal without required authentication", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 220, "TestDeleteTypeOfMeal.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001523099999758415, "testdox_title": "Failure: Delete type of meal without required authentication", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestDeleteTypeOfMeal::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 220, "TestDeleteTypeOfMeal.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "TestDeleteTypeOfMeal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012694999895757064, "testdox_title": "Failure: Delete type of meal without required authentication", "testdox_class_name": "DELETE Route: /type-of-meal/delete/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood::test_update_type_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 235, "TestUpdateFood.test_update_type_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_update_type_of_meal": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021167399972910061, "testdox_title": "Success: Update type of meal", "testdox_class_name": "PATCH Route: /type-of-meal/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood::test_update_type_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 235, "TestUpdateFood.test_update_type_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_update_type_of_meal": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008908482999686385, "testdox_title": "Success: Update type of meal", "testdox_class_name": "PATCH Route: /type-of-meal/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood::test_update_type_of_meal", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 235, "TestUpdateFood.test_update_type_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_update_type_of_meal": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013801700333715416, "testdox_title": "Success: Update type of meal", "testdox_class_name": "PATCH Route: /type-of-meal/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 260, "TestUpdateFood.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021228500190773048, "testdox_title": "Failure: Update type fo meal without authentication", "testdox_class_name": "PATCH Route: /type-of-meal/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 260, "TestUpdateFood.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014473990013357252, "testdox_title": "Failure: Update type fo meal without authentication", "testdox_class_name": "PATCH Route: /type-of-meal/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood::test_no_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 260, "TestUpdateFood.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013155600026948377, "testdox_title": "Failure: Update type fo meal without authentication", "testdox_class_name": "PATCH Route: /type-of-meal/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 266, "TestUpdateFood.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023111500195227563, "testdox_title": "Failure: Update food without required authentication", "testdox_class_name": "PATCH Route: /type-of-meal/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 266, "TestUpdateFood.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0017800419991544914, "testdox_title": "Failure: Update food without required authentication", "testdox_class_name": "PATCH Route: /type-of-meal/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/meal/tests/test_type_of_meal_e2e.py::TestUpdateFood::test_different_required_authentication", "location": ["src/modules/domain/meal/tests/test_type_of_meal_e2e.py", 266, "TestUpdateFood.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdateFood": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/meal/tests/test_type_of_meal_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.001023823999275919, "testdox_title": "Failure: Update food without required authentication", "testdox_class_name": "PATCH Route: /type-of-meal/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_new_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 27, "TestCreateActivityLevel.test_create_new_activity_level"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_new_activity_level": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.09897788099988247, "testdox_title": "Success: Create a activity level", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_new_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 27, "TestCreateActivityLevel.test_create_new_activity_level"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_new_activity_level": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007626679001987213, "testdox_title": "Success: Create a activity level", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_new_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 27, "TestCreateActivityLevel.test_create_new_activity_level"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_new_activity_level": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014790699788136408, "testdox_title": "Success: Create a activity level", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 51, "TestCreateActivityLevel.test_create_activity_level_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_activity_level_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002306220012542326, "testdox_title": "Failure: Create a activity level without required fields", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 51, "TestCreateActivityLevel.test_create_activity_level_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_activity_level_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0019593870019889437, "testdox_title": "Failure: Create a activity level without required fields", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 51, "TestCreateActivityLevel.test_create_activity_level_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_activity_level_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011108900071121752, "testdox_title": "Failure: Create a activity level without required fields", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 69, "TestCreateActivityLevel.test_create_activity_level_without_required_authorization"], "keywords": {"pytestmark": 1, "test_create_activity_level_without_required_authorization": 1, "()": 1, "describe": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10813320000306703, "testdox_title": "Failure: Create a activity level without required authorization", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 69, "TestCreateActivityLevel.test_create_activity_level_without_required_authorization"], "keywords": {"pytestmark": 1, "test_create_activity_level_without_required_authorization": 1, "()": 1, "describe": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0021489419996214565, "testdox_title": "Failure: Create a activity level without required authorization", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestCreateActivityLevel::test_create_activity_level_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 69, "TestCreateActivityLevel.test_create_activity_level_without_required_authorization"], "keywords": {"pytestmark": 1, "test_create_activity_level_without_required_authorization": 1, "()": 1, "describe": 1, "TestCreateActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017883900000015274, "testdox_title": "Failure: Create a activity level without required authorization", "testdox_class_name": "POST Route: /activity-level/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_get_all_users", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 88, "TestGetAllActivityLevel.test_get_all_users"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_all_users": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00029772199923172593, "testdox_title": "Success: Get a list of all activity levels", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_get_all_users", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 88, "TestGetAllActivityLevel.test_get_all_users"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_all_users": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.006820694001362426, "testdox_title": "Success: Get a list of all activity levels", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_get_all_users", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 88, "TestGetAllActivityLevel.test_get_all_users"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_all_users": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001713740020932164, "testdox_title": "Success: Get a list of all activity levels", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 102, "TestGetAllActivityLevel.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021282899979269132, "testdox_title": "Failure: Get a list of all activity levels without authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 102, "TestGetAllActivityLevel.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011261920008109882, "testdox_title": "Failure: Get a list of all activity levels without authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 102, "TestGetAllActivityLevel.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013302899969858117, "testdox_title": "Failure: Get a list of all activity levels without authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "parametrize": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00024963400210253894, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "parametrize": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014081199988140725, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "parametrize": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015605699809384532, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_nutritionist]"], "keywords": {"pytestmark": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "parametrize": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026547499874141067, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_nutritionist]"], "keywords": {"pytestmark": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "parametrize": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015252390003297478, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetAllActivityLevel::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 107, "TestGetAllActivityLevel.test_different_required_authentication[user_nutritionist]"], "keywords": {"pytestmark": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "TestGetAllActivityLevel": 1, "parametrize": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015055499898153357, "testdox_title": "Failure: Get a list of all activity levels with non required authentication", "testdox_class_name": "GET Route: /activity-level/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_get_activity_level_by_id", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 121, "TestGetActivityLevelById.test_get_activity_level_by_id"], "keywords": {"test_get_activity_level_by_id": 1, "pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002176039997721091, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_get_activity_level_by_id", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 121, "TestGetActivityLevelById.test_get_activity_level_by_id"], "keywords": {"test_get_activity_level_by_id": 1, "pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0040583339978184085, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_get_activity_level_by_id", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 121, "TestGetActivityLevelById.test_get_activity_level_by_id"], "keywords": {"test_get_activity_level_by_id": 1, "pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001568849984323606, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 140, "TestGetActivityLevelById.test_no_authentication"], "keywords": {"pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002147980012523476, "testdox_title": "Failure: Get one activity level without authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 140, "TestGetActivityLevelById.test_no_authentication"], "keywords": {"pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016156319979927503, "testdox_title": "Failure: Get one activity level without authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 140, "TestGetActivityLevelById.test_no_authentication"], "keywords": {"pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012865600001532584, "testdox_title": "Failure: Get one activity level without authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00030059699929552153, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.002064956999674905, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "TestGetActivityLevelById": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014405899855773896, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_nutritionist]"], "keywords": {"pytestmark": 1, "TestGetActivityLevelById": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026037499992526136, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_nutritionist]"], "keywords": {"pytestmark": 1, "TestGetActivityLevelById": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018402080022497103, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestGetActivityLevelById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 145, "TestGetActivityLevelById.test_different_required_authentication[user_nutritionist]"], "keywords": {"pytestmark": 1, "TestGetActivityLevelById": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015691999942646362, "testdox_title": "Failure: Get one activity level with non required authentication", "testdox_class_name": "GET Route: /activity-level/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_delete_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 159, "TestDeleteActivityLevel.test_delete_activity_level"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_activity_level": 1, "TestDeleteActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002704540020204149, "testdox_title": "Success: Delete activity level", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_delete_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 159, "TestDeleteActivityLevel.test_delete_activity_level"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_activity_level": 1, "TestDeleteActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.010993798001436517, "testdox_title": "Success: Delete activity level", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_delete_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 159, "TestDeleteActivityLevel.test_delete_activity_level"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_delete_activity_level": 1, "TestDeleteActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015885700122453272, "testdox_title": "Success: Delete activity level", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 180, "TestDeleteActivityLevel.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestDeleteActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022006699873600155, "testdox_title": "Failure: Delete activity level without authentication", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 180, "TestDeleteActivityLevel.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestDeleteActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013105810030538123, "testdox_title": "Failure: Delete activity level without authentication", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestDeleteActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 180, "TestDeleteActivityLevel.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestDeleteActivityLevel": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00011348899715812877, "testdox_title": "Failure: Delete activity level without authentication", "testdox_class_name": "DELETE Route: /activity-level/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_update_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 191, "TestUpdateActivityLevel.test_update_activity_level"], "keywords": {"pytestmark": 1, "TestUpdateActivityLevel": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "test_update_activity_level": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00019761799921980128, "testdox_title": "Success: Update activity level", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_update_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 191, "TestUpdateActivityLevel.test_update_activity_level"], "keywords": {"pytestmark": 1, "TestUpdateActivityLevel": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "test_update_activity_level": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007672515999729512, "testdox_title": "Success: Update activity level", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_update_activity_level", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 191, "TestUpdateActivityLevel.test_update_activity_level"], "keywords": {"pytestmark": 1, "TestUpdateActivityLevel": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "test_update_activity_level": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013493699952960014, "testdox_title": "Success: Update activity level", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 216, "TestUpdateActivityLevel.test_no_authentication"], "keywords": {"pytestmark": 1, "TestUpdateActivityLevel": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021956899945507757, "testdox_title": "Failure: Update activity level without authentication", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 216, "TestUpdateActivityLevel.test_no_authentication"], "keywords": {"pytestmark": 1, "TestUpdateActivityLevel": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0014123850014584605, "testdox_title": "Failure: Update activity level without authentication", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_activity_level_e2e.py::TestUpdateActivityLevel::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_activity_level_e2e.py", 216, "TestUpdateActivityLevel.test_no_authentication"], "keywords": {"pytestmark": 1, "TestUpdateActivityLevel": 1, "()": 1, "describe": 1, "src/modules/domain/personal_data/tests/test_activity_level_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0012563700001919642, "testdox_title": "Failure: Update activity level without authentication", "testdox_class_name": "PATCH Route: /activity-level/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_new_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 27, "TestCreatePersonalData.test_create_new_personal_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_create_new_personal_data": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.1051475960011885, "testdox_title": "Success: Create a personal data", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_new_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 27, "TestCreatePersonalData.test_create_new_personal_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_create_new_personal_data": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008963298998423852, "testdox_title": "Success: Create a personal data", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_new_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 27, "TestCreatePersonalData.test_create_new_personal_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_create_new_personal_data": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001469269991503097, "testdox_title": "Success: Create a personal data", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_same_user", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 50, "TestCreatePersonalData.test_create_personal_data_same_user"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_personal_data_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023255199994309805, "testdox_title": "Failure: Create two personal data to the same user", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_same_user", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 50, "TestCreatePersonalData.test_create_personal_data_same_user"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_personal_data_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005087616998935118, "testdox_title": "Failure: Create two personal data to the same user", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_same_user", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 50, "TestCreatePersonalData.test_create_personal_data_same_user"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "test_create_personal_data_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001602929987711832, "testdox_title": "Failure: Create two personal data to the same user", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 74, "TestCreatePersonalData.test_create_personal_data_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_create_personal_data_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002582990018709097, "testdox_title": "Failure: Create a personal data without required fields", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 74, "TestCreatePersonalData.test_create_personal_data_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_create_personal_data_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0021897459992032964, "testdox_title": "Failure: Create a personal data without required fields", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_field", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 74, "TestCreatePersonalData.test_create_personal_data_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_create_personal_data_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001613610002095811, "testdox_title": "Failure: Create a personal data without required fields", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 100, "TestCreatePersonalData.test_create_personal_data_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_create_personal_data_without_required_authorization": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10654854400127078, "testdox_title": "Failure: Create a personal data without required authorization", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 100, "TestCreatePersonalData.test_create_personal_data_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_create_personal_data_without_required_authorization": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015529769989370834, "testdox_title": "Failure: Create a personal data without required authorization", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestCreatePersonalData::test_create_personal_data_without_required_authorization", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 100, "TestCreatePersonalData.test_create_personal_data_without_required_authorization"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "test_create_personal_data_without_required_authorization": 1, "it": 1, "asyncio": 1, "TestCreatePersonalData": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001184150023618713, "testdox_title": "Failure: Create a personal data without required authorization", "testdox_class_name": "POST Route: /personal-data/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_get_current_user_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 128, "TestGetUserPersonalData.test_get_current_user_personal_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_current_user_personal_data": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "TestGetUserPersonalData": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021550199744524434, "testdox_title": "Success: Get current user personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_get_current_user_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 128, "TestGetUserPersonalData.test_get_current_user_personal_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_current_user_personal_data": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "TestGetUserPersonalData": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007112029001291376, "testdox_title": "Success: Get current user personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_get_current_user_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 128, "TestGetUserPersonalData.test_get_current_user_personal_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_current_user_personal_data": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "TestGetUserPersonalData": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019813600010820664, "testdox_title": "Success: Get current user personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 144, "TestGetUserPersonalData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "TestGetUserPersonalData": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021720800214097835, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 144, "TestGetUserPersonalData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "TestGetUserPersonalData": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015619610021531116, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 144, "TestGetUserPersonalData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "TestGetUserPersonalData": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0002210240018030163, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_different_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 149, "TestGetUserPersonalData.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "TestGetUserPersonalData": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023180099742603488, "testdox_title": "Failure: Get current user data without personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_different_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 149, "TestGetUserPersonalData.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "TestGetUserPersonalData": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0016022739982872736, "testdox_title": "Failure: Get current user data without personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetUserPersonalData::test_different_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 149, "TestGetUserPersonalData.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "TestGetUserPersonalData": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013381399912759662, "testdox_title": "Failure: Get current user data without personal data", "testdox_class_name": "GET Route: /personal-data/me/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_one_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 161, "TestGetSeveralPersonalDataByUserId.test_get_one_personal_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetSeveralPersonalDataByUserId": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_get_one_personal_data_by_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022981199799687602, "testdox_title": "Success: Get one personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_one_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 161, "TestGetSeveralPersonalDataByUserId.test_get_one_personal_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetSeveralPersonalDataByUserId": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_get_one_personal_data_by_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.005558987999393139, "testdox_title": "Success: Get one personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_one_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 161, "TestGetSeveralPersonalDataByUserId.test_get_one_personal_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetSeveralPersonalDataByUserId": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "test_get_one_personal_data_by_user_id": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.000128040999697987, "testdox_title": "Success: Get one personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_several_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 179, "TestGetSeveralPersonalDataByUserId.test_get_several_personal_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "test_get_several_personal_data_by_user_id": 1, "TestGetSeveralPersonalDataByUserId": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022537199765793048, "testdox_title": "Success: Get several personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_several_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 179, "TestGetSeveralPersonalDataByUserId.test_get_several_personal_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "test_get_several_personal_data_by_user_id": 1, "TestGetSeveralPersonalDataByUserId": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008048897001572186, "testdox_title": "Success: Get several personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_get_several_personal_data_by_user_id", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 179, "TestGetSeveralPersonalDataByUserId.test_get_several_personal_data_by_user_id"], "keywords": {"pytestmark": 1, "()": 1, "test_get_several_personal_data_by_user_id": 1, "TestGetSeveralPersonalDataByUserId": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018849400294129737, "testdox_title": "Success: Get several personal data by user id", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 201, "TestGetSeveralPersonalDataByUserId.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetSeveralPersonalDataByUserId": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002427869985694997, "testdox_title": "Failure: Get several personal data without authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 201, "TestGetSeveralPersonalDataByUserId.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetSeveralPersonalDataByUserId": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018279729993082583, "testdox_title": "Failure: Get several personal data without authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 201, "TestGetSeveralPersonalDataByUserId.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetSeveralPersonalDataByUserId": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012409900227794424, "testdox_title": "Failure: Get several personal data without authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 206, "TestGetSeveralPersonalDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetSeveralPersonalDataByUserId": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002788540004985407, "testdox_title": "Failure: Get several personal data with non required authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 206, "TestGetSeveralPersonalDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetSeveralPersonalDataByUserId": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015478610002901405, "testdox_title": "Failure: Get several personal data with non required authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestGetSeveralPersonalDataByUserId::test_different_required_authentication[user_common]", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 206, "TestGetSeveralPersonalDataByUserId.test_different_required_authentication[user_common]"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestGetSeveralPersonalDataByUserId": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014385800022864714, "testdox_title": "Failure: Get several personal data with non required authentication", "testdox_class_name": "GET Route: /personal-data/users/get/", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 220, "TestUpdatePersonalData.test_update_personal_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "test_update_personal_data": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022265200095716864, "testdox_title": "Success: Update personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 220, "TestUpdatePersonalData.test_update_personal_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "test_update_personal_data": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.01349813299748348, "testdox_title": "Success: Update personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 220, "TestUpdatePersonalData.test_update_personal_data"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "test_update_personal_data": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001379589994030539, "testdox_title": "Success: Update personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 246, "TestUpdatePersonalData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00032209900018642657, "testdox_title": "Failure: Update personal data without authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 246, "TestUpdatePersonalData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0015201640017039608, "testdox_title": "Failure: Update personal data without authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 246, "TestUpdatePersonalData.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00017382000078214332, "testdox_title": "Failure: Update personal data without authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 251, "TestUpdatePersonalData.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0003416660001676064, "testdox_title": "Failure: Update personal data without required authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 251, "TestUpdatePersonalData.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0020603939992724918, "testdox_title": "Failure: Update personal data without required authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_no_required_authentication", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 251, "TestUpdatePersonalData.test_no_required_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "test_no_required_authentication": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00012809300096705556, "testdox_title": "Failure: Update personal data without required authentication", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_user_without_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 258, "TestUpdatePersonalData.test_update_user_without_personal_data"], "keywords": {"test_update_user_without_personal_data": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022492800053441897, "testdox_title": "Failure: Update user without personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_user_without_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 258, "TestUpdatePersonalData.test_update_user_without_personal_data"], "keywords": {"test_update_user_without_personal_data": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003420632001507329, "testdox_title": "Failure: Update user without personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/personal_data/tests/test_personal_data_e2e.py::TestUpdatePersonalData::test_update_user_without_personal_data", "location": ["src/modules/domain/personal_data/tests/test_personal_data_e2e.py", 258, "TestUpdatePersonalData.test_update_user_without_personal_data"], "keywords": {"test_update_user_without_personal_data": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestUpdatePersonalData": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "src/modules/domain/personal_data/tests/test_personal_data_e2e.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.001229079000040656, "testdox_title": "Failure: Update user without personal data", "testdox_class_name": "PATCH Route: /personal-data/update/<user_id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_complete_nutritional_plan", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 26, "TestCompleteUserNutritionalPlan.test_complete_nutritional_plan"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "test_complete_nutritional_plan": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10598064000078011, "testdox_title": "Success: Complete User's Nutritional Plan", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_complete_nutritional_plan", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 26, "TestCompleteUserNutritionalPlan.test_complete_nutritional_plan"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "test_complete_nutritional_plan": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.7871114119989215, "testdox_title": "Success: Complete User's Nutritional Plan", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_complete_nutritional_plan", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 26, "TestCompleteUserNutritionalPlan.test_complete_nutritional_plan"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "test_complete_nutritional_plan": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013932100046076812, "testdox_title": "Success: Complete User's Nutritional Plan", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_any_type_of_meal", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 47, "TestCompleteUserNutritionalPlan.test_any_type_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "test_any_type_of_meal": 1, "it": 1, "asyncio": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023734400019748136, "testdox_title": "Failure: Complete Nutritional Plan without any type of meal", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_any_type_of_meal", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 47, "TestCompleteUserNutritionalPlan.test_any_type_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "test_any_type_of_meal": 1, "it": 1, "asyncio": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.004036354999698233, "testdox_title": "Failure: Complete Nutritional Plan without any type of meal", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_any_type_of_meal", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 47, "TestCompleteUserNutritionalPlan.test_any_type_of_meal"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "test_any_type_of_meal": 1, "it": 1, "asyncio": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001236079988302663, "testdox_title": "Failure: Complete Nutritional Plan without any type of meal", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_complete_nutritional_plan_without_required_field", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 62, "TestCompleteUserNutritionalPlan.test_complete_nutritional_plan_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_complete_nutritional_plan_without_required_field": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021372699848143384, "testdox_title": "Failure:  Complete Nutritional Plan without required fields", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_complete_nutritional_plan_without_required_field", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 62, "TestCompleteUserNutritionalPlan.test_complete_nutritional_plan_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_complete_nutritional_plan_without_required_field": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0018943760005640797, "testdox_title": "Failure:  Complete Nutritional Plan without required fields", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_complete_nutritional_plan_without_required_field", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 62, "TestCompleteUserNutritionalPlan.test_complete_nutritional_plan_without_required_field"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_complete_nutritional_plan_without_required_field": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014139600170892663, "testdox_title": "Failure:  Complete Nutritional Plan without required fields", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_complete_nutritional_plan_without_required_authorization", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 79, "TestCompleteUserNutritionalPlan.test_complete_nutritional_plan_without_required_authorization"], "keywords": {"test_complete_nutritional_plan_without_required_authorization": 1, "pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.058515946999250446, "testdox_title": "Failure: Complete Nutritional Plan without required authorization", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_complete_nutritional_plan_without_required_authorization", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 79, "TestCompleteUserNutritionalPlan.test_complete_nutritional_plan_without_required_authorization"], "keywords": {"test_complete_nutritional_plan_without_required_authorization": 1, "pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.004045019999466604, "testdox_title": "Failure: Complete Nutritional Plan without required authorization", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestCompleteUserNutritionalPlan::test_complete_nutritional_plan_without_required_authorization", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 79, "TestCompleteUserNutritionalPlan.test_complete_nutritional_plan_without_required_authorization"], "keywords": {"test_complete_nutritional_plan_without_required_authorization": 1, "pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestCompleteUserNutritionalPlan": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00038828800097689964, "testdox_title": "Failure: Complete Nutritional Plan without required authorization", "testdox_class_name": "POST Route: /recommendation-system/complete-nutritional-plan", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences::test_get_user_food_preferences", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 101, "TestGetUserFoodPreferences.test_get_user_food_preferences"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_user_food_preferences": 1, "TestGetUserFoodPreferences": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0005302370009303559, "testdox_title": "Success: Get a list of all user's food preferences", "testdox_class_name": "GET Route: /recommendation-system/food-preferences", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences::test_get_user_food_preferences", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 101, "TestGetUserFoodPreferences.test_get_user_food_preferences"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_user_food_preferences": 1, "TestGetUserFoodPreferences": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.023341783999057952, "testdox_title": "Success: Get a list of all user's food preferences", "testdox_class_name": "GET Route: /recommendation-system/food-preferences", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences::test_get_user_food_preferences", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 101, "TestGetUserFoodPreferences.test_get_user_food_preferences"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_user_food_preferences": 1, "TestGetUserFoodPreferences": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00018700500004342757, "testdox_title": "Success: Get a list of all user's food preferences", "testdox_class_name": "GET Route: /recommendation-system/food-preferences", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences::test_no_authentication", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 127, "TestGetUserFoodPreferences.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetUserFoodPreferences": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023809600315871648, "testdox_title": "Failure: Get a list of all user's food preferences without authentication", "testdox_class_name": "GET Route: /recommendation-system/food-preferences", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences::test_no_authentication", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 127, "TestGetUserFoodPreferences.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetUserFoodPreferences": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0012134719981986564, "testdox_title": "Failure: Get a list of all user's food preferences without authentication", "testdox_class_name": "GET Route: /recommendation-system/food-preferences", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences::test_no_authentication", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 127, "TestGetUserFoodPreferences.test_no_authentication"], "keywords": {"pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetUserFoodPreferences": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013369899897952564, "testdox_title": "Failure: Get a list of all user's food preferences without authentication", "testdox_class_name": "GET Route: /recommendation-system/food-preferences", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences::test_different_required_authentication", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 132, "TestGetUserFoodPreferences.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetUserFoodPreferences": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002118319971486926, "testdox_title": "Failure: Get a list of all user's food preferences with non required authentication", "testdox_class_name": "GET Route: /recommendation-system/food-preferences", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences::test_different_required_authentication", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 132, "TestGetUserFoodPreferences.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetUserFoodPreferences": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013904219995310996, "testdox_title": "Failure: Get a list of all user's food preferences with non required authentication", "testdox_class_name": "GET Route: /recommendation-system/food-preferences", "$report_type": "TestReport"}
{"nodeid": "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py::TestGetUserFoodPreferences::test_different_required_authentication", "location": ["src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py", 132, "TestGetUserFoodPreferences.test_different_required_authentication"], "keywords": {"test_different_required_authentication": 1, "pytestmark": 1, "()": 1, "describe": 1, "src/modules/domain/recommendation_system/tests/test_recommendation_system_e2e.py": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetUserFoodPreferences": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0008500949988956563, "testdox_title": "Failure: Get a list of all user's food preferences with non required authentication", "testdox_class_name": "GET Route: /recommendation-system/food-preferences", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin::test_valid_login", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 54, "TestLogin.test_valid_login"], "keywords": {"TestLogin": 1, "pytestmark": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "()": 1, "describe": 1, "test_valid_login": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.06519279199710581, "testdox_title": "Failure: Login with wrong username", "testdox_class_name": "GET Route: /login", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin::test_valid_login", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 54, "TestLogin.test_valid_login"], "keywords": {"TestLogin": 1, "pytestmark": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "()": 1, "describe": 1, "test_valid_login": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003906932000973029, "testdox_title": "Failure: Login with wrong username", "testdox_class_name": "GET Route: /login", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestLogin::test_valid_login", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 54, "TestLogin.test_valid_login"], "keywords": {"TestLogin": 1, "pytestmark": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "()": 1, "describe": 1, "test_valid_login": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013531900185626, "testdox_title": "Failure: Login with wrong username", "testdox_class_name": "GET Route: /login", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_get_current_user", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 69, "TestGetCurrentUser.test_get_current_user"], "keywords": {"TestGetCurrentUser": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "describe": 1, "test_get_current_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.05619347899846616, "testdox_title": "Success: Get current user data", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_get_current_user", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 69, "TestGetCurrentUser.test_get_current_user"], "keywords": {"TestGetCurrentUser": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "describe": 1, "test_get_current_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00488459000189323, "testdox_title": "Success: Get current user data", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_get_current_user", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 69, "TestGetCurrentUser.test_get_current_user"], "keywords": {"TestGetCurrentUser": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "describe": 1, "test_get_current_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013172000035410747, "testdox_title": "Success: Get current user data", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_no_authentication", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 86, "TestGetCurrentUser.test_no_authentication"], "keywords": {"TestGetCurrentUser": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021574900165433064, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_no_authentication", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 86, "TestGetCurrentUser.test_no_authentication"], "keywords": {"TestGetCurrentUser": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011024929990526289, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/auth/tests/test_auth_e2e.py::TestGetCurrentUser::test_no_authentication", "location": ["src/modules/infrastructure/auth/test/test_auth_e2e.py", 86, "TestGetCurrentUser.test_no_authentication"], "keywords": {"TestGetCurrentUser": 1, "pytestmark": 1, "()": 1, "src/modules/infrastructure/auth/tests/test_auth_e2e.py": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0006177479990583379, "testdox_title": "Failure: Get current user without authentication", "testdox_class_name": "GET Route: /me", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_new_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 36, "TestCreateUser.test_create_new_user"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestCreateUser": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_new_user": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10813694500029669, "testdox_title": "Success: Create a new user", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_new_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 36, "TestCreateUser.test_create_new_user"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestCreateUser": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_new_user": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.05799172100159922, "testdox_title": "Success: Create a new user", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_new_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 36, "TestCreateUser.test_create_new_user"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestCreateUser": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_new_user": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001382669979648199, "testdox_title": "Success: Create a new user", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_with_same_email", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 61, "TestCreateUser.test_create_user_with_same_email"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestCreateUser": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_user_with_same_email": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022364300093613565, "testdox_title": "Failure: Create a new user with email that already exists", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_with_same_email", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 61, "TestCreateUser.test_create_user_with_same_email"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestCreateUser": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_user_with_same_email": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003705451999849174, "testdox_title": "Failure: Create a new user with email that already exists", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_with_same_email", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 61, "TestCreateUser.test_create_user_with_same_email"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestCreateUser": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_user_with_same_email": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001302029995713383, "testdox_title": "Failure: Create a new user with email that already exists", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 76, "TestCreateUser.test_create_user_without_required_field"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestCreateUser": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_user_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.10521033199984231, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 76, "TestCreateUser.test_create_user_without_required_field"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestCreateUser": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_user_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001976618001208408, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUser::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 76, "TestCreateUser.test_create_user_without_required_field"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "TestCreateUser": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_user_without_required_field": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001264710008399561, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_new_user_with_role", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 104, "TestCreateUserWithRole.test_create_new_user_with_role"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_new_user_with_role": 1, "TestCreateUserWithRole": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021721599841839634, "testdox_title": "Success: Create a new user with role in body", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_new_user_with_role", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 104, "TestCreateUserWithRole.test_create_new_user_with_role"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_new_user_with_role": 1, "TestCreateUserWithRole": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.057347304002178134, "testdox_title": "Success: Create a new user with role in body", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_new_user_with_role", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 104, "TestCreateUserWithRole.test_create_new_user_with_role"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_new_user_with_role": 1, "TestCreateUserWithRole": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013485599993146025, "testdox_title": "Success: Create a new user with role in body", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 130, "TestCreateUserWithRole.test_create_user_without_required_field"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_user_without_required_field": 1, "TestCreateUserWithRole": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002551809993747156, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 130, "TestCreateUserWithRole.test_create_user_without_required_field"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_user_without_required_field": 1, "TestCreateUserWithRole": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0021312479984771926, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestCreateUserWithRole::test_create_user_without_required_field", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 130, "TestCreateUserWithRole.test_create_user_without_required_field"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_create_user_without_required_field": 1, "TestCreateUserWithRole": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015390800035675056, "testdox_title": "Failure: Create a user without required fields", "testdox_class_name": "POST Route: /user/with-role/create", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_get_all_users", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 159, "TestGetAllUsers.test_get_all_users"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllUsers": 1, "test_get_all_users": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022897199960425496, "testdox_title": "Success: Get a list of all existing users", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_get_all_users", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 159, "TestGetAllUsers.test_get_all_users"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllUsers": 1, "test_get_all_users": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.008623428002465516, "testdox_title": "Success: Get a list of all existing users", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_get_all_users", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 159, "TestGetAllUsers.test_get_all_users"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllUsers": 1, "test_get_all_users": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001558860021759756, "testdox_title": "Success: Get a list of all existing users", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 173, "TestGetAllUsers.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00026667800193536095, "testdox_title": "Failure: Get a list of all users without authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 173, "TestGetAllUsers.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013958849995105993, "testdox_title": "Failure: Get a list of all users without authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 173, "TestGetAllUsers.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestGetAllUsers": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001229939989570994, "testdox_title": "Failure: Get a list of all users without authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_common]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllUsers": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002652160001161974, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_common]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllUsers": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0013933910013292916, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_common]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "TestGetAllUsers": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014757600001757964, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_nutritionist]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllUsers": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.000339205998898251, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_nutritionist]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllUsers": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001670435998676112, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetAllUsers::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 178, "TestGetAllUsers.test_different_required_authentication[user_nutritionist]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestGetAllUsers": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001629860016691964, "testdox_title": "Failure: Get a list of all users with non required authentication", "testdox_class_name": "GET Route: /user/get", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_get_user_by_id", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 192, "TestGetUserById.test_get_user_by_id"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_user_by_id": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002688389977265615, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_get_user_by_id", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 192, "TestGetUserById.test_get_user_by_id"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_user_by_id": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.003995867002231535, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_get_user_by_id", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 192, "TestGetUserById.test_get_user_by_id"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_get_user_by_id": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013738899724557996, "testdox_title": "Success: Get one user by id", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 209, "TestGetUserById.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021365099746617489, "testdox_title": "Failure: Get one user without authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 209, "TestGetUserById.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001812923997931648, "testdox_title": "Failure: Get one user without authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 209, "TestGetUserById.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001347739998891484, "testdox_title": "Failure: Get one user without authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_common]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002729700026975479, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_common]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0019071300012001302, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_common]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_common]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_different_required_authentication[user_common]": 1, "user_common": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013126300109433942, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_nutritionist]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00028268899768590927, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_nutritionist]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0020057250003446825, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestGetUserById::test_different_required_authentication[user_nutritionist]", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 214, "TestGetUserById.test_different_required_authentication[user_nutritionist]"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "TestGetUserById": 1, "test_different_required_authentication[user_nutritionist]": 1, "()": 1, "describe": 1, "parametrize": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "user_nutritionist": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013597400175058283, "testdox_title": "Failure: Get one user with non required authentication", "testdox_class_name": "GET Route: /user/get/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 228, "TestDeleteUser.test_delete_user_common"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "test_delete_user_common": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00020938500165357254, "testdox_title": "Success: Delete user common", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 228, "TestDeleteUser.test_delete_user_common"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "test_delete_user_common": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.08068672000081278, "testdox_title": "Success: Delete user common", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 228, "TestDeleteUser.test_delete_user_common"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "test_delete_user_common": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00014288899910752662, "testdox_title": "Success: Delete user common", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common_relations", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 249, "TestDeleteUser.test_delete_user_common_relations"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_delete_user_common_relations": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023044100089464337, "testdox_title": "Success: Check if all relation from user common, was deleted", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common_relations", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 249, "TestDeleteUser.test_delete_user_common_relations"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_delete_user_common_relations": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007363519001955865, "testdox_title": "Success: Check if all relation from user common, was deleted", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_user_common_relations", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 249, "TestDeleteUser.test_delete_user_common_relations"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_delete_user_common_relations": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001453180011594668, "testdox_title": "Success: Check if all relation from user common, was deleted", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 277, "TestDeleteUser.test_delete_same_user"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_delete_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.0002339530001336243, "testdox_title": "Failure: Delete the same user twice", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 277, "TestDeleteUser.test_delete_same_user"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_delete_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0037460120001924224, "testdox_title": "Failure: Delete the same user twice", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 277, "TestDeleteUser.test_delete_same_user"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_delete_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013093800225760788, "testdox_title": "Failure: Delete the same user twice", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 290, "TestDeleteUser.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021106499843881465, "testdox_title": "Failure: Delete user without authentication", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 290, "TestDeleteUser.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.001147132999903988, "testdox_title": "Failure: Delete user without authentication", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestDeleteUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 290, "TestDeleteUser.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestDeleteUser": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001145310015999712, "testdox_title": "Failure: Delete user without authentication", "testdox_class_name": "DELETE Route: /user/delete", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_user_nutri", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 300, "TestUpdateUser.test_update_user_nutri"], "keywords": {"test_update_user_nutri": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022409899975173175, "testdox_title": "Success: Update user nutritionist", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_user_nutri", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 300, "TestUpdateUser.test_update_user_nutri"], "keywords": {"test_update_user_nutri": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.010802764998516068, "testdox_title": "Success: Update user nutritionist", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_user_nutri", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 300, "TestUpdateUser.test_update_user_nutri"], "keywords": {"test_update_user_nutri": 1, "src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013793600010103546, "testdox_title": "Success: Update user nutritionist", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_with_email_already_deleted", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 326, "TestUpdateUser.test_update_with_email_already_deleted"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_update_with_email_already_deleted": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00023390799833578058, "testdox_title": "Success: Update user with deleted user email", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_with_email_already_deleted", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 326, "TestUpdateUser.test_update_with_email_already_deleted"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_update_with_email_already_deleted": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.011914976999833016, "testdox_title": "Success: Update user with deleted user email", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_with_email_already_deleted", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 326, "TestUpdateUser.test_update_with_email_already_deleted"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_update_with_email_already_deleted": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0001312320018769242, "testdox_title": "Success: Update user with deleted user email", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_email_exists", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 351, "TestUpdateUser.test_update_email_exists"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_update_email_exists": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00022767200061935, "testdox_title": "Failure: Update user with email that already exists", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_email_exists", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 351, "TestUpdateUser.test_update_email_exists"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_update_email_exists": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.007085475001076702, "testdox_title": "Failure: Update user with email that already exists", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_update_email_exists", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 351, "TestUpdateUser.test_update_email_exists"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_update_email_exists": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00015970700042089447, "testdox_title": "Failure: Update user with email that already exists", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 379, "TestUpdateUser.test_delete_same_user"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_delete_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00035833799847750925, "testdox_title": "Failure: Update deleted user", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 379, "TestUpdateUser.test_delete_same_user"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_delete_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.004205599998385878, "testdox_title": "Failure: Update deleted user", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_delete_same_user", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 379, "TestUpdateUser.test_delete_same_user"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "test_delete_same_user": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00019167899881722406, "testdox_title": "Failure: Update deleted user", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 393, "TestUpdateUser.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00021170900072320364, "testdox_title": "Failure: Update user without authentication", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 393, "TestUpdateUser.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0011296500015305355, "testdox_title": "Failure: Update user without authentication", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"nodeid": "src/modules/infrastructure/user/tests/test_user_e2e.py::TestUpdateUser::test_no_authentication", "location": ["src/modules/infrastructure/user/tests/test_user_e2e.py", 393, "TestUpdateUser.test_no_authentication"], "keywords": {"src/modules/infrastructure/user/tests/test_user_e2e.py": 1, "pytestmark": 1, "()": 1, "describe": 1, "aquavitae-app": 1, "it": 1, "asyncio": 1, "test_no_authentication": 1, "TestUpdateUser": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0030910589994164184, "testdox_title": "Failure: Update user without authentication", "testdox_class_name": "PATCH Route: /user/update/<id>", "$report_type": "TestReport"}
{"exitstatus": 0, "$report_type": "SessionFinish"}
